[
  {
    "table": "Functional Attributes",
    "attrs": [
      {
        "description": "Whether to set the chart in view mode or edit mode. In view mode, end users will only be able to drag the nodes (which are marked as drag-able). In edit mode, they can add/delete nodes or add/delete connectors.",
        "range": "0/1",
        "type": "Boolean",
        "name": "viewMode"
      },
      {
        "description": "Sets whether the __Restore__ button, rendered in the bottom left corner of the drag-node chart, should be shown or hidden \n\n__Default value__: 1 (the button is shown)",
        "range": "0/1",
        "type": "Boolean",
        "name": "showRestoreBtn"
      },
      {
        "description": "If there are any links defined on the nodes, you can opt to start the chart in link mode (rather than dragging mode) by setting this attribute as 1. Your users can, at runtime, toggle between link mode and drag mode using the right-click context menu of chart.",
        "range": "0/1",
        "type": "Boolean",
        "name": "enableLinks"
      },
      {
        "description": "This attribute lets you set the configuration whether the chart should appear in an animated fashion. If you do not want to animate any part of the chart, set this as 0.",
        "range": "0/1",
        "type": "Boolean",
        "name": "animation"
      },
      {
        "description": "This attribute sets the animation duration of the chart. `animationDuration` attribute is applicable only if animation of the chart is enabled. \n\nDefault value: 1 sec",
        "range": "In seconds",
        "type": "Number",
        "Versionsince": "3.11.0",
        "name": "animationDuration"
      },
      {
        "description": "Each chart has 5 pre-defined color palettes which you can choose from. Each palette renders the chart in a different color theme. ",
        "range": "1-5",
        "type": "Number",
        "name": "palette"
      },
      {
        "description": "While the `palette` attribute allows to select a palette theme that applies to chart background, canvas, font and tool-tips, it does not change the colors of data items (that is, column, line, pie etc.). Using `paletteColors` attribute, you can specify your custom list of hex colors for the data items. The list of colors have to be separated by comma, for example, `\"paletteColors\": \"#FF0000, #0372AB, #FF5904...\"`. The chart will cycle through the list of specified colors and then render the data plot accordingly. To use the same set of colors throughout all your charts in a web application, you can store the list of palette colors in your application globally and then provide the same in each chart JSON.",
        "range": "List of hex color codes separated by comma",
        "type": "String",
        "name": "paletteColors"
      },
      {
        "description": "Whether to show chart limit values.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showLimits"
      },
      {
        "description": "Whether to show div line values.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showDivLineValues"
      },
      {
        "description": "Whether to use 3D lighting effects while filling the nodes.",
        "range": "0/1",
        "type": "Boolean",
        "name": "use3DLighting"
      },
      {
        "description": "The entire chart can now act as a hotspot. Use this URL to define the hotspot link for the chart. The link can be specified in FusionCharts Link Format.",
        "range": "",
        "type": "String",
        "name": "clickURL"
      },
      {
        "description": "Sets whether the `clickURL` attribute (that sets a link to which the user is directed when the chart is clicked) overrides the `link` attribute (that sets a link to which the user is directed when a data plot is clicked). \n\nDefault value: 0 (`clickURL` does not override `link`)",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.7.0",
        "name": "clickURLOverridesPlotLinks"
      },
      {
        "description": "When you right click on the chart it shows a context menu. This attribute allows you to show or hide the \"Print\" option in the context menu.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showPrintMenuItem"
      },
      {
        "description": "Internally the chart decodes a Url that you set as link. Before invoking the link it again encodes the Url. If you are passing multilingual characters via a Url or do not want this decode-encode mechanism to be handled by chart you can set,`unescapeLinks='0'`.",
        "range": "0/1",
        "type": "Boolean",
        "name": "unescapeLinks"
      },
      {
        "description": "The chart automatically tries to adjust divisional lines and limit values based on the data provided. However, if you want to set your explicit lower and upper limit values and number of divisional lines, first set this attribute to false. That would disable automatic adjustment of divisional lines.",
        "range": "0/1",
        "type": "Boolean",
        "name": "adjustDiv"
      },
      {
        "description": "This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. ",
        "range": "",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "hasRTLText"
      },
      {
        "description": "This attribute lets you enable/disable the highlight effect, in the form of a `fadeout`, for the data plots corresponding to a legend item. When this attribute is enabled and the mouse pointer is hovered over a legend item label, plots belonging to the other data series fadeout, by reducing their opacity.\n\n The fadeout effect can be customized by specifying the fadeout color and opacity using the `color` and `alpha` attributes. Eg. `fadeout|color=#ff0000, alpha=60`",
        "range": "",
        "type": "String",
        "name": "plotHighlightEffect"
      },
      {
        "description": "This attribute changes the theme of the chart. There are 7 types of themes which have been made according to the different color combinations.",
        "range": "'fusion', 'gammel', 'candy', 'ocean', 'zune', 'carbon', 'umber'",
        "type": "String",
        "name": "theme"
      }
    ],
    "description": "These attributes let you control a variety of functional elements on the chart. For example, you can opt to show or hide data labels, data values. You can also set chart limits and extended properties. "
  },
  {
    "table": "Chart Message-related Attributes",
    "path": "FusionCharts",
    "attrs": [
      {
        "description": "This attribute allows to set a custom font for all chart messages.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "baseChartMessageFont"
      },
      {
        "description": "This attribute allows to set a custom font size for all chart messages.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "baseChartMessageFontSize"
      },
      {
        "description": "This attribute allows to set a custom font color for all chart messages.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.5.0",
        "name": "baseChartMessageColor"
      },
      {
        "description": "This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle",
        "range": "left, middle, right",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "baseChartMessageImageHAlign"
      },
      {
        "description": "This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle",
        "range": "top, middle, bottom",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "baseChartMessageImageVAlign"
      },
      {
        "description": "This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "baseChartMessageImageAlpha"
      },
      {
        "description": "This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "baseChartMessageImageScale"
      },
      {
        "description": "This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.",
        "range": "",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "loadMessage"
      },
      {
        "description": "This attribute allows to set the font for the message displayed when a chart begins to load.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "loadMessageFont"
      },
      {
        "description": "This attribute allows to set the font size for the message displayed when a chart begins to load.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "loadMessageFontSize"
      },
      {
        "description": "This attribute allows to set the font color for the message displayed when a chart begins to load.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.5.0",
        "name": "loadMessageColor"
      },
      {
        "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
        "range": "left, middle, right",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "loadMessageImageHAlign"
      },
      {
        "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
        "range": "top, middle, bottom",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "loadMessageImageVAlign"
      },
      {
        "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "loadMessageImageAlpha"
      },
      {
        "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "loadMessageImageScale"
      },
      {
        "description": "This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.",
        "range": "",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "typeNotSupportedMessage"
      },
      {
        "description": "This attribute allows to set the font for the message displayed when the specified chart type is not supported.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "typeNotSupportedMessageFont"
      },
      {
        "description": "This attribute allows to set the font size for the message displayed when the specified chart type is not supported.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "typeNotSupportedMessageFontSize"
      },
      {
        "description": "This attribute allows to set the font color for the message displayed when the specified chart type is not supported.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.5.0",
        "name": "typeNotSupportedMessageColor"
      },
      {
        "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
        "range": "left, middle, right",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "typeNotSupportedMessageImageHAlign"
      },
      {
        "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
        "range": "top, middle, bottom",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "typeNotSupportedMessageImageVAlign"
      },
      {
        "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "typeNotSupportedMessageImageAlpha"
      },
      {
        "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "typeNotSupportedMessageImageScale"
      },
      {
        "description": "This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.",
        "range": "",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "renderErrorMessage"
      },
      {
        "description": "This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "renderErrorMessageFont"
      },
      {
        "description": "This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "renderErrorMessageFontSize"
      },
      {
        "description": "This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.5.0",
        "name": "renderErrorMessageColor"
      },
      {
        "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
        "range": "left, middle, right",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "renderErrorMessageImageHAlign"
      },
      {
        "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
        "range": "top, middle, bottom",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "renderErrorMessageImageVAlign"
      },
      {
        "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "renderErrorMessageImageAlpha"
      },
      {
        "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "renderErrorMessageImageScale"
      },
      {
        "description": "This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.",
        "range": "",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataLoadStartMessage"
      },
      {
        "description": "This attribute allows to set a font for the message displayed when chart data begins loading.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "dataLoadStartMessageFont"
      },
      {
        "description": "This attribute allows to set the font size for the message displayed when chart data begins loading.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "dataLoadStartMessageFontSize"
      },
      {
        "description": "This attribute allows to set the font color for the message displayed when chart data begins loading.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.5.0",
        "name": "dataLoadStartMessageColor"
      },
      {
        "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
        "range": "left, middle, right",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataLoadStartMessageImageHAlign"
      },
      {
        "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
        "range": "top, middle, bottom",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataLoadStartMessageImageVAlign"
      },
      {
        "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "dataLoadStartMessageImageAlpha"
      },
      {
        "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "dataLoadStartMessageImageScale"
      },
      {
        "description": "This attribute allows to set the message to be displayed if the data loaded for a chart is empty. To display an image as the chart message, prefix __I-__ to the image URL.",
        "range": "",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataEmptyMessage"
      },
      {
        "description": "This attribute allows to set the font for the message displayed if the data loaded for a chart is empty",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "dataEmptyMessageFont"
      },
      {
        "description": "This attribute allows to set the font size for the message displayed if the data loaded for a chart is empty.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "dataEmptyMessageFontSize"
      },
      {
        "description": "This attribute allows to set the font color for the message displayed if the data loaded for a chart is empty.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.5.0",
        "name": "dataEmptyMessageColor"
      },
      {
        "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
        "range": "left, middle, right",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataEmptyMessageImageHAlign"
      },
      {
        "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
        "range": "top, middle, bottom",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataEmptyMessageImageVAlign"
      },
      {
        "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "dataEmptyMessageImageAlpha"
      },
      {
        "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "dataEmptyMessageImageScale"
      },
      {
        "description": "This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.",
        "range": "",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataLoadErrorMessage"
      },
      {
        "description": "This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "dataLoadErrorMessageFont"
      },
      {
        "description": "This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "dataLoadErrorMessageFontSize"
      },
      {
        "description": "This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.5.0",
        "name": "dataLoadErrorMessageColor"
      },
      {
        "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
        "range": "left, middle, right",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataLoadErrorMessageImageHAlign"
      },
      {
        "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
        "range": "top, middle, bottom",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataLoadErrorMessageImageVAlign"
      },
      {
        "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "dataLoadErrorMessageImageAlpha"
      },
      {
        "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "dataLoadErrorMessageImageScale"
      },
      {
        "description": "This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.",
        "range": "",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataInvalidMessage"
      },
      {
        "description": "This attribute allows to set the font for the message displayed if the specified chart data is invalid.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "dataInvalidMessageFont"
      },
      {
        "description": "This attribute allows to set the font size for the message displayed if the specified chart data is invalid.",
        "range": "",
        "type": "String",
        "versionsince": "3.5.0",
        "name": "dataInvalidMessageFontSize"
      },
      {
        "description": "This attribute allows to set the font color for the message displayed if the specified chart data is invalid.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.5.0",
        "name": "dataInvalidMessageColor"
      },
      {
        "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
        "range": "left, middle, right",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataInvalidMessageImageHAlign"
      },
      {
        "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
        "range": "top, middle, bottom",
        "type": "String",
        "versionsince": "3.7.0",
        "name": "dataInvalidMessageImageVAlign"
      },
      {
        "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "dataInvalidMessageImageAlpha"
      },
      {
        "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.7.0",
        "name": "dataInvalidMessageImageScale"
      }
    ],
    "description": "These attributes let you set and configure custom chart messages, using text as well as images. These attributes are supported in FusionCharts constructor (`FusionCharts({ })`)."
  },
  {
    "table": "Form & Menu Option",
    "attrs": [
      {
        "description": "If you want the user to be able to submit the data as form, you need to set this attribute to 1. If you are using JavaScript methods to get the data from chart, you can hide this option by setting this attribute to 0.",
        "range": "0/1",
        "type": "Boolean",
        "name": "enableSubmit"
      },
      {
        "description": "URL of your Server-side script to which you want to submit data. You can either use relative path or absolute path. The name of form variable which is to be requested in this page is `strXML`. If `submitFormUsingAjax` attribute is set to `1`, the `formAction` attribute will not work.",
        "range": " ",
        "type": "String",
        "name": "formAction"
      },
      {
        "description": "Method of form submission - POST or GET. We recommend POST method if you're submitting data as XML.",
        "range": "GET or POST",
        "type": "String",
        "name": "formMethod"
      },
      {
        "description": "Target of the form - _blank or _self. If `submitFormUsingAjax` attribute is set to `1`, the `formTarget` attribute will not work.",
        "range": " ",
        "type": "String",
        "name": "formTarget"
      },
      {
        "description": "Lets you configure the text for the submit option. By default, it is \"Submit\".",
        "range": " ",
        "type": "String",
        "name": "submitText"
      },
      {
        "description": "When the __Submit__ button in drag-able charts is clicked, instead of setting a new URL or a new tab for data values, this attribute (when set to `1`) updates the data in the existing page internally. \n\n __Note__: If `submitFormUsingAjax` is set to `1`, the `formTarget` attribute will not work.",
        "range": "0/1",
        "type": "Boolean",
        "name": "submitFormUsingAjax"
      },
      {
        "description": "Whether to add the restore option in the menu.",
        "range": "0/1",
        "type": "Boolean",
        "name": "enableRestore"
      },
      {
        "description": "Lets you configure the text for the restore option. By default, it's \"Restore\"",
        "range": "",
        "type": "String",
        "name": "restoreText"
      }
    ],
    "description": "The drag-node charts allow you to submit the updated data on chart to a form (or JavaScript functions). Using the attributes below, you can configure the form and submit option in menu. The drag chart also allows a \"Restore Chart\" option whose properties can be configured using the attributes listed below. "
  },
  {
    "table": "Chart Titles",
    "attrs": [
      {
        "description": "Caption of the chart.",
        "type": "String",
        "name": "caption"
      },
      {
        "description": "Sub-caption of the chart.",
        "type": "String",
        "name": "subCaption"
      }
    ],
    "description": "Using these attributes, you can set the various headings of chart like caption and sub-caption, etc. "
  },
  {
    "table": "Chart Caption Cosmetics",
    "attrs": [
      {
        "description": "Sets horizontal alignment of caption",
        "range": "\"left\", \"center\", \"right\"",
        "type": "String",
        "name": "captionAlignment"
      },
      {
        "description": "Whether caption should be on top of the data plot area",
        "range": "0/1",
        "type": "Boolean",
        "name": "captionOnTop"
      },
      {
        "description": "Sets the caption font size in pixels. Besides pixels (px) values can also be defined in rem, %, em, and vw.",
        "range": "0 - 72",
        "type": "Number",
        "name": "captionFontSize"
      },
      {
        "description": "Sets the sub-caption font size (in pixels). Besides pixels (px) values can also be defined in rem, %, em, and vw.",
        "range": "0 - 72",
        "type": "Number",
        "name": "subCaptionFontSize"
      },
      {
        "description": "Sets the caption font family",
        "range": "Font Name",
        "type": "String",
        "name": "captionFont"
      },
      {
        "description": "Sets the sub-caption font family",
        "range": "Font Name",
        "type": "String",
        "name": "subCaptionFont"
      },
      {
        "description": "Sets the caption font color",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "captionFontColor"
      },
      {
        "description": "Sets the sub-caption font color",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "subCaptionFontColor"
      },
      {
        "description": "Whether the caption font should be displayed in bold",
        "range": "0/1",
        "type": "Boolean",
        "name": "captionFontBold"
      },
      {
        "description": "Whether the sub caption font should be displayed in bold",
        "range": "0/1",
        "type": "Boolean",
        "name": "subCaptionFontBold"
      },
      {
        "description": "Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area",
        "range": "0/1",
        "type": "Boolean",
        "name": "alignCaptionWithCanvas"
      },
      {
        "description": "If caption is not centre aligned, lets you configure the padding (in pixels) from either edge.\nWill be ignored if caption is centre aligned.",
        "range": "In Pixels",
        "type": "Number",
        "name": "captionHorizontalPadding"
      }
    ],
    "description": "These attributes let you configure the cosmetics of chart caption and sub-caption."
  },
  {
    "table": "Chart Cosmetics",
    "attrs": [
      {
        "description": "Whether to show a border around the chart or not.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showBorder"
      },
      {
        "description": "Border color of the chart.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "borderColor"
      },
      {
        "description": "Border thickness of the chart.",
        "range": "In Pixels",
        "type": "Number",
        "name": "borderThickness"
      },
      {
        "description": "Border alpha of the chart.",
        "range": "0-100",
        "type": "Number",
        "name": "borderAlpha"
      },
      {
        "description": "If you have opted to show a label for any of your vLines in the chart, you can collectively configure whether to show border for all such labels using this attribute. If you want to show label border for just a particular vLine, you can over-ride this value by specifying border configuration for that specific vLine.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showVLineLabelBorder"
      },
      {
        "description": "This attribute lets you set whether the vline labels will show up as rotated labels on the chart. \n\nDefault value: 0",
        "range": "0/1",
        "type": "Boolean",
        "name": "rotateVLineLabels"
      },
      {
        "description": "This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `#FF5904, #FFFFFF`.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "bgColor"
      },
      {
        "description": "Sets the alpha (transparency) for the background. If you have opted for gradient background, you need to set a list of alpha(s) separated by comma.",
        "range": "0-100",
        "type": "Number",
        "name": "bgAlpha"
      },
      {
        "description": "If you have opted for a gradient background, this attribute lets you set the ratio of each color constituent.",
        "range": "0-100",
        "type": "Number",
        "name": "bgRatio"
      },
      {
        "description": "Angle of the background color, in case of a gradient.",
        "range": "0-360",
        "type": "Number",
        "name": "bgAngle"
      },
      {
        "description": "To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.",
        "range": "",
        "type": "String",
        "versionsince": "3.2.",
        "name": "bgImage"
      },
      {
        "description": "This attribute specifies the opacity for the loaded background image.",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.2.",
        "name": "bgImageAlpha"
      },
      {
        "description": "Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.",
        "range": "stretch, tile, fit, fill, center, none",
        "type": "String",
        "versionsince": "3.2.1",
        "name": "bgImageDisplayMode"
      },
      {
        "description": "Helps you to vertically align the background image.",
        "range": "left, center, right",
        "type": "String",
        "versionsince": "3.2.1",
        "name": "bgImageValign"
      },
      {
        "description": "Helps you to horizontally align the background image.",
        "range": "left, center, right",
        "type": "String",
        "versionsince": "3.2.1",
        "name": "bgImageHalign"
      },
      {
        "description": "This attribute if set to _1_, shows a border around the canvas of the chart. \n\n__Default value__: 0",
        "range": "0/1",
        "type": "Boolean",
        "name": "showcanvasborder"
      },
      {
        "description": "Helps you magnify the background image.This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.",
        "range": "0-300",
        "type": "Number",
        "versionsince": "3.2.1",
        "name": "bgImageScale"
      },
      {
        "description": "This attribute sets the background color for the chart canvas. You can set any hex color code as the value of this attribute. To specify a gradient as canvas background color, separate the hex color codes of each color in the gradient using comma. Example: #FF5904, #FFFFFF.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "canvasBgColor"
      },
      {
        "description": "This attribute sets the background transparency for the chart canvas. For gradient, separate the alpha value using comma. Example: 15, 50.",
        "range": "0-100",
        "type": "Number",
        "name": "canvasBgAlpha"
      },
      {
        "description": "When a gradient is used to set the color of the canvas background, this attribute sets the ratio of the colors. Example : If the value of the `canvasBgColor` attribute is set as `#FF5904, #FFFFFF`, `canvasBgRatio` can be used to specify their ratio in the background.",
        "range": "0 - 100",
        "type": "Numbers separated by comma",
        "name": "canvasBgRatio"
      },
      {
        "description": "Helps you specify canvas background angle in case of gradient.",
        "range": "0-360",
        "type": "Number",
        "name": "canvasBgAngle"
      },
      {
        "description": "Lets you specify canvas border color.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "canvasBorderColor"
      },
      {
        "description": "Lets you specify canvas border thickness.",
        "range": "0-5",
        "type": "Number",
        "name": "canvasBorderThickness"
      },
      {
        "description": "Lets you control transparency of canvas border.",
        "range": "0-100",
        "type": "Number",
        "name": "canvasBorderAlpha"
      },
      {
        "description": "You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.",
        "range": "URL",
        "type": "String",
        "name": "logoURL"
      },
      {
        "description": "This attribute helps you set the amount of empty space that you want to put on the left side of your logo image. Nothing is rendered in this space.",
        "range": "In Pixels",
        "type": "Number",
        "name": "logoLeftMargin"
      },
      {
        "description": "This attribute helps you set the amount of empty space that you want to put on top of your logo image. Nothing is rendered in this space.",
        "range": "In Pixels",
        "type": "Number",
        "name": "logoTopMargin"
      },
      {
        "description": "Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen",
        "range": "TL, TR, BL, BR, CC",
        "type": "String",
        "name": "logoPosition"
      },
      {
        "description": "Once the logo has loaded on the chart, you can configure its opacity using this attribute.",
        "range": "0-100",
        "type": "Number",
        "name": "logoAlpha"
      },
      {
        "description": "You can also change the scale of an externally loaded logo at run-time by specifying a value for this parameter.",
        "range": "0-300",
        "type": "Number",
        "name": "logoScale"
      },
      {
        "description": "If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts Link Format, allowing you to link to new windows, pop-ups, frames etc.",
        "range": "URL",
        "type": "String",
        "name": "logoLink"
      }
    ],
    "description": "The following attributes let you configure chart cosmetics like background color, background alpha, canvas color & alpha etc. "
  },
  {
    "table": "Data Plot Cosmetics",
    "attrs": [
      {
        "description": "Whether to use 3D lighting effects while filling the nodes.",
        "range": "0/1",
        "type": "Boolean",
        "name": "is3D"
      },
      {
        "description": "Whether the node borders would show up. This attribute is used to show or hide the plot border and it is configurable at the chart instance, data plot, and data-series levels.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showPlotBorder"
      },
      {
        "description": "Color for node borders. This attribute is used to specify the color for the plot border at the chart instance level.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "plotBorderColor"
      },
      {
        "description": "Thickness for node borders. This attribute is used to specify the thickness for the plot border at chart instance, data plot, and data-series levels.",
        "range": "0-5 (Pixels)",
        "type": "Number",
        "name": "plotBorderThickness"
      },
      {
        "description": "Alpha for node borders. This attribute is used to specify the opacity for the plot border at the chart instance level, data plot, and data-series levels.",
        "range": "0-100",
        "type": "Number",
        "name": "plotBorderAlpha"
      },
      {
        "description": "If you have opted to fill the node as gradient, this attribute lets you set the fill alpha for gradient. If you've opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the fill alpha for gradient.",
        "range": "0-100",
        "type": "Number",
        "name": "plotFillAlpha"
      }
    ],
    "description": "These attributes let you configure how your nodes would appear on the chart. "
  },
  {
    "table": "Data Value Cosmetics",
    "attrs": [
      {
        "description": "Sets the font of the values in the chart",
        "range": "Font Name",
        "type": "String",
        "name": "valueFont"
      },
      {
        "description": "Specifies the value font color",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "valueFontColor"
      },
      {
        "description": "Specifies the value font size. Besides pixels (px) values can also be defined in rem, %, em, and vw.",
        "range": "0 - 72",
        "type": "Number",
        "name": "valueFontSize"
      },
      {
        "description": "Whether value font should be bold",
        "range": "0/1",
        "type": "Boolean",
        "name": "valueFontBold"
      },
      {
        "description": "Whether value font should be italicized",
        "range": "0/1",
        "type": "Boolean",
        "name": "valueFontItalic"
      },
      {
        "description": "Sets the background color for value text",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "valueBgColor"
      },
      {
        "description": "Sets the border color around the value text",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "valueBorderColor"
      },
      {
        "description": "Sets the value alpha including font and background",
        "range": "0-100",
        "type": "Number",
        "name": "valueAlpha"
      },
      {
        "description": "Sets the value font alpha",
        "range": "0-100",
        "type": "Number",
        "name": "valueFontAlpha"
      },
      {
        "description": "Sets the value background alpha",
        "range": "0-100",
        "type": "Number",
        "name": "valueBgAlpha"
      },
      {
        "description": "Sets the value border alpha",
        "range": "0-100",
        "type": "Number",
        "name": "valueBorderAlpha"
      },
      {
        "description": "Sets the value border thickness",
        "range": "In Pixels",
        "type": "Number",
        "name": "valueBorderThickness"
      },
      {
        "description": "Sets the padding between the value and its surrounding border",
        "range": "In Pixels",
        "type": "Number",
        "name": "valueBorderPadding"
      },
      {
        "description": "Sets the value border radius",
        "range": "In Pixels",
        "type": "Number",
        "name": "valueBorderRadius"
      },
      {
        "description": "Whether the border around the data values should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
        "range": "0/1",
        "type": "Boolean",
        "name": "valueBorderDashed"
      },
      {
        "description": "Sets the length of each dash when the border around the data values is rendered using dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "valueBorderDashLen"
      },
      {
        "description": "Sets the gap between two consecutive dashes when the border around the data values is rendered using dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "valueBorderDashGap"
      },
      {
        "description": "Set this attribute to `1` to draw a border on the data value text. \n\nDefault value: 0",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.14.0",
        "name": "textOutline"
      }
    ],
    "description": "These attributes let you configure font, background and border cosmetics, of value text-field that appear for each data plot."
  },
  {
    "table": "Legend Properties",
    "attrs": [
      {
        "description": "Whether to show legend for the chart.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showLegend"
      },
      {
        "description": "Whether legend keys should be displayed in bold",
        "range": "0/1",
        "type": "Boolean",
        "name": "legendItemFontBold"
      },
      {
        "description": "Sets legend item font",
        "range": "Font Name",
        "type": "String",
        "name": "legendItemFont"
      },
      {
        "description": "Sets legend item font size",
        "range": "0 - 72",
        "type": "Number",
        "name": "legendItemFontSize"
      },
      {
        "description": "Sets legend item font color",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "legendItemFontColor"
      },
      {
        "description": "Sets legend item font color on hover",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "legendItemHoverFontColor"
      },
      {
        "description": "The legend can be plotted at different positions with respect to the chart. Note that if the value of `legendPosition` is set to `absolute`, you also need to set the coordinates of the legend. You can do that using the attributes `legendXPosition` and `legendYPosition`, both of which accept absolute or percentage values.",
        "range": "bottom, right, top, top-left, top-right, bottom-left, bottom-right, left, left-top, left-bottom, right, right-top, right-bottom, and absolute",
        "type": "String",
        "name": "legendPosition"
      },
      {
        "description": "When the value of `legendPosition` is set to `absolute`, use this attribute to set the X-coordinate of the legend. It accepts absolute or percentage values. By default, its value is set to `0`.",
        "range": "0 to chart width (in pixels)",
        "type": "Number",
        "name": "legendXPosition"
      },
      {
        "description": "When the value of `legendPosition` is set to `absolute`, use this attribute to set the Y-coordinate of the legend. It accepts absolute or percentage values. By default, its value is set to `0`.",
        "range": "0 to chart height (in pixels)",
        "type": "Number",
        "name": "legendYPosition"
      },
      {
        "description": "Sets the number of rows the legend should display.",
        "range": "",
        "type": "Number",
        "name": "legendNumRows"
      },
      {
        "description": "Sets the number of columns the legend should display.",
        "range": "",
        "type": "Number",
        "name": "legendNumColumns"
      },
      {
        "description": "Sets the legend caption horizontal alignment .",
        "range": "\"left\", \"center\", \"right\"",
        "type": "String",
        "name": "legendCaptionAlignment"
      },
      {
        "description": "Whether legend caption should be displayed in bold",
        "range": "0/1",
        "type": "Boolean",
        "name": "legendCaptionFontBold"
      },
      {
        "description": "Sets legend caption font",
        "range": "Font Name",
        "type": "String",
        "name": "legendCaptionFont"
      },
      {
        "description": "Sets legend caption font size",
        "range": "0 - 72",
        "type": "Number",
        "name": "legendCaptionFontSize"
      },
      {
        "description": "Sets legend caption font color",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "legendCaptionFontColor"
      },
      {
        "description": "You can add a caption for the entire legend by setting the same here.",
        "range": " ",
        "type": "String",
        "name": "legendCaption"
      },
      {
        "description": "Sets the color that applies on both text font and icon when they are in a  disabled / hidden state",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "legendItemHiddenColor"
      },
      {
        "description": "Scaling of legend icon is possible starting PowerCharts XT. This attribute lets you control the size of legend icon.",
        "range": "1-5",
        "type": "Number",
        "versionsince": "3.2",
        "name": "legendIconScale"
      },
      {
        "description": "Background color for the legend.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "legendBgColor"
      },
      {
        "description": "Background alpha for the legend.",
        "range": "0-100",
        "type": "Number",
        "name": "legendBgAlpha"
      },
      {
        "description": "Border Color for the legend.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "legendBorderColor"
      },
      {
        "description": "Border thickness for the legend.",
        "range": "In Pixels",
        "type": "Number",
        "name": "legendBorderThickness"
      },
      {
        "description": "Border alpha for the legend.",
        "range": "0-100",
        "type": "Number",
        "name": "legendBorderAlpha"
      },
      {
        "description": "Whether to show a shadow for legend.",
        "range": "0/1",
        "type": "Boolean",
        "name": "legendShadow"
      },
      {
        "description": "The legend can be made drag-able by setting this attribute to 1. End viewers of the chart can drag the legend around on the chart.",
        "range": "0/1",
        "type": "Boolean",
        "name": "legendAllowDrag"
      },
      {
        "description": "If you have too many items on the legend, a scroll bar shows up on the same. This attribute lets you configure the background color of the scroll bar.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "legendScrollBgColor"
      },
      {
        "description": "You can reverse the order of datasets in the legend by setting this attribute to 1.",
        "range": "0/1",
        "type": "Boolean",
        "name": "reverseLegend"
      },
      {
        "description": "This attribute lets you interact with the legend in your chart. When you click a legend key, the dataplots associated with that series are eliminated from the chart. Re-clicking the key causes the dataplots to reappear.",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.2",
        "name": "interactiveLegend"
      },
      {
        "description": "If your chart contains multiple series, the legend is displayed as a grid comprising of multiple legend keys. With the help of this attribute you can specify the number of columns that are to be displayed in the legend.",
        "range": "Positive Integer",
        "type": "Number",
        "versionsince": "3.2",
        "name": "legendNumColumns"
      },
      {
        "description": "Whether to minimize legend item text wrapping.",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.2",
        "name": "minimiseWrappingInLegend"
      },
      {
        "description": "Specifies whether drawing a custom legend icon will be enabled. All legend icon customization attributes will work only if this feature is enabled. \n\nDefault value: 0 (disabled)",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.8.0",
        "name": "drawCustomLegendIcon"
      },
      {
        "description": "Sets the border color for the legend icon. \n\nDefault value: Data plot border color",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.8.0",
        "name": "legendIconBorderColor"
      },
      {
        "description": "Sets the background color for the legend icon. \n\nDefault value: Data plot fill color",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.8.0",
        "name": "legendIconBgColor"
      },
      {
        "description": "Sets the legend icon transparency. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "legendIconAlpha"
      },
      {
        "description": "Sets the legend icon background transparency. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "legendIconBgAlpha"
      },
      {
        "description": "Sets the number of sides for the legend icon. \n\nDefault value: 4",
        "range": "",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "legendIconSides"
      },
      {
        "description": "Sets the thickness of the legend icon border. \n\nDefault value: 1",
        "range": "1-5",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "legendIconBorderThickness"
      },
      {
        "description": "Sets the starting angle of for drawing the legend icon. \n\nDefault value: 45",
        "range": "",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "legendIconStartAngle"
      }
    ],
    "description": "Using the attributes below, you can configure the functional and cosmetic properties of the legend. The legend remains hidden by default. To show the legend use showLegend='1'. "
  },
  {
    "table": "Number Formatting",
    "attrs": [
      {
        "description": "This configuration determines whether the numbers displayed on the chart will be formatted using commas, for example, 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';.",
        "range": "0/1",
        "type": "Boolean",
        "name": "formatNumber"
      },
      {
        "description": "Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - for example, if `formatNumberScale` is set to 1, 1043 would become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.",
        "range": "0/1",
        "type": "Boolean",
        "name": "formatNumberScale"
      },
      {
        "description": "The default unit of the numbers that you're providing to the chart.",
        "range": "",
        "type": "String",
        "name": "defaultNumberScale"
      },
      {
        "description": "Unit of each block of the scale.",
        "range": "",
        "type": "String",
        "name": "numberScaleUnit"
      },
      {
        "description": "Range of the various blocks that constitute the scale.",
        "range": "",
        "type": "String",
        "name": "numberScaleValue"
      },
      {
        "description": "If a data value is less than the lowest given number is the number scale, this attribute forces the lower value of the  `numberScaleUnit` to be applied to that data value.  This attribute works only when `“formatNumberScale”: “1”` and the `defaultNumberScale` attribute is not defined. \n\nFor example, if `“numberScaleUnit”: “K, M”`, `“numberScaleValue”: “1000, 1000”`, and `“forceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.9.0",
        "name": "forceNumberScale"
      },
      {
        "description": "Using this attribute, you could add prefix to all the numbers visible on the graph. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.",
        "range": "Character",
        "type": "String",
        "name": "numberPrefix"
      },
      {
        "description": "Using this attribute, you could add suffix to all the numbers visible on the graph. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.",
        "range": "Character",
        "type": "String",
        "name": "numberSuffix"
      },
      {
        "description": "This attribute helps you specify the character to be used as the decimal separator in a number.",
        "range": "Character",
        "type": "String",
        "name": "decimalSeparator"
      },
      {
        "description": "This attribute helps you specify the character to be used as the thousands separator in a number.",
        "range": "Character",
        "type": "String",
        "name": "thousandSeparator"
      },
      {
        "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, the chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the decimal separator.",
        "range": "Character",
        "type": "String",
        "name": "inDecimalSeparator"
      },
      {
        "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, the chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the thousand separator.",
        "range": "Character",
        "type": "String",
        "name": "inThousandSeparator"
      },
      {
        "description": "Number of decimal places to which all numbers on the chart would be rounded to.",
        "range": "0-10",
        "type": "Number",
        "name": "decimals"
      },
      {
        "description": "Whether to add 0 padding at the end of decimal numbers. For example, if you set decimals as 2 and a number is 23.4. If `forceDecimals` is set to 1, the number will automatically be converted to 23.40 (note the extra 0 at the end).",
        "range": "0/1",
        "type": "Boolean",
        "name": "forceDecimals"
      }
    ],
    "description": "PowerCharts XT offers you a lot of options to format your numbers on the chart. Using the attributes below, you can control a myriad of options like: Formatting of commas and decimals Number prefixes and suffixes Decimal places to which the numbers would round to Scaling of numbers based on a user defined scale Custom number input formats "
  },
  {
    "table": "Font Properties",
    "attrs": [
      {
        "description": "This attribute lets you set the font face (family) of all the text (data labels, values etc.) on chart. If you specify the `outCnvBaseFont` attribute also, then this attribute controls only the font face of text within the chart canvas bounds.",
        "range": "Font Name",
        "type": "String",
        "name": "baseFont"
      },
      {
        "description": "This attribute sets the base font size of the chart, that is, all the values and the names in the chart which lie on the canvas will be displayed using the font size provided here. Besides pixels (px) values can also be defined in rem, %, em, and vw.",
        "range": "0-72",
        "type": "Number",
        "name": "baseFontSize"
      },
      {
        "description": "This attribute sets the base font color of the chart, that is, all the values and the names in the chart which lie on the canvas will be displayed using the font color provided here.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "baseFontColor"
      },
      {
        "description": "This attribute sets the base font family of the chart text which lies outside the canvas, that is, all the values and the names in the chart which lie outside the canvas will be displayed using the font name provided here.",
        "range": "Font Name",
        "type": "String",
        "name": "outCnvBaseFont"
      },
      {
        "description": "This attribute sets the base font size of the chart, that is, all the values and the names in the chart which lie outside the canvas will be displayed using the font size provided here. Besides pixels (px) values can also be defined in rem, %, em, and vw.",
        "range": "0-72",
        "type": "Number",
        "name": "outCnvBaseFontSize"
      },
      {
        "description": "This attribute sets the base font color of the chart, that is, all the values and the names in the chart which lie outside the canvas will be displayed using the font color provided here.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "outCnvBaseFontColor"
      }
    ],
    "description": "Using the attributes below, you can define the generic font properties for all the text on the chart. These attributes allow you a high level control over font properties. If you intend to specify font properties for individual chart elements (like Caption, sub-caption etc.), you'll need to use the Styles feature of PowerCharts XT. Using Styles, you can also specify advanced font properties like Bold, Italics, HTML Mode etc. "
  },
  {
    "table": "Tooltip Attributes",
    "attrs": [
      {
        "description": "Whether to show tool tip on chart.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showToolTip"
      },
      {
        "description": "Background color for tool tip.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "toolTipBgColor"
      },
      {
        "description": "Font color for the tool-tip.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "toolTipColor"
      },
      {
        "description": "Border color for tool tip.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "toolTipBorderColor"
      },
      {
        "description": "Sets the border transparency for tool tip.",
        "range": "0 - 100",
        "type": "Number",
        "name": "tooltipBorderAlpha"
      },
      {
        "description": "Whether to show shadow for tool tips on the chart.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showToolTipShadow"
      },
      {
        "description": "This attribute works on text of the tooltip. It is used to specify the value or the text when we hover over the node or the connector. You can use variable values from the data level by putting a _$_ sign infront of it, eg $name, and you'll get the value of the name in the tooltip according to the chart.",
        "range": "",
        "type": "String",
        "name": "connectortooltext"
      },
      {
        "description": "Sets the transparency of the tooltip.",
        "range": "0-100",
        "type": "Number",
        "name": "tooltipbgalpha"
      },
      {
        "description": "Sets the border radius of the tooltip.",
        "range": "In Pixels",
        "type": "Number",
        "name": "tooltipborderradius"
      },
      {
        "description": "Sets the border thickness of the tooltip.",
        "range": "In Pixels",
        "type": "Number",
        "name": "tooltipborderthickness"
      },
      {
        "description": "This attribute sets the vertical space between the value and the border of the tooltip. If you want more space between the value and the border, you can use this attribute to control it.",
        "range": "In Pixels",
        "type": "Number",
        "name": "toolTipPadding"
      },
      {
        "description": "Specify custom text for the tooltip \n\n You can either specify a constant string as the tooltip text or you can use variable values from the data level by prefixing a __$__ to the attribute name, for example, __$name__, __$value__.",
        "range": "",
        "type": "String",
        "name": "plottooltext"
      },
      {
        "description": "Configure the tooltip's position.",
        "range": "auto, top and bottom",
        "type": "String",
        "name": "tooltipPosition"
      }
    ],
    "description": "These attributes let you control the tool tip. You can set the background color, border color, separator character and few other details. "
  },
  {
    "table": "Toolbar Attributes",
    "attrs": [
      {
        "description": "Where to position the toolbar on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen",
        "range": "TL, TR, BL, BR, CC",
        "type": "String",
        "versionsince": "3.11.3",
        "name": "toolbarPosition"
      },
      {
        "description": "Sets the toolbox position on the chart with respect to x-axis.",
        "range": "",
        "type": "Number",
        "versionsince": "3.11.3",
        "name": "toolbarX"
      },
      {
        "description": "Sets the toolbox position on the chart with respect to y-axis.",
        "range": "",
        "type": "Number",
        "versionsince": "3.11.3",
        "name": "toolbarY"
      },
      {
        "description": "Sets the horizontal alignment of the toolbar on the chart.",
        "range": "Left, Right",
        "type": "String",
        "versionsince": "3.11.3",
        "name": "toolbarHAlign"
      },
      {
        "description": "Sets the vertical alignment of the toolbar on the chart",
        "range": "Top, Bottom",
        "type": "String",
        "versionsince": "3.11.3",
        "name": "toolbarVAlign"
      },
      {
        "description": "Sets the color of the toolbar buttons.",
        "range": "Any (color code without the # prefix)",
        "type": "Color",
        "name": "toolbarButtonColor"
      },
      {
        "description": "Enables/disables display of tooltips for toolbar buttons.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showToolBarButtonTooltext"
      },
      {
        "description": "You can change the scale of the toolbar by specifying a value for this attribute.",
        "range": "",
        "type": "Number",
        "name": "toolbarButtonScale"
      }
    ],
    "description": "Using this set of attributes, you can customize the toolbar on the chart. The advantage of having a toolbar is that it manages all the UI action elements (context menus, checkboxes, buttons) centrally. This provides a clean, uniform look and a better, more meaningful and logical grouping."
  },
  {
    "table": "Attributes for Exporting Charts",
    "attrs": [
      {
        "description": "Whether the chart will allow exporting to images, PDFs, SVG, XLSX or CSV format.  \n\n__Default value__: 0",
        "range": "0/1",
        "type": "Boolean",
        "name": "exportEnabled"
      },
      {
        "description": "In case of server-side exporting, the action specifies whether the exported image will be sent back to client as download, or whether it'll be saved on the server. \n\n__Default value__: download",
        "range": "'save' or 'download'",
        "type": "String",
        "name": "exportAction"
      },
      {
        "description": "In case of server side exporting, this refers to the path of the server-side export handler (the ready-to-use scripts that we provide).",
        "range": "",
        "type": "String",
        "name": "exportHandler"
      },
      {
        "description": "Lets you configure what output formats to allow for export of chart, in the export context menu, and also customize the label for each menu item. The attribute value should be a pipe (&#124;) delimited separated key-value pair. Example: `exportFormats: 'PNG=Export as High Quality Image&#124;JPG&#124;PDF=Export as PDF File'`",
        "range": "",
        "type": "String",
        "name": "exportFormats"
      },
      {
        "description": "This attributes sets the modes of export. To enable client-side exporting, set this attribute to __client__. \n\n__Default value__: auto. \n\n__Note__: Starting v3.12.1, the `exportMode` attribute replaces the `exportAtClientSide` attribute. However, you don’t need to make any changes to the existing setup because, the FusionCharts library comes with the proper mapping already provided.",
        "type": "String",
        "versionsince": "3.12.1",
        "name": "exportMode"
      },
      {
        "description": "Whether the menu items related to export (e.g., Save as JPEG etc.) will appear in the context menu of chart.",
        "range": "0/1",
        "type": "Boolean",
        "name": "exportShowMenuItem"
      },
      {
        "description": "In case of server-side exporting and when using download as action, this lefts you configure whether the return image, PDF, SVG or XLSX will open in same window (as an attachment for download), or whether it will open in a new window. \n\n__Default value__: _self",
        "range": "'_self' or '_blank'",
        "type": "String",
        "name": "exportTargetWindow"
      },
      {
        "description": "Using this attribute you can specify the name (excluding the extension) of the output (export) file.",
        "range": "",
        "type": "String",
        "name": "exportFileName"
      }
    ],
    "description": "These attributes allow you to control the saving of chart as image, SVG or XLSX."
  },
  {
    "table": "Data Plot Hover Effects",
    "attrs": [
      {
        "description": "Whether to enable hover effect on charts for all elements",
        "range": "0/1",
        "type": "Boolean",
        "name": "showHoverEffect"
      },
      {
        "description": "Whether to enable hover effect on charts for data plots (e.g., column, pie) only",
        "range": "0/1",
        "type": "Boolean",
        "name": "plotHoverEffect"
      },
      {
        "description": "Specifies the hover color for the data plots",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "plotFillHoverColor"
      },
      {
        "description": "Specifies the hover alpha for data plots",
        "range": "1 - 100",
        "type": "Number",
        "name": "plotFillHoverAlpha"
      },
      {
        "description": "Sets the color of the border of plot when hovered.",
        "range": "Hex color code",
        "type": "Color",
        "name": "plotBorderHoverColor"
      },
      {
        "description": "This attribute sets the transparency of plot border when hovered.",
        "range": "0 - 100",
        "type": "Number",
        "name": "plotBorderHoverAlpha"
      },
      {
        "description": "This attribute sets the thickness of plot border when hovered.",
        "range": "In pixels",
        "type": "Number",
        "name": "plotBorderHoverThickness"
      },
      {
        "description": "This attribute sets the height of the rectangular plot when hovered over it.",
        "range": "In pixels",
        "type": "Number",
        "name": "plotHoverHeight"
      },
      {
        "description": "This attribute sets the width of the rectangular plot when hovered over it.",
        "range": "In pixels",
        "type": "Number",
        "name": "plotHoverWidth"
      },
      {
        "description": "This attribute sets the radius of the polygon/circle plot when hovered over it.",
        "range": "In pixels",
        "type": "Number",
        "name": "plotHoverRadius"
      }
    ],
    "description": "If you wish to show an effect on the data plot (column, line anchor, pie etc.) when the user hovers his mouse over the data plot, these attributes let you configure the cosmetics of the hover for all data plots in the chart."
  },
  {
    "table": "Chart Padding & Margins",
    "attrs": [
      {
        "description": "Padding of legend from right or bottom side of canvas.",
        "range": "In Pixels",
        "type": "Number",
        "name": "legendPadding"
      },
      {
        "description": "This attribute lets you control the space (in pixels) between the sub-caption and top of the chart canvas. If the sub-caption is not defined, it controls the space between caption and top of chart canvas. If neither caption, nor sub-caption is defined, this padding does not come into play.",
        "range": "In Pixels",
        "type": "Number",
        "name": "captionPadding"
      },
      {
        "description": "This attribute sets the vertical space between the labels and canvas bottom edge. If you want more space between the canvas and the x-axis labels, you can use this attribute to control it.",
        "range": "In Pixels",
        "type": "Number",
        "name": "labelPadding"
      },
      {
        "description": "Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.",
        "range": "In Pixels",
        "type": "Number",
        "name": "chartLeftMargin"
      },
      {
        "description": "Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.",
        "range": "In Pixels",
        "type": "Number",
        "name": "chartRightMargin"
      },
      {
        "description": "Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.",
        "range": "In Pixels",
        "type": "Number",
        "name": "chartTopMargin"
      },
      {
        "description": "Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.",
        "range": "In Pixels",
        "type": "Number",
        "name": "chartBottomMargin"
      },
      {
        "description": "This attribute lets you control the space between the start of chart canvas and the start (x) of chart. In case of 2D charts, the canvas is the visible rectangular box. Using this attribute, you can control the amount of empty space between the chart left side and canvas left side. By default, the chart automatically calculates this space depending on the elements to be placed on the chart. However, if you want to over-ride this value with a higher value, you can use this attribute to specify the same. Please note that you cannot specify a margin lower than what has been calculated by the chart. This attribute is particularly useful, when you have multiple charts placed in a page and want all their canvas start position to align with each other - so in such a case, you can set same margin value (a value large enough that it does not get rejected by chart owing to it being lower than the calculated value) for all such charts in the page.",
        "range": "In Pixels",
        "type": "Number",
        "name": "canvasLeftMargin"
      },
      {
        "description": "Like `canvasLeftMargin`, this attribute lets you set the space between end of canvas and end of chart.",
        "range": "In Pixels",
        "type": "Number",
        "name": "canvasRightMargin"
      },
      {
        "description": "Like `canvasLeftMargin`, this attribute lets you set the space between top of canvas and top of chart.",
        "range": "In Pixels",
        "type": "Number",
        "name": "canvasTopMargin"
      },
      {
        "description": "Like `canvasLeftMargin`, this attribute lets you set the space between bottom of canvas and bottom of chart.",
        "range": "In Pixels",
        "type": "Number",
        "name": "canvasBottomMargin"
      }
    ],
    "description": "The following attributes help you control chart margins and paddings. FusionCharts Suite XT allows you manually customize the padding of various elements on the chart to allow advanced manipulation and control over chart visualization. Padding in FusionCharts Suite XT is always defined in pixels, unless the attribute itself suggests some other scale (like `plotSpacePercent`, which configures the spacing using percentage values). You can also define the chart margins. Chart Margins refer to the empty space left on the top, bottom, left and right of the chart. That means, FusionCharts Suite XT would not plot anything in that space. It's not necessary for you to specify any padding or margin values. FusionCharts Suite XT automatically assumes the best values for the same, if you do not specify the same. "
  },
  {
    "table": "The dataset object",
    "path": "dataset",
    "attrs": [
      {
        "description": "Each data-set in the XML needs to have an id attribute, using which you can track the dataset returned back to your scripts.",
        "range": " ",
        "type": "String",
        "name": "id"
      },
      {
        "description": "Whether to allow the end users to drag the nodes belonging to this data-set.",
        "range": "0/1",
        "type": "Boolean",
        "name": "allowDrag"
      },
      {
        "description": "Lets you specify the series name for a particular data-set.",
        "range": "",
        "type": "String",
        "name": "seriesName"
      },
      {
        "description": "This attribute sets the color using which columns, lines, area of that data-set would be drawn. For column chart, you can specify a list of comma separated hex codes to get a gradient plot",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "color"
      },
      {
        "description": "This attribute sets the alpha (transparency) of the entire data-set.",
        "range": "0-100",
        "type": "Number",
        "name": "alpha"
      },
      {
        "description": "Whether to include the `seriesName` of this data-set in legend. This can be particularly useful when you are using combination charts and you have used the Area or Line chart to plot a trend, and you do not want the `seriesName` of that trend to appear in legend.",
        "range": "0/1",
        "type": "Boolean",
        "name": "includeInLegend"
      },
      {
        "description": "Whether to show the border of this data-set. This attribute is used to show or hide the plot border and it is configurable at the chart instance, data plot, and data-series levels.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showPlotBorder"
      },
      {
        "description": "Color for data plot border of this data-set. This attribute is used to specify the color for the plot border at the chart instance level.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "plotBorderColor"
      },
      {
        "description": "Thickness for data plot border of this data-set. This attribute is used to specify the thickness for the plot border at chart instance, data plot, and data-series levels.",
        "range": "0-5 (Pixels)",
        "type": "Number",
        "name": "plotBorderThickness"
      },
      {
        "description": "Alpha for data plot border of this data-set. This attribute is used to specify the opacity for the plot border at the chart instance level, data plot, and data-series levels.",
        "range": "0-100",
        "type": "Number",
        "name": "plotBorderAlpha"
      },
      {
        "description": "If you have opted to fill the node as gradient, this attribute lets you set the fill alpha for gradient for the data-set. If you've opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the fill alpha for gradient.",
        "range": "0-100",
        "type": "Number",
        "name": "plotFillAlpha"
      },
      {
        "description": "This attribute can set the hover color for a particular dataset.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "hoverColor"
      },
      {
        "description": "This attribute sets the transparency for a particular dataset when hovered.",
        "range": "0 - 100",
        "type": "Number",
        "name": "hoverAlpha"
      },
      {
        "description": "This attribute sets the border color of a dataset on hover.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "borderHoverColor"
      },
      {
        "description": "This attribute sets the border's transparency for a dataset on hover.",
        "range": "0 - 100",
        "type": "Number",
        "name": "borderHoverAlpha"
      },
      {
        "description": "This attribute sets the thickness for a data plot's border on hover.",
        "range": "In pixels",
        "type": "Number",
        "name": "borderHoverThickness"
      },
      {
        "description": "This attribute can set the height of a node when hovered.",
        "range": "In pixels",
        "type": "Number",
        "name": "hoverHeight"
      },
      {
        "description": "This attribute can set the width of a node when hovered.",
        "range": "In pixels",
        "type": "Number",
        "name": "hoverWidth"
      },
      {
        "description": "This attribute can set the radius of a node when hovered.",
        "range": "I pixels",
        "type": "Number",
        "name": "hoverRadius"
      }
    ],
    "description": "Each `dataset` object contains a series of data. For example, for a monthly sales comparison chart for two successive years, the first data-set would contain the data for first year and the next one for the second year. You can provide data-set level cosmetics so that all data within that data-set will be plotted in the same color/alpha/etc. Depending on the chart type, there are a number of attributes that you can define for each `dataset` object."
  },
  {
    "table": "The data Object",
    "path": "data",
    "attrs": [
      {
        "description": "Each node in the XML needs to have an id attribute, using which you can track the data returned back to your scripts.",
        "range": " ",
        "type": "String",
        "name": "id"
      },
      {
        "description": "Whether to allow user to drag this particular node.",
        "range": "0/1",
        "type": "Boolean",
        "name": "allowDrag"
      },
      {
        "description": "Lets you define the shape of node. Valid values are RECTANGLE / CIRCLE or POLYGON.",
        "range": "RECTANGLE / CIRCLE or POLYGON",
        "type": "String",
        "name": "shape"
      },
      {
        "description": "If you have selected Rectangle as the shape, this attribute lets you define the height of the same.",
        "range": "Pixels",
        "type": "Number",
        "name": "height"
      },
      {
        "description": "If you have selected Rectangle as the shape, this attribute lets you define the width of the same.",
        "range": "Pixels",
        "type": "Number",
        "name": "width"
      },
      {
        "description": "If you have selected Polygon or circle as the shape for node, this attribute lets you define the radius of the same.",
        "range": "Pixels",
        "type": "Number",
        "name": "radius"
      },
      {
        "description": "If you have selected Polygon as the shape for node, this attribute lets you define the sides for the same.",
        "range": "More than 3.",
        "type": "Number",
        "name": "numSides"
      },
      {
        "description": "Whether this node should contain an image. You can load GIF/JPG or PNG images in the chart.",
        "range": "0/1",
        "type": "Boolean",
        "name": "imageNode"
      },
      {
        "description": "This attribute is used to specify the URL of an external image (JPG/PNG) on the node of the chart.",
        "range": "URL",
        "type": "FusionCharts Link Format",
        "name": "imageURL"
      },
      {
        "description": "Vertical alignment of image in the node - TOP, MIDDLE or BOTTOM",
        "range": "TOP, MIDDLE or BOTTOM",
        "type": "String",
        "name": "imageAlign"
      },
      {
        "description": "Width of the image that you intend to load.",
        "range": "Pixels",
        "type": "Number",
        "name": "imageWidth"
      },
      {
        "description": "Height of the image that you intend to load.",
        "range": "Pixels",
        "type": "Number",
        "name": "imageHeight"
      },
      {
        "description": "Vertical alignment of the node label in the node -TOP, MIDDLE or BOTTOM. This is applicable only when `imageNode='1'`.",
        "range": "TOP, MIDDLE or BOTTOM",
        "type": "String",
        "name": "labelAlign"
      },
      {
        "description": "The x-axis value for the node. The node will be placed horizontally on the x-axis based on this value. The x value (numerical position on the x-axis) is not based on pixels. All the values contribute to form a numeric scale on the x axis. You can modify this scale using `xAxisMaxValue` and `xAxisMinValue` attributes.",
        "range": "Numeric Value",
        "type": "Number",
        "name": "x"
      },
      {
        "description": "The y-axis value for the node. The node will be placed vertically on the y-axis based on this value. The y value (numerical position on the y-axis) is not based on pixels. All the values contribute to form a numeric scale on the y-axis. You can modify this scale using `yAxisMaxValue` and `yAxisMinValue` attributes.",
        "range": "Numeric Value",
        "type": "Number",
        "name": "y"
      },
      {
        "description": "This attribute helps you set the name of this node, which would be displayed over the node.\n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
        "range": "",
        "type": "String",
        "name": "label"
      },
      {
        "description": "For Multi-series and Combination charts, you can define the color of data-sets at dataset level. However, if you wish to highlight a particular data element, you can specify it's color at \"set\" level using this attribute. ",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "color"
      },
      {
        "description": "You can define links for individual data items. That enables the end user to click on node and drill down to other pages. To define the link for data items, use the link attribute. You can define links that open in same window, new window, pop-up window or frames. Please see Advanced Charting &gt; Drill Down Charts for more information. Also, you need to URL Encode all the special characters (like ? and &) present in the link.",
        "range": "",
        "type": "String",
        "name": "link"
      },
      {
        "description": "Lets you define the tool text for the node.",
        "range": "",
        "type": "String",
        "name": "toolText"
      },
      {
        "description": "You can define the alpha of data-sets at dataset level. However, if you wish to highlight a particular data element, you can specify it's alpha at \"set\" level using this attribute.",
        "range": "0-100",
        "type": "Number",
        "name": "alpha"
      },
      {
        "description": "This attribute can set the hover color for a particular data plot.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "hoverColor"
      },
      {
        "description": "This attribute sets the transparency for a particular data plot when hovered.",
        "range": "0 - 100",
        "type": "Number",
        "name": "hoverAlpha"
      },
      {
        "description": "This attribute sets the border color of a particular data plot on hover.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "borderHoverColor"
      },
      {
        "description": "This attribute sets the border's transparency for a particular data plot on hover.",
        "range": "0 - 100",
        "type": "Number",
        "name": "borderHoverAlpha"
      },
      {
        "description": "This attribute sets the thickness for a particular data plot's border on hover.",
        "range": "In pixels",
        "type": "Number",
        "name": "borderHoverThickness"
      },
      {
        "description": "This attribute can set the height of a node when hovered.",
        "range": "In pixels",
        "type": "Number",
        "name": "hoverHeight"
      },
      {
        "description": "This attribute can set the width of a node when hovered.",
        "range": "In pixels",
        "type": "Number",
        "name": "hoverWidth"
      },
      {
        "description": "This attribute can set the radius of a node when hovered.",
        "range": "I pixels",
        "type": "Number",
        "name": "hoverRadius"
      }
    ],
    "description": "Attributes of the `data` object, child of the `dataset` object, are used to define the values to be plotted for individual data series."
  },
  {
    "table": "The connectors Object",
    "path": "connectors",
    "attrs": [
      {
        "description": "Alpha for all the connectors on the chart.",
        "range": "0-100",
        "type": "Number",
        "name": "alpha"
      },
      {
        "description": "Whether to show arrows at the end point of connectors.",
        "range": "0/1",
        "type": "Boolean",
        "name": "arrowAtEnd"
      },
      {
        "description": "Whether to show arrows at the origin of connectors.",
        "range": "0/1",
        "type": "Boolean",
        "name": "arrowAtStart"
      },
      {
        "description": "Color for all the connectors on the chart",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "color"
      },
      {
        "description": "Whether the connectors should be rendered as dashed lines. \n\n__Default value__: 0 (connectors rendered using straight lines)",
        "range": "0/1",
        "type": "Boolean",
        "name": "dashed"
      },
      {
        "description": "Sets the length of each dash when connectors are rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "dashLen"
      },
      {
        "description": "Sets the gap between consecutive dashes when connectors are rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "dashGap"
      },
      {
        "description": "Using this value, you can specify a number which will be multiplied by individual connectors strength to get the line thickness. Say, you have a connector whose thickness should be 2 pixels and another whose thickness should be 4. So, you can define this attribute as 2 and then specify the strength of first connector as 1 and second one as 2. This is useful when you're plotting network diagrams and you have to show link strength as connector thickness.",
        "range": "0-5",
        "type": "Number",
        "name": "stdThickness"
      },
      {
        "description": "Default strength for all connectors.",
        "range": "0-2",
        "type": "Number",
        "name": "strength"
      }
    ],
    "description": "Connectors, for connecting two chart elements, can be created and customized using the `connectors` object and its child object, the `connector` object.\n\nThe `connectors` object groups together all the connectors on a chart.\n\nThese attributes let you customize all connectors collectively."
  },
  {
    "table": "The connector Object",
    "path": "connector",
    "attrs": [
      {
        "description": "Alpha of the connector.",
        "range": "0-100",
        "type": "Alpha",
        "name": "alpha"
      },
      {
        "description": "Whether to show arrows at the end point of connector.",
        "range": "0/1",
        "type": "Boolean",
        "name": "arrowAtEnd"
      },
      {
        "description": "Whether to show arrows at the origin of connector.",
        "range": "0/1",
        "type": "Boolean",
        "name": "arrowAtStart"
      },
      {
        "description": "Color of the connector",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "color"
      },
      {
        "description": "Whether the connector should be rendered as dashed lines. \n\n__Default value__: 0 (connector rendered using straight lines)",
        "range": "0/1",
        "type": "Boolean",
        "name": "dashed"
      },
      {
        "description": "Sets the length of each dash when connector is rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "dashLen"
      },
      {
        "description": "Sets the gap between consecutive dashes when connector is rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "dashGap"
      },
      {
        "description": "ID of the node from where you want the connector to start. The id should refer to the user defined id of each node (defined in XML).",
        "range": " ",
        "type": "String",
        "name": "from"
      },
      {
        "description": "Label of the connector which will show up on the chart.\n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
        "range": " ",
        "type": "String",
        "name": "label"
      },
      {
        "description": "You can define links for individual connectors. That enables the end user to click on a connector and drill down to other pages. To define the link for connectors, use the link attribute. You can define links that open in same window, new window, pop-up window or frames. Please see Advanced Charting &gt; Drill Down Charts for more information. Also, you need to URL Encode all the special characters (like ? and &) present in the link.",
        "range": "",
        "type": "String",
        "name": "link"
      },
      {
        "description": "Strength of this connector. The thickness of this connector would be strength*stdThickness (defined for the `connectors` object).",
        "range": "0-2",
        "type": "Number",
        "name": "strength"
      },
      {
        "description": "ID of the node from where you want the connector to end. The id should refer to the user defined id of each node (defined in XML).",
        "range": " ",
        "type": "String",
        "name": "to"
      }
    ],
    "description": "Each `connector` object represents a connector that connects two tasks.\n\nThe `connector` object represents individual connectors on a chart. While the `connectors` object can collectively customize the connectors, it is mandatory to use a `connector` object to create a connector.\n\nIf the `connectors` object is used to configure an attribute globally for all connectors, the `connector` object can override that property for individual connectors.\n\nThese attributes let you create and customize individual connectors."
  },
  {
    "table": "The labels Object and the label Object",
    "path": "label",
    "attrs": [
      {
        "description": "Whether to allow the user to drag this particular label.",
        "range": "0/1",
        "type": "Boolean",
        "name": "allowdrag"
      },
      {
        "description": "Alpha of the label.",
        "range": "0-100",
        "type": "Alpha",
        "versionsince": "3.2",
        "name": "alpha"
      },
      {
        "description": "Background color of the label.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.2",
        "name": "bgColor"
      },
      {
        "description": "Border color of the label.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.2",
        "name": "borderColor"
      },
      {
        "description": "Text color of the label",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.2",
        "name": "color"
      },
      {
        "description": "Sets the font size of the label.",
        "range": " ",
        "type": "Number",
        "name": "fontsize"
      },
      {
        "description": "Padding space around the text. The background color of the label spreads till this padding space. Around this padding space the border is drawn.",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.2",
        "name": "padding"
      },
      {
        "description": "The text that is displayed on the label.",
        "range": " ",
        "type": "String",
        "versionsince": "3.2",
        "name": "text"
      },
      {
        "description": "x-axis value for the label. The label will be placed horizontally on the x-axis based on this value.",
        "range": " ",
        "type": "Number",
        "versionsince": "3.2",
        "name": "x"
      },
      {
        "description": "y-axis value for the label. The label will be placed vertically on the y-axis based on this value.",
        "range": " ",
        "type": "Number",
        "versionsince": "3.2",
        "name": "y"
      }
    ],
    "description": "Labels can be created on a drag-node chart using the `label` object, child of the `labels` object.  Although the `label` object has to be defined within the `labels` object, labels cannot be collectively customized using the `labels` object, because it does not have any attributes of its own.\n\nThese attributes let you create and customize labels using the `label` object."
  },
  {
    "table": "Trend-lines",
    "path": "line",
    "attrs": [
      {
        "description": "The starting value for the trend line. Say, if you want to plot a slanted trend line from value 102 to 109, the `startValue` would be 102.",
        "range": "Numeric Value",
        "type": "Number",
        "name": "startValue"
      },
      {
        "description": "The ending y-axis value for the trend line. Say, if you want to plot a slanted trend line from value 102 to 109, the `endValue` would be 109. If you do not specify a value for `endValue`, it would automatically assume the same value as `startValue`.",
        "range": "Numeric Value",
        "type": "Number",
        "name": "endValue"
      },
      {
        "description": "If you want to display a string caption for the trend line by its side, you can use this attribute. Example:` displayValue='Last Month High'`. When you don't supply this attribute, it automatically takes the value of `startValue`.",
        "range": "Numeric Value",
        "type": "String",
        "name": "displayValue"
      },
      {
        "description": "Color of the trend line and its associated text",
        "range": "Hex Color Code",
        "type": "String",
        "name": "color"
      },
      {
        "description": "Whether the trend will be displayed as a line or a zone (fill-colored rectangle).",
        "range": "0/1",
        "type": "Boolean",
        "name": "isTrendZone"
      },
      {
        "description": "Whether the trend line or zone would be displayed over data plots or behind them.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showOnTop"
      },
      {
        "description": "If you have opted to show the trend as a line, this attribute lets you define the thickness of trend line.",
        "range": "In Pixels",
        "type": "Number",
        "name": "thickness"
      },
      {
        "description": "Alpha of the trend line.",
        "range": "0-100",
        "type": "Number",
        "name": "alpha"
      },
      {
        "description": "Whether the trendline should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
        "range": "0/1",
        "type": "Boolean",
        "name": "dashed"
      },
      {
        "description": "Sets the length of each dash when trendline is rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "dashLen"
      },
      {
        "description": "Sets the gap between consecutive dashes when trendline is rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "dashGap"
      },
      {
        "description": "Whether to show the trend line value on left side or right side of chart. This is particularly useful when the trend line display values on the chart are colliding with divisional lines values on the chart.",
        "range": "0/1",
        "type": "Boolean",
        "name": "valueOnRight"
      }
    ],
    "description": "Trend-lines are horizontal lines that aid in interpretation of data with respect to some pre-determined value. For example, if you are plotting the sales data for the current year, you might want to show the previous year's average monthly sales as a trend indicator for ease of comparison. The `lines` object, child of the `trendlines` object is used to add trend-lines to a chart.\n\nAlthough the `line` object has to be defined within the `trendlines` object, the latter cannot be used to collectively customize trend-lines, because it does not have any attributes of its own.\n\nThe attributes of the `lines` object, child of the `trendlines` object, are used to create and customize trend-lines for charts."
  },
  {
    "table": "Trend-lines (Chart level attributes)",
    "path": "chart",
    "attrs": [
      {
        "description": "Sets color of all the trend lines and its associated text in the chart.",
        "range": "Hex Color Code",
        "type": "Color",
        "name": "trendlineColor"
      },
      {
        "description": "If you've opted to show the trend as a line, this attribute lets you define the thickness of all the trend lines in your chart.",
        "range": "In Pixels",
        "type": "Number",
        "name": "trendlineThickness"
      },
      {
        "description": "Sets transparency for all the trend lines in your charts.",
        "range": "0 - 100",
        "type": "Number",
        "name": "trendlineAlpha"
      },
      {
        "description": "Sets the tooltip text of the trend-line. It accepts macros, plain text, and HTML tags, as string.",
        "range": "",
        "type": "String",
        "name": "trendLineToolText"
      },
      {
        "description": "Whether all the trend line/zone will be displayed over data plots or under them.",
        "range": "0/1",
        "type": "Boolean",
        "name": "showTrendlinesOnTop"
      }
    ],
    "description": "Trend-lines are horizontal lines that aid in interpretation of data with respect to some pre-determined value. For example, if you are plotting the sales data for the current year, you might want to show the previous year's average monthly sales as a trend indicator for ease of comparison. Cosmetics for all the trend-lines rendered can be attained using this set of attributes.\n\nAlthough there are set of attributes of the `line object`, used to create and customize trend-lines, these set of attributes effect all the trend-lines rendered in your chart."
  },
  {
    "table": "Trend-lines Display Value Cosmetics",
    "path": "chart",
    "attrs": [
      {
        "description": "Sets the font family for the trend-line display value.",
        "range": " ",
        "type": "String",
        "versionsince": "3.8.0",
        "name": "trendValueFont"
      },
      {
        "description": "Sets the font size for the trend-line display value. Besides pixels (px) values can also be defined in rem, %, em, and vw.",
        "range": " ",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueFontSize"
      },
      {
        "description": "Sets whether the trend-line display value will be bold formatted. \n\nDefault value: 0 (not bold formatted)",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.8.0",
        "name": "trendValueFontBold"
      },
      {
        "description": "Sets whether the trend-line display value will be italicized. \n\nDefault value: 0 (not italicized)",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.8.0",
        "name": "trendValueFontItalic"
      },
      {
        "description": "Sets the background color for the trend-line display value.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.8.0",
        "name": "trendValueBgColor"
      },
      {
        "description": "Sets the border color for the trend-line display value.",
        "range": "Hex Color Code",
        "type": "Color",
        "versionsince": "3.8.0",
        "name": "trendValueBorderColor"
      },
      {
        "description": "Sets the transparency for the trend-line display value. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueAlpha"
      },
      {
        "description": "Sets the transparency for the background of the trend-line display value. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueBgAlpha"
      },
      {
        "description": "Sets the transparency for the border around the trend-line display value. \n\nDefault value: 100",
        "range": "0-100",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueBorderAlpha"
      },
      {
        "description": "Sets padding for the border around the trend-line display value. ",
        "range": "In pixels",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueBorderPadding"
      },
      {
        "description": "Sets the radius for the border around the trend-line display value. ",
        "range": "In pixels",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueBorderRadius"
      },
      {
        "description": "Sets the thickness for the border around the trend-line display value. ",
        "range": "In pixels",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueBorderThickness"
      },
      {
        "description": "Whether the border around the trend-line display value should be rendered as dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
        "range": "0/1",
        "type": "Boolean",
        "versionsince": "3.8.0",
        "name": "trendValueBorderDashed"
      },
      {
        "description": "Sets the length of each dash when the border around the trend-line display value is rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueBorderDashLen"
      },
      {
        "description": "Sets the gap between two consecutive dashes when the border around the trend-line display value is rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "versionsince": "3.8.0",
        "name": "trendValueBorderDashGap"
      }
    ],
    "description": "These attributes let you customize the text displayed with a trend-line. \n\n__Note__: These attributes belong to the `chart` object and  not to the `line` object (child of the `trendline` object). They are, therefore, applied to all trend-lines on your chart. "
  },
  {
    "table": "Vertical Trend-lines",
    "path": "line",
    "attrs": [
      {
        "description": "The starting value for the trend line. Say, if you want to plot a slanted trend line from value 102 to 109, the `startValue` would be 102.",
        "range": "Numeric Value",
        "type": "Number",
        "name": "startValue"
      },
      {
        "description": "The ending y-axis value for the trend line. Say, if you want to plot a slanted trend line from value 102 to 109, the `endValue` would be 109. If you do not specify a value for `endValue`, it would automatically assume the same value as `startValue`.",
        "range": "Numeric Value",
        "type": "Number",
        "name": "endValue"
      },
      {
        "description": "If you want to display a string caption for the trend line by its side, you can use this attribute. Example:` displayValue='Last Month High'`. When you do not supply this attribute, it automatically takes the value of `startValue`.",
        "range": "Numeric Value",
        "type": "String",
        "name": "displayValue"
      },
      {
        "description": "Color of the trend line and its associated text",
        "range": "Hex Color Code",
        "type": "String",
        "name": "color"
      },
      {
        "description": "Whether the trend will be displayed as a line or a zone (fill-colored rectangle).",
        "range": "0/1",
        "type": "Boolean",
        "name": "isTrendZone"
      },
      {
        "description": "If you have opted to show the trend as a line, this attribute lets you define the thickness of trend line.",
        "range": "In Pixels",
        "type": "Number",
        "name": "thickness"
      },
      {
        "description": "Alpha of the trend line.",
        "range": "0-100",
        "type": "Number",
        "name": "alpha"
      },
      {
        "description": "Whether the trendline should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
        "range": "0/1",
        "type": "Boolean",
        "name": "dashed"
      },
      {
        "description": "Sets the length of each dash when trendline is rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "dashLen"
      },
      {
        "description": "Sets the gap between consecutive dashes when trendline is rendered as dashed lines.",
        "range": "In pixels",
        "type": "Number",
        "name": "dashGap"
      },
      {
        "description": "Custom tool-text for this trend line or zone.",
        "range": " ",
        "type": "String",
        "name": "toolText"
      }
    ],
    "description": "Vertical trend lines help you create vertical trend-lines/zones on drag-node charts. These are vertical lines spanning the chart canvas which aid in interpretation of data with respect to some pre-determined value. To add a vertical trend-line to a chart, the `vTrendlines` and `line` (child of the `vTrendlines` object) objects are used as shown below: \n\n<pre class=\"language-javascript\"><code>\n\"vTRendlines\"[{\n\t\"line\": [{\n\t\t\"startValue\": \"20000\",\n\t\t\"endValue\": \"3000\",\n\t\t\"isTrendZone\": \"1\",\n\t\t\"color\": \"#aaaaaa\", \n\t\t\"alpha\": \"14\"\n\t\t}]\n\t}]\n</code></pre>\nYou can control the cosmetic and functional properties of vertical trend-lines using the following attributes:"
  }
]