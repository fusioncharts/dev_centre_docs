[
    {
        "table": "Functional Attributes",
        "attrs": [
            {
                "description": "This attribute lets you set the configuration whether the chart should appear in an animated fashion. If you do not want to animate any part of the chart, set this as 0.",
                "range": "0/1",
                "type": "Boolean",
                "name": "animation"
            },
            {
                "description": "This attribute sets the animation duration, if `animation` is set to `1`. \n\nDefault value: 1 sec",
                "range": "In seconds",
                "type": "Number",
	    		"Versionsince": "3.11.0",
                "name": "animationDuration"
            },
            {
                "description": "This attribute lets you configure how your price chart would be plotted as. You can use either of the three options - CANDLESTICK, BAR or LINE",
                "range": "CANDLESTICK, LINE OR BAR",
                "type": "String",
                "name": "plotPriceAs"
            },
            {
                "description": "If you have opted to plot the price chart as line, this attribute lets you configure whether the closing price will be used for plot or opening price.",
                "range": "0/1",
                "type": "Boolean",
                "name": "plotClosingPrice"
            },
            {
                "description": "Each chart has 5 pre-defined color palettes which you can choose from. Each palette renders the chart in a different color theme. ",
                "range": "1-5",
                "type": "Number",
                "name": "palette"
            },
            {
                "description": "While the `palette` attribute allows to select a palette theme that applies to chart background, canvas, font and tool-tips, it does not change the colors of data items (i.e., column, line, pie etc.). Using `paletteColors` attribute, you can specify your custom list of hex colors for the data items. The list of colors have to be separated by comma e.g., `&quot;paletteColors&quot;: &quot;#FF0000, #0372AB, #FF5904...&quot;`. The chart will cycle through the list of specified colors and then render the data plot accordingly. To use the same set of colors throughout all your charts in a web application, you can store the list of palette colors in your application globally and then provide the same in each chart data.",
                "range": "List of hex color codes separated by comma",
                "type": "String",
                "name": "paletteColors"
            },
            {
                "description": "If you want to hide volume chart, you can use this attribute.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showVolumeChart"
            },
            {
                "description": "Height of the volume chart in percent (with respect to total chart). By default, it's set to 40%.",
                "range": "20%-80%",
                "type": "Number",
                "name": "volumeHeightPercent"
            },
            {
                "description": "When you right click on the chart it shows a context menu. This attribute allows you to show or hide the &quot;Print&quot; option in the context menu.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPrintMenuItem"
            },
            {
                "description": "Allows you to show or hide the value 0f the zero plane.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showZeroPlaneValue"
            },
            {
                "description": "Internally the chart decodes a Url that you set as link. Before invoking the link it again encodes the Url. If you are passing multilingual characters via a Url or do not want this decode-encode mechanism to be handled by chart you can set,`unescapeLinks='0'`.",
                "range": "0/1",
                "type": "Boolean",
                "name": "unescapeLinks"
            },
            {
                "description": "If you have opted to show a label for any of your vLines in the chart, you can collectively configure whether to show border for all such labels using this attribute. If you want to show label border for just a particular vLine, you can over-ride this value by specifying border configuration for that specific vLine.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showVLineLabelBorder"
            },
            {
                "description": "This attribute lets you set whether the vline labels will show up as rotated labels on the chart. \n\nDefault value: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "rotateVLineLabels"
            },
            {
                "description": "It sets the configuration whether the x-axis labels will be displayed or not.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLabels"
            },
            {
                "description": "Using this attribute, you can customize the alignment of data labels (x-axis labels). There are 5 options: AUTO, WRAP, STAGGER, ROTATE or NONE. By default, this attribute is set to AUTO mode which means that the alignment of the data labels is determined automatically depending on the size of the chart. WRAP wraps the label text if it is too long to fit in one line. ROTATE rotates the labels vertically. STAGGER divides the labels into multiple lines.",
                "range": "'AUTO', 'WRAP', 'STAGGER', 'ROTATE', 'NONE'",
                "type": "String",
                "name": "labelDisplay"
            },
            {
                "description": "When enabled in auto mode, long data labels are truncated by adding ellipses to prevent them from overflowing the chart background. The default value is 1.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "useEllipsesWhenOverflow"
            },
            {
                "description": "This attribute lets you set whether the data labels would show up as rotated labels on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "rotateLabels"
            },
            {
                "description": "If you have opted to show rotated labels on chart, this attribute lets you set the configuration whether the labels would show as slanted labels or fully vertical ones.",
                "range": "0/1",
                "type": "Boolean",
                "name": "slantLabels"
            },
            {
                "description": "By default, all the labels are displayed on the chart. However, if you have a set of streaming data (like name of months or days of week), you can opt to show every n-th label for better clarity. This attribute just lets you do so. It allows to display every n(th) y-axis label.",
                "range": "1 or above",
                "type": "Number",
                "name": "labelStep"
            },
            {
                "description": "If you have opted for STAGGER mode as `labelDisplay`, using this attribute you can control how many lines to stagger the label to. By default, all labels are displayed in a single line.",
                "range": "2 or above",
                "type": "Number",
                "name": "staggerLines"
            },
            {
                "description": "The chart automatically tries to adjust divisional lines and limit values based on the data provided. However, if you want to set your explicit lower and upper limit values and number of divisional lines, first set this attribute to false. That would disable automatic adjustment of divisional lines.",
                "range": "0/1",
                "type": "Boolean",
                "name": "adjustDiv"
            },
            {
                "description": "The entire chart can now act as a hotspot. Use this URL to define the hotspot link for the chart. The link can be specified in FusionCharts Link Format.",
                "range": "",
                "type": "String",
                "name": "clickURL"
            },
            {
                "description": "Sets whether the `clickURL` attribute (that sets a link to which the user is directed when the chart is clicked) overrides the `link` attribute (that sets a link to which the user is directed when a data plot is clicked). \n\nDefault value: 0 (`clickURL` does not override `link`)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.7.0",
                "name": "clickURLOverridesPlotLinks"
            },
            {
                "description": "This attribute lets you set whether the y-axis lower limit would be 0 or should the y-axis lower limit adapt itself to a different figure based on values provided to the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "setAdaptiveYMin"
            },
            {
                "description": "This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. ",
                "range": "",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "hasRTLText"
            },
            {
                "description": "This attribute lets you enable/disable the highlight effect, in the form of a `fadeout`, for the data plots corresponding to a legend item. When this attribute is enabled and the mouse pointer is hovered over a legend item label, plots belonging to the other data series fadeout, by reducing their opacity.\n\n The fadeout effect can be customized by specifying the fadeout color and opacity using the `color` and `alpha` attributes. Eg. `fadeout|color=#ff0000, alpha=60`",
                "range": "",
                "type": "String",
                "name": "plotHighlightEffect"
            },
            {
                "description": "This attribute changes the theme of the chart. There are 4 types of themes which have been made according to the different color combinations.",
                "range": "‘carbon’, ‘fusion’, ‘ocean’, ‘zune’",
                "type": "String",
                "name": "theme"
            }
        ],
        "description": "These attributes let you control a variety of functional elements on the chart. For example, you can opt to show or hide data labels, data values. You can also set chart limits and extended properties. "
    },
    {
        "table": "Chart Message-related Attributes",
        "attrs": [
        	{
                "description": "This attribute allows to set a custom font for all chart messages.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFont"
            },
            {
                "description": "This attribute allows to set a custom font size for all chart messages.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFontSize"
            },
            {
                "description": "This attribute allows to set a custom font color for all chart messages.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "baseChartMessageColor"
            },
            {
                "description": "This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageHAlign"
            },
            {
                "description": "This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageVAlign"
            },
            {
                "description": "This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageAlpha"
            },
            {
                "description": "This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when a chart begins to load.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "loadMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when a chart begins to load.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "loadMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when a chart begins to load.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "loadMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when the specified chart type is not supported.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when the specified chart type is not supported.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when the specified chart type is not supported.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessage"
            },    
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessage"
            },    
            {
                "description": "This attribute allows to set a font for the message displayed when chart data begins loading.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when chart data begins loading.",
                "range": "In pixels",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when chart data begins loading.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data loaded for a chart is empty. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the data loaded for a chart is empty",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the data loaded for a chart is empty.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the data loaded for a chart is empty.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessage"
            },    
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the specified chart data is invalid.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the specified chart data is invalid.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the specified chart data is invalid.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageScale"
            }
        ],
        "description": "These attributes let you set and configure custom chart messages, using text as well as images."
    },
    {
        "table": "Chart Titles and Axis Names",
        "attrs": [
            {
                "description": "Caption of the chart.",
                "type": "String",
                "name": "caption"
            },
            {
                "description": "Sub-caption of the chart.",
                "type": "String",
                "name": "subCaption"
            },
            {
                "description": "The y-axis name for the price chart.",
                "type": "String",
                "name": "pYAxisName"
            },
            {
                "description": "The y-axis name for the volume chart.",
                "type": "String",
                "name": "vYAxisName"
            }
        ],
        "description": "Using these attributes, you can set the various headings and titles of chart like caption, sub-caption and y-axis names etc. "
    },
    {
        "table": "Chart Caption Cosmetics",
        "attrs": [
            {
                "description": "Sets horizontal alignment of caption",
                "range": "\"left\", \"center\", \"right\"",
                "type": "String",
                "name": "captionAlignment"
            },
            {
                "description": "Whether caption should be on top of the data plot area",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionOnTop"
            },
            {
                "description": "Sets the caption font size in pixels",
                "range": "6 - 72",
                "type": "Number",
                "name": "captionFontSize"
            },
            {
                "description": "Sets the sub-caption font size (in pixels)",
                "range": "6 - 72",
                "type": "Number",
                "name": "subCaptionFontSize"
            },
            {
                "description": "Sets the caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "captionFont"
            },
            {
                "description": "Sets the sub-caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "subCaptionFont"
            },
            {
                "description": "Sets the caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "captionFontColor"
            },
            {
                "description": "Sets the sub-caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "subCaptionFontColor"
            },
            {
                "description": "Whether the caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionFontBold"
            },
            {
                "description": "Whether the sub caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "subCaptionFontBold"
            },
            {
                "description": "Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area",
                "range": "0/1",
                "type": "Boolean",
                "name": "alignCaptionWithCanvas"
            },
            {
                "description": "If caption is not centre aligned, lets you configure the padding (in pixels) from either edge.\nWill be ignored if caption is centre aligned.",
                "range": "In Pixels",
                "type": "Number",
                "name": "captionHorizontalPadding"
            }
        ],
        "description": "These attributes let you configure the cosmetics of chart caption and sub-caption."
    },
    {
        "table": "Chart Axis Configuration Attributes",
        "attrs": [
            {
                "description": "The candlestick chart has both x and y axis as numeric. This attribute lets you explicitly set the x-axis lower limit. If you do not specify this value, the chart will automatically calculate the best value for you.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "xAxisMinValue"
            },
            {
                "description": "The candlestick chart has both x and y axis as numeric. This attribute lets you explicitly set the x-axis upper limit. If you do not specify this value, the chart will automatically calculate the best value for you.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "xAxisMaxValue"
            },
            {
                "description": "This attribute helps you explicitly set the upper limit of the price chart. If you don't specify this value, it is automatically calculated by the chart based on the data provided by you.",
                "range": "",
                "type": "Number",
                "name": "pYAxisMaxValue"
            },
            {
                "description": "This attribute helps you explicitly set the lower limit of the price chart. If you don't specify this value, it is automatically calculated by the chart based on the data provided by you.",
                "range": "",
                "type": "Number",
                "name": "pYAxisMinValue"
            },
            {
                "description": "Lower limit for the volume chart axis. If you do not specify this, the chart will automatically calculate for you.",
                "range": "",
                "type": "Number",
                "name": "vYAxisMinValue"
            },
            {
                "description": "Upper limit for the volume chart axis. If you do not specify this, the chart will automatically calculate for you.",
                "range": "",
                "type": "Number",
                "name": "vYAxisMaxValue"
            },
            {
                "description": "The y-axis of the charts is divided into vertical sections using div (divisional) lines. Each div line assumes a value based on its position. Using this attribute you can set whether to show those div line (y-axis) values or not.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showYAxisValues"
            },
            {
                "description": "By default, all div lines show their values. However, you can opt to display every x(th) div line value using this attribute.",
                "range": "1 or above",
                "type": "Number",
                "name": "yAxisValuesStep"
            },
            {
                "description": "If you do not wish to rotate y-axis name, set this as 0. It specifically comes to use when you have special characters (UTF8) in your y-axis name that do not show up in rotated mode.",
                "range": "0/1",
                "type": "Boolean",
                "name": "rotateYAxisName"
            },
            {
                "description": "If you opt to not rotate y-axis name, you can choose a maximum width that will be applied to y-axis name.",
                "range": "(In Pixels)",
                "type": "Number",
                "name": "yAxisNameWidth"
            },
            {
                "description": "Whether to forcefully attach decimal places to all y-axis values. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all y-axis numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all y-axis numbers, set this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "forceYAxisValueDecimals"
            },
            {
                "description": "Whether to forcefully attach decimal places to all y-axis values of the volume chart. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all y-axis numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all y-axis numbers, set this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2.1",
                "name": "forceVYAxisValueDecimals"
            },
            {
                "description": "If you have opted to not adjust div lines, you can specify the div line values decimal precision using this attribute.",
                "range": "0-10",
                "type": "Number",
                "name": "yAxisValueDecimals"
            },
            {
                "description": "If you have opted to not adjust div lines of the volume chart, you can specify the div line values decimal precision using this attribute.",
                "range": "0-10",
                "type": "Number",
                "versionsince": "3.2.1",
                "name": "vYAxisValueDecimals"
            }
        ],
        "description": "Using these attributes, you can set and configure x-axis labels, y-axis values and set chart cosmetics for the axis like color, alpha, etc."
    },
    {
        "table": "Primary y-Axis Name Cosmetics",
        "attrs": [
            {
                "description": "Sets the primary y-axis font family for the text, in case of a dual-y axis chart",
                "range": "Font Name",
                "type": "String",
                "name": "pYAxisNameFont"
            },
            {
                "description": "Sets the primary y-axis font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "pYAxisNameFontColor"
            },
            {
                "description": "Specifies the primary y-axis font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "pYAxisNameFontSize"
            },
            {
                "description": "Whether primary y-axis font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "pYAxisNameFontBold"
            },
            {
                "description": "Whether primary y-axis font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "pYAxisNameFontItalic"
            },
            {
                "description": "Sets the background color for primary y-axis text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "pYAxisNameBgColor"
            },
            {
                "description": "Sets the border around the primary y-axis text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "pYAxisNameBorderColor"
            },
            {
                "description": "Sets the primary y-axis alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "name": "pYAxisNameAlpha"
            },
            {
                "description": "Sets the primary y-axis font alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "pYAxisNameFontAlpha"
            },
            {
                "description": "Sets the primary y-axis background alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "pYAxisNameBgAlpha"
            },
            {
                "description": "Sets the primary y-axis border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "pYAxisNameBorderAlpha"
            },
            {
                "description": "Sets the primary y-axis border padding",
                "range": "In Pixels",
                "type": "Number",
                "name": "pYAxisNameBorderPadding"
            },
            {
                "description": "Sets the primary y-axis border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "pYAxisNameBorderRadius"
            },
            {
                "description": "Sets the primary y-axis border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "pYAxisNameBorderThickness"
            },
            {
                "description": "Whether the border around the primary y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "pYAxisNameBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the primary y-axis name is rendered using dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "pYAxisNameBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the primary y-axis name is rendered using dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "pYAxisNameBorderDashGap"
            }
        ],
        "description": "When using a dual y-axis chart (having a primary and a secondary axis), these attributes let you configure the cosmetics of the primary axis name (title)"
    },
    {
        "table": "Volume y-Axis Name Cosmetics",
        "attrs": [
            {
                "description": "Sets the font for the volume y-axis name.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.11.0",
                "name": "vYAxisNameFont"
            },
            {
                "description": "Sets the volume y-axis font color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.11.0",
                "name": "vYAxisNameFontColor"
            },
            {
                "description": "Specifies the volume y-axis font size",
                "range": "6 - 72",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameFontSize"
            },
            {
                "description": "Whether volume y-axis font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.11.0",
                "name": "vYAxisNameFontBold"
            },
            {
                "description": "Whether volume y-axis font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.11.0",
                "name": "vYAxisNameFontItalic"
            },
            {
                "description": "Sets the background color for volume y-axis text",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBgColor"
            },
            {
                "description": "Sets the border around the volume y-axis text",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBorderColor"
            },
            {
                "description": "Sets the volume y-axis alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameAlpha"
            },
            {
                "description": "Sets the volume y-axis font alpha",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameFontAlpha"
            },
            {
                "description": "Sets the volume y-axis background alpha",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBgAlpha"
            },
            {
                "description": "Sets the volume y-axis border alpha",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBorderAlpha"
            },
            {
                "description": "Sets the volume y-axis border padding",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBorderPadding"
            },
            {
                "description": "Sets the volume y-axis border radius",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBorderRadius"
            },
            {
                "description": "Sets the volume y-axis border thickness",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBorderThickness"
            },
            {
                "description": "Whether the border around the volume y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the volume y-axis name is rendered using dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the volume y-axis name is rendered using dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "vYAxisNameBorderDashGap"
            }
        ],
        "description": "When using a dual y-axis chart, these attributes let you configure the cosmetics of the volumne y-axis name (title)"
    },
    {
        "table": "Chart Cosmetics",
        "attrs": [
            {
                "description": "Whether to show a border around the chart or not.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showBorder"
            },
            {
                "description": "Border color of the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "borderColor"
            },
            {
                "description": "Border thickness of the chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "borderThickness"
            },
            {
                "description": "Border alpha of the chart.",
                "range": "0 - 100",
                "type": "Number",
                "name": "borderAlpha"
            },
            {
                "description": "This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `#FF5904, #FFFFFF`.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Sets the alpha (transparency) for the background. If you have opted for gradient background, you need to set a list of alpha(s) separated by comma.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "If you have opted for a gradient background, this attribute lets you set the ratio of each color constituent.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgRatio"
            },
            {
                "description": "Angle of the background color, in case of a gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "bgAngle"
            },
            {
                "description": "To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.",
                "range": "",
                "type": "String",
                "versionsince": "3.2.",
                "name": "bgImage"
            },
            {
                "description": "This attribute specifies the opacity for the loaded background image.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.2.",
                "name": "bgImageAlpha"
            },
            {
                "description": "Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.",
                "range": "stretch, tile, fit, fill, center, none",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "bgImageDisplayMode"
            },
            {
                "description": "Helps you to vertically align the background image.",
                "range": "left, center, right",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "bgImageValign"
            },
            {
                "description": "Helps you to horizontally align the background image.",
                "range": "left, center, right",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "bgImageHalign"
            },
            {
                "description": "Helps you magnify the background image.This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.2.1",
                "name": "bgImageScale"
            },
            {
                "description": "This attribute if set to _1_, shows a border around the canvas of the chart. \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "showcanvasborder"
            },
            {
                "description": "This attribute sets the background color for the chart canvas. You can set any hex color code as the value of this attribute. To specify a gradient as canvas background color, separate the hex color codes of each color in the gradient using comma. Example: #FF5904, #FFFFFF.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "canvasBgColor"
            },
            {
                "description": "This attribute sets the background transparency for the chart canvas. For gradient, separate the alpha value using comma. Example: 15, 50.",
                "range": "0 - 100",
                "type": "Number",
                "name": "canvasBgAlpha"
            },
            {
                "description": "When a gradient is used to set the color of the canvas background, this attribute sets the ratio of the colors. Example : If the value of the `canvasBgColor` attribute is set as `#FF5904, #FFFFFF`, `canvasBgRatio` can be used to specify their ratio in the background.",
                "range": "0 - 100",
                "type": "Numbers separated by comma",
                "name": "canvasBgRatio"
            },
            {
                "description": "Helps you specify canvas background angle in case of gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "canvasBgAngle"
            },
            {
                "description": "Lets you specify canvas border color.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "canvasBorderColor"
            },
            {
                "description": "Lets you specify canvas border thickness.",
                "range": "0-5",
                "type": "Number",
                "name": "canvasBorderThickness"
            },
            {
                "description": "Lets you control transparency of canvas border.",
                "range": "0 - 100",
                "type": "Number",
                "name": "canvasBorderAlpha"
            },
            {
                "description": "You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.",
                "range": "URL",
                "type": "String",
                "name": "logoURL"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on the left side of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoLeftMargin"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on top of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoTopMargin"
            },
            {
                "description": "Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen",
                "range": "TL, TR, BL, BR, CC",
                "type": "String",
                "name": "logoPosition"
            },
            {
                "description": "Once the logo has loaded on the chart, you can configure its opacity using this attribute.",
                "range": "0 - 100",
                "type": "Number",
                "name": "logoAlpha"
            },
            {
                "description": "You can also change the scale of an externally loaded logo at run-time by specifying a value for this parameter.",
                "range": "0-300",
                "type": "Number",
                "name": "logoScale"
            },
            {
                "description": "If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts Link Format, allowing you to link to new windows, pop-ups, frames etc.",
                "range": "URL",
                "type": "String",
                "name": "logoLink"
            }
        ],
        "description": "The following attributes let you configure chart cosmetics like background color, background alpha, canvas color & alpha etc. "
    },
    {
        "table": "Data Plot Cosmetics",
        "attrs": [
            {
                "description": "Border color for the bear candles/lines/bars.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bearBorderColor"
            },
            {
                "description": "Fill color for the bear candles/lines/bars.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bearFillColor"
            },
            {
                "description": "Border color for the bull candles/lines/bars.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bullBorderColor"
            },
            {
                "description": "Fill color for the bull candles/lines/bars.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bullFillColor"
            },
            {
                "description": "When you hover your mouse over any candle on the chart, you'll see a colored band moving with your mouse. This attribute lets you set the color of that band.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "rollOverBandColor"
            },
            {
                "description": "Lets you set the alpha of the color band.",
                "range": "0 - 100",
                "type": "Number",
                "name": "rollOverBandAlpha"
            },
            {
                "description": "Whether to apply the shadow effect for the candles and the volume bars.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showShadow"
            },
            {
                "description": "Whether to show plot border for the volume chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showVPlotBorder"
            },
            {
                "description": "Border color for the volume chart bars.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "vPlotBorderColor"
            },
            {
                "description": "Thickness of border of the volume chart bars.",
                "range": "In Pixels",
                "type": "Number",
                "name": "vPlotBorderThickness"
            },
            {
                "description": "Alpha of border of the volume chart bars.",
                "range": "0 - 100",
                "type": "Number",
                "name": "vPlotBorderAlpha"
            },
            {
                "description": "Thickness of the lines on the chart, if you're plotting the price chart as lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "plotLineThickness"
            },
            {
                "description": "Alpha of the lines on the chart.",
                "range": "0 - 100",
                "type": "Number",
                "name": "plotLineAlpha"
            },
            {
                "description": "Sets the length of each dash when plot lines are rendered as dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "plotLineDashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when plot lines are rendered as dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "plotLineDashGap"
            }
        ],
        "description": "These attributes let you configure how your plot (candles, lines, or bars) would appear on the chart. Using this, you can also control the border properties. Various other controls over plot cosmetics can be attained using this set of attributes. "
    },
    {
        "table": "Data Value Cosmetics",
        "attrs": [
            {
                "description": "Sets the font of the values in the chart",
                "range": "Font Name",
                "type": "String",
                "name": "valueFont"
            },
            {
                "description": "Specifies the value font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueFontColor"
            },
            {
                "description": "Specifies the value font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "valueFontSize"
            },
            {
                "description": "Whether value font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueFontBold"
            },
            {
                "description": "Whether value font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueFontItalic"
            },
            {
                "description": "Sets the background color for value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBgColor"
            },
            {
                "description": "Sets the border color around the value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBorderColor"
            },
            {
                "description": "Sets the value alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueAlpha"
            },
            {
                "description": "Sets the value font alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueFontAlpha"
            },
            {
                "description": "Sets the value background alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueBgAlpha"
            },
            {
                "description": "Sets the value border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueBorderAlpha"
            },
            {
                "description": "Sets the value border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderThickness"
            },
            {
                "description": "Sets the padding between the value and its surrounding border",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderPadding"
            },
            {
                "description": "Sets the value border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderRadius"
            },
            {
                "description": "Whether the border around the data values should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the data values is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "valueBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the data values is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "valueBorderDashGap"
            }
        ],
        "description": "These attributes let you configure font, background and border cosmetics, of value text-field that appear for each data plot."
    },
    {
        "table": "Anchors",
        "attrs": [
            {
                "description": "Whether to draw anchors on the chart (in case of line plot only).",
                "range": "0/1",
                "type": "Boolean",
                "name": "drawAnchors"
            },
            {
                "description": "This attribute sets the number of sides the anchor will have. For e.g., an anchor with 3 sides would represent a triangle, with 4 it would be a square and so on.",
                "range": "3-20",
                "type": "Number",
                "name": "anchorSides"
            },
            {
                "description": "This attribute sets the starting angle of anchors.  \n\nDefault value: 90",
                "range": "0 - 360",
                "type": "Number",
                "name": "anchorStartAngle"
            },
            {
                "description": "This attribute sets the radius (in pixels) of the anchor.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorRadius"
            },
            {
                "description": "Lets you set the border color of anchors.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorBorderColor"
            },
            {
                "description": "Helps you set border thickness of anchors.",
                "range": "In Pixels",
                "type": "Number",
                "name": "anchorBorderThickness"
            },
            {
                "description": "Helps you set the background color of anchors.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorBgColor"
            },
            {
                "description": "Helps you set the alpha of entire anchors. If you need to hide the anchors on chart but still enable tool tips, set this as 0.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorAlpha"
            },
            {
                "description": "Helps you set the alpha of anchor background.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBgAlpha"
            },
            {
                "description": "If you want to use an external image (JPG/PNG) as an anchor,  this attribute lets you specify the URL. \n\n__Note__: Due to cross domain security restrictions it is advised to use an image from the same domain name as your charts.",
                "range": "URL",
                "type": "FusionCharts link format",
                "name": "anchorImageUrl"
            },
            {
                "description": "This attribute allows to set a transparency for images displayed as anchors in charts. \n\n__Default value__: 100",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorImageAlpha"
            },
            {
                "description": "This attribute allows to set a scale for magnifying images displayed as anchors. \n\n __Default value__: 100",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorImageScale"
            },
            {
                "description": "This attribute sets the padding between the anchor image and the border of the anchor. For the anchor image, instead of decreasing the size of the image this attribute crops the image.  \n\nDefault value: 1",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.10.0",
                "name": "anchorImagePadding"
            }
        ],
        "description": "If the price is plotted as line chart, anchors (or marker points) are polygons which appear at the joint of two consecutive line points. These are indicators to show the position of data points. The anchors handle tool tips and links for the data points. So, if you opt to not render anchors on a chart, the tool tips and links won't function. You can, however, hide them by setting alpha to 0 and still enable tool tips and links. You can customize all the facets of anchors using the properties below. "
    },
    {
        "table": "Divisional Lines & Grids",
        "attrs": [
            {
                "description": "Number of divisional lines to be plotted on the price chart.",
                "range": "",
                "type": "Number",
                "name": "numPDivLines"
            },
            {
                "description": "Number of divisional lines to be plotted on the volume chart.",
                "range": "Numeric value > 0",
                "type": "Number",
                "name": "numDivLines"
            },
            {
                "description": "Alpha (transparency) of the alternate horizontal grid bands.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alternateHGridAlpha"
            },
            {
                "description": "Color for divisional lines",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "divLineColor"
            },
            {
                "description": "Thickness of divisional lines",
                "range": "1-5",
                "type": "Number",
                "name": "divLineThickness"
            },
            {
                "description": "Alpha of divisional lines.",
                "range": "0 - 100",
                "type": "Number",
                "name": "divLineAlpha"
            },
            {
                "description": "Whether the divisional lines should be rendered as dashed lines. \n\n__Default value__: 0 (divisional lines rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "divLineDashed"
            },
            {
                "description": "Sets the length of each dash when divisional lines are rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "divLineDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when divisional lines are rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "divLineDashGap"
            },
            {
                "description": "Whether to show alternate colored horizontal grid bands.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showAlternateHGridColor"
            },
            {
                "description": "Color of the alternate horizontal grid bands.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "alternateHGridColor"
            }
        ],
        "description": "Using this set of attributes, you can control the properties of divisional lines and alternate color bands. Divisional Lines are horizontal lines running through the canvas. Each divisional line signifies a smaller unit of the entire axis thus aiding the users in interpreting the chart. Alternate color bands are colored blocks between two successive divisional lines. "
    },
    {
        "table": "Legend Properties",
        "attrs": [
            {
                "description": "Whether to show legend for the chart (only if there are trend-sets on the chart).",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLegend"
            },
            {
                "description": "Whether legend keys should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendItemFontBold"
            },
            {
                "description": "Sets legend item font",
                "range": "Font Name",
                "type": "String",
                "name": "legendItemFont"
            },
            {
                "description": "Sets legend item font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "legendItemFontSize"
            },
            {
                "description": "Sets legend item font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemFontColor"
            },
            {
                "description": "Sets legend item font color on hover",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemHoverFontColor"
            },
            {
                "description": "The legend can be plotted at two positions on the chart - below (BOTTOM) the chart and to the right (RIGHT) of the chart.",
                "range": "BOTTOM or RIGHT",
                "type": "String",
                "name": "legendPosition"
            },
            {
                "description": "Sets the legend caption horizontal alignment .",
                "range": "\"left\", \"center\", \"right\"",
                "type": "String",
                "name": "legendCaptionAlignment"
            },
            {
                "description": "Whether legend caption should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendCaptionFontBold"
            },
            {
                "description": "Sets legend caption font",
                "range": "Font Name",
                "type": "String",
                "name": "legendCaptionFont"
            },
            {
                "description": "Sets legend caption font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "legendCaptionFontSize"
            },
            {
                "description": "Sets legend caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendCaptionFontColor"
            },
            {
                "description": "You can add a caption for the entire legend by setting the same here.",
                "range": " ",
                "type": "String",
                "name": "legendCaption"
            },
            {
                "description": "Sets the color that applies on both text font and icon when they are in a  disabled / hidden state",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemHiddenColor"
            },
            {
                "description": "Scaling of legend icon is possible starting PowerCharts XT. This attribute lets you control the size of legend icon.",
                "range": "1-5",
                "type": "Number",
                "versionsince": "3.2",
                "name": "legendIconScale"
            },
            {
                "description": "Background color for the legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendBgColor"
            },
            {
                "description": "Background alpha for the legend.",
                "range": "0 - 100",
                "type": "Number",
                "name": "legendBgAlpha"
            },
            {
                "description": "Border Color for the legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendBorderColor"
            },
            {
                "description": "Border thickness for the legend.",
                "range": "In Pixels",
                "type": "Number",
                "name": "legendBorderThickness"
            },
            {
                "description": "Border alpha for the legend.",
                "range": "0 - 100",
                "type": "Number",
                "name": "legendBorderAlpha"
            },
            {
                "description": "Whether to show a shadow for legend.",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendShadow"
            },
            {
                "description": "The legend can be made drag-able by setting this attribute to 1. End viewers of the chart can drag the legend around on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendAllowDrag"
            },
            {
                "description": "If you have too many items on the legend, a scroll bar shows up on the same. This attribute lets you configure the background color of the scroll bar.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendScrollBgColor"
            },
            {
                "description": "You can reverse the order of datasets in the legend by setting this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "reverseLegend"
            },
            {
                "description": "If your chart contains multiple series, the legend is displayed as a grid comprising of multiple legend keys. With the help of this attribute you can specify the number of columns that are to be displayed in the legend.",
                "range": "Positive Integer",
                "type": "Number",
                "versionsince": "3.2",
                "name": "legendNumColumns"
            },
            {
                "description": "Whether to minimize legend item text wrapping.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "minimiseWrappingInLegend"
            },
            {
                "description": "Specifies whether drawing a custom legend icon will be enabled. All legend icon customization attributes will work only if this feature is enabled. \n\nDefault value: 0 (disabled)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "drawCustomLegendIcon"
            },
            {
                "description": "Sets the border color for the legend icon. \n\nDefault value: Data plot border color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "legendIconBorderColor"
            },
            {
                "description": "Sets the background color for the legend icon. \n\nDefault value: Data plot fill color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "legendIconBgColor"
            },
            {
                "description": "Sets the legend icon transparency. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconAlpha"
            },
            {
                "description": "Sets the legend icon background transparency. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconBgAlpha"
            },
            {
                "description": "Sets the number of sides for the legend icon. \n\nDefault value: 4",
                "range": "",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconSides"
            },
            {
                "description": "Sets the thickness of the legend icon border. \n\nDefault value: 1",
                "range": "1-5",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconBorderThickness"
            },
            {
                "description": "Sets the starting angle of for drawing the legend icon. \n\nDefault value: 45",
                "range": "",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconStartAngle"
            },
            {
                "description": "This attribute if set to `0`, the legend box will be center aligned with respect to the entire width of the chart only if the total width of the legend box is more than the canvas width. By default, the legend box is center aligned with respect to the canvas width and it remains the same if the width of the legend box is less than the canvas width.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.10.0",
                "name": "alignLegendWithCanvas"
            }
        ],
        "description": "The name of each trend-set defined shows up in the legend of the chart. If you do not need the legend, you can opt to hide the same. Using the attributes below, you can configure the functional and cosmetic properties of the legend. "
    },
    {
        "table": "Number Formatting",
        "attrs": [
            {
                "description": "This configuration determines whether the numbers displayed on the price chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumber"
            },
            {
                "description": "Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - e.g., if `formatNumberScale` is set to 1, 1043 would become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumberScale"
            },
            {
                "description": "The default unit of the numbers that you're providing to the price chart.",
                "range": "",
                "type": "String",
                "name": "defaultNumberScale"
            },
            {
                "description": "Unit of each block of the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleUnit"
            },
            {
                "description": "Range of the various blocks that constitute the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleValue"
            },
            {
                "description": "If a data value is less than the lowest given number is the number scale, this attribute forces the lower value of the  `numberScaleUnit` to be applied to that data value.  This attribute works only when `“formatNumberScale”: “1”` and the `defaultNumberScale` attribute is not defined. \n\nFor example, if `“numberScaleUnit”: “K, M”`, `“numberScaleValue”: “1000, 1000”`, and `“forceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.9.0",
                "name": "forceNumberScale"
            },
            {
                "description": "Whether recursive scaling should be applied.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2.1",
                "name": "scaleRecursively"
            },
            {
                "description": "How many recursions to complete during recursive scaling? -1 completes the entire set of recursion.",
                "range": "",
                "type": "Number",
                "versionsince": "3.2.1",
                "name": "maxScaleRecursion"
            },
            {
                "description": "What character to use to separate the scales that are generated after recursion?",
                "range": "",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "scaleSeparator"
            },
            {
                "description": "Using this attribute, you could add prefix to all the numbers visible on the price chart. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.",
                "range": "Character",
                "type": "String",
                "name": "numberPrefix"
            },
            {
                "description": "Using this attribute, you could add suffix to all the numbers visible on the price chart. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.",
                "range": "Character",
                "type": "String",
                "name": "numberSuffix"
            },
            {
                "description": "This attribute helps you specify the character to be used as the decimal separator in a number.",
                "range": "Character",
                "type": "String",
                "name": "decimalSeparator"
            },
            {
                "description": "This attribute helps you specify the character to be used as the thousands separator in a number.",
                "range": "Character",
                "type": "String",
                "name": "thousandSeparator"
            },
            {
                "description": "This option helps you specify the position of the thousand separator.",
                "range": " ",
                "type": "Number",
                "versionsince": "3.2.1",
                "name": "thousandSeparatorPosition"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, the chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the decimal separator.",
                "range": "Character",
                "type": "String",
                "name": "inDecimalSeparator"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, the chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the thousand separator.",
                "range": "Character",
                "type": "String",
                "name": "inThousandSeparator"
            },
            {
                "description": "Number of decimal places to which all numbers on the price chart would be rounded to.",
                "range": "0-10",
                "type": "Number",
                "name": "decimals"
            },
            {
                "description": "Whether to add 0 padding at the end of decimal numbers. For example, if you set decimals as 2 and a number is 23.4. If `forceDecimals` is set to 1, the number will automatically be converted to 23.40 (note the extra 0 at the end).",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceDecimals"
            },
            {
                "description": "Whether to add 0 padding at the end of decimal numbers of the volume chart. For example, if you set decimals as 2 and a number is 23.4. If `forceDecimals` is set to 1, the number will automatically be converted to 23.40 (note the extra 0 at the end).",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2.1",
                "name": "forceVDecimals"
            },
            {
                "description": "This configuration determines whether the numbers belonging to volume chart will be formatted using commas, e.g., 40,000 if 'vFormatNumber': '1'; and 40000 if 'vFormatNumber' : '0';",
                "range": "0/1",
                "type": "Boolean",
                "name": "vFormatNumber"
            },
            {
                "description": "Configuration whether to add K (thousands) and M (millions) to a number belonging to volume chart after truncating and rounding it - e.g., if `vFormatNumberScale` is set to 1, 10434 would become 1.04K (with `vDecimals` set to 2 places). Same with numbers in millions - an M will be added at the end.",
                "range": "0/1",
                "type": "Boolean",
                "name": "vFormatNumberScale"
            },
            {
                "description": "The default unit of the numbers belonging to volume chart.",
                "range": "",
                "type": "String",
                "name": "vDefaultNumberScale"
            },
            {
                "description": "Unit of each block of the scale of volume chart.",
                "range": "",
                "type": "String",
                "name": "vNumberScaleUnit"
            },
            {
                "description": "Range of the various blocks that constitute the scale for volume chart.",
                "range": "",
                "type": "String",
                "name": "vNumberScaleValue"
            },
            {
                "description": "",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2.1",
                "name": "vScaleRecursively"
            },
            {
                "description": "How many recursions to complete during recursive scaling of the numbers of volume chart? -1 completes the entire set of recursion.",
                "range": "",
                "type": "Number",
                "versionsince": "3.2.1",
                "name": "vMaxScaleRecursion"
            },
            {
                "description": "",
                "range": "",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "vScaleSeparator"
            },
            {
                "description": "Using this attribute, you could add prefix to all the numbers belonging to volume chart.",
                "range": "Character",
                "type": "String",
                "name": "vNumberPrefix"
            },
            {
                "description": "Using this attribute, you could add prefix to all the numbers belonging to volume chart.",
                "range": "Character",
                "type": "String",
                "name": "vNumberSuffix"
            },
            {
                "description": "Number of decimal places to which all numbers belonging to volume chart would be rounded to.",
                "range": "0-10",
                "type": "Number",
                "name": "vDecimals"
            }
        ],
        "description": "PowerCharts XT offers you a lot of options to format your numbers on the chart. Using the attributes below, you can control a myriad of options like: Formatting of commas and decimals Number prefixes and suffixes Decimal places to which the numbers would round to Scaling of numbers based on a user defined scale Custom number input formats "
    },
    {
        "table": "Font Properties",
        "attrs": [
            {
                "description": "This attribute lets you set the font face (family) of all the text (data labels, values etc.) on chart. If you specify the `outCnvBaseFont` attribute also, then this attribute controls only the font face of text within the chart canvas bounds.",
                "range": "Font Name",
                "type": "String",
                "name": "baseFont"
            },
            {
                "description": "This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font size provided here.",
                "range": "6 - 72",
                "type": "Number",
                "name": "baseFontSize"
            },
            {
                "description": "This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font color provided here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "baseFontColor"
            },
            {
                "description": "This attribute sets the base font family of the chart text which lies outside the canvas i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font name provided here.",
                "range": "Font Name",
                "type": "String",
                "name": "outCnvBaseFont"
            },
            {
                "description": "This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font size provided here.",
                "range": "6 - 72",
                "type": "Number",
                "name": "outCnvBaseFontSize"
            },
            {
                "description": "This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font color provided here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "outCnvBaseFontColor"
            }
        ],
        "description": "Using the attributes below, you can define the generic font properties for all the text on the chart. These attributes allow you a high level control over font properties. If you intend to specify font properties for individual chart elements (like Caption, sub-caption etc.), you'll need to use the Styles feature of PowerCharts XT. Using Styles, you can also specify advanced font properties like Bold, Italics, HTML Mode etc. "
    },
    {
        "table": "Tooltip Attributes",
        "attrs": [
            {
                "description": "Whether to show tool tip on chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTip"
            },
            {
                "description": "Background color for tool tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBgColor"
            },
            {
                "description": "Font color for the tool-tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipColor"
            },
            {
                "description": "Border color for tool tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBorderColor"
            },
            {
            	"description": "Sets the border transparency for tool tip.",
                "range": "0 - 100",
                "type": "NUmber",
                "name": "tooltipBorderAlpha"	
            },
            {
                "description": "The character specified as the value of this attribute separates the name and value displayed in tool tip.",
                "range": "",
                "type": "String",
                "name": "toolTipSepChar"
            },
            {
                "description": "Whether to show shadow for tool-tips on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTipShadow"
            },
            {
                "description": "Sets the transparency of the tooltip.",
                "range": "0 - 100",
                "type": "Number",
                "name": "tooltipbgalpha"
            },
            {
                "description": "Sets the border radius of the tooltip.",
                "range": "In Pixels",
                "type": "Number",
                "name": "tooltipborderradius"
            },
            {
                "description": "Sets the border thickness of the tooltip.",
                "range": "In Pixels",
                "type": "Number",
                "name": "tooltipborderthickness"
            },
            {
                "description": "This attribute sets the vertical space between the value and the border of the tooltip. If you want more space between the value and the border, you can use this attribute to control it.",
                "range": "In Pixels",
                "type": "Number",
                "name": "toolTipPadding"
            },
            {
                "description": "Specify custom text for the tooltip \n\n You can either specify a constant string as the tooltip text or you can use variable values from the data level by prefixing a __$__ to the attribute name, for example, __$name__, __$value__.",
                "range": "",
                "type": "String",
                "name": "plottooltext"
            }
        ],
        "description": "These attributes let you control the tool tip. You can set the background color, border color, separator character and few other details. "
    },
    {
        "table": "Attributes for Exporting Charts",
        "attrs": [
            {
                "description": "Whether the chart will allow exporting to images, PDFs, SVG or XLS.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportEnabled"
            },
            {
                "description": "In case of server-side exporting, the action specifies whether the exported image will be sent back to client as download, or whether it'll be saved on the server. \n\n__Default value__: download",
                "range": "'save' or 'download'",
                "type": "String",
                "name": "exportAction"
            },
            {
                "description": "In case of server side exporting, this refers to the path of the server-side export handler (the ready-to-use scripts that we provide).",
                "range": "",
                "type": "String",
                "name": "exportHandler"
            },
            {
                "description": "Lets you configure what output formats to allow for export of chart, in the export context menu, and also customize the label for each menu item. The attribute value should be a pipe (&#124;) delimited separated key-value pair. Example: `exportFormats: 'PNG=Export as High Quality Image&#124;JPG&#124;PDF=Export as PDF File'`",
                "range": "",
                "type": "String",
                "name": "exportFormats"
            },
            {
                "description": "This attribute when set to __1__, enables the client-side export feature.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportAtClientSide"
            },
            {
                "description": "Whether the menu items related to export (e.g., Save as JPEG etc.) will appear in the context menu of chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportShowMenuItem"
            },
            {
                "description": "In case of server-side exporting and when using download as action, this lefts you configure whether the return image, PDF, SVG or XLS will open in same window (as an attachment for download), or whether it will open in a new window. \n\n__Default value__: _self",
                "range": "'_self' or '_blank'",
                "type": "String",
                "name": "exportTargetWindow"
            },
            {
                "description": "Using this attribute you can specify the name (excluding the extension) of the output (export) file.",
                "range": "",
                "type": "String",
                "name": "exportFileName"
            }
        ],
        "description": "These attributes allow you to control the saving of chart as image, SVG or XLS."
    },
    {
        "table": "Data Plot Hover Effects",
        "attrs": [
            {
                "description": "Whether to enable hover effect on charts for all elements",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Whether to enable hover effect on charts for data plots (e.g., column, pie) only",
                "range": "0/1",
                "type": "Boolean",
                "name": "plotHoverEffect"
            },
            {
                "description": "Specifies the hover color for the data plots",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotFillHoverColor"
            },
            {
                "description": "Specifies the hover alpha for data plots",
                "range": "1 - 100",
                "type": "Number",
                "name": "plotFillHoverAlpha"
            }
        ],
        "description": "If you wish to show an effect on the data plot (column, line anchor, pie etc.) when the user hovers his mouse over the data plot, these attributes let you configure the cosmetics of the hover for all data plots in the chart."
    },
    {
        "table": "Chart Padding & Margins",
        "attrs": [
            {
                "description": "This attribute lets you control the space (in pixels) between the sub-caption and top of the chart canvas. If the sub-caption is not defined, it controls the space between caption and top of chart canvas. If neither caption, nor sub-caption is defined, this padding does not come into play.",
                "range": "In Pixels",
                "type": "Number",
                "name": "captionPadding"
            },
            {
                "description": "Using this, you can set the distance between the right end of y-axis title and the start of y-axis values (or canvas, if the y-axis values are not to be shown).",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisNamePadding"
            },
            {
                "description": "This attribute helps you set the horizontal space between the canvas left edge and the y-axis values or trend line values (on left/right side). This is particularly useful, when you want more space between your canvas and y-axis values.",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisValuesPadding"
            },
            {
                "description": "This attribute sets the vertical space between the labels and canvas bottom edge. If you want more space between the canvas and the x-axis labels, you can use this attribute to control it.",
                "range": "In Pixels",
                "type": "Number",
                "name": "labelPadding"
            },
            {
                "description": "Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "chartLeftMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "chartRightMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "chartTopMargin"
            },
            {
                "description": "Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "chartBottomMargin"
            },
            {
                "description": "It sets the vertical space between the end of candlesticks and start of value textboxes. This basically helps you control the space you want between your candlesticks and the value textboxes.",
                "range": "In Pixels",
                "type": "Number",
                "name": "valuePadding"
            },
            {
                "description": "Padding of legend from right or bottom side of canvas",
                "range": "In Pixels",
                "type": "Number",
                "name": "legendPadding"
            },
            {
                "description": "Padding between the canvas left margin and 1st candlestick. Also refers to padding between the canvas right edge and the last candlestick.",
                "range": "(In Pixels)",
                "type": "Number",
                "name": "canvasPadding"
            },
            {
                "description": "Helps you set the total space on the canvas in percentage. The higher you set this, the thinner would be your candles on the chart.",
                "range": "(In Percent)",
                "type": "Number",
                "name": "plotSpacePercent"
            }
        ],
        "description": "The following attributes help you control chart margins and paddings. FusionCharts Suite XT allows you manually customize the padding of various elements on the chart to allow advanced manipulation and control over chart visualization. Padding in FusionCharts Suite XT is always defined in pixels, unless the attribute itself suggests some other scale (like `plotSpacePercent`, which configures the spacing using percentage values). You can also define the chart margins. Chart Margins refer to the empty space left on the top, bottom, left and right of the chart. That means, FusionCharts Suite XT wouldn't plot anything in that space. It's not necessary for you to specify any padding/margin values. FusionCharts Suite XT automatically assumes the best values for the same, if you do not specify the same. "
    },
    {
        "table": "The categories Object",
        "path": "categories",
        "attrs": [
            {
                "description": "Lets you specify font face for the x-axis data labels.",
                "range": "Valid font face",
                "type": "String",
                "name": "font"
            },
            {
                "description": "Lets you specify font color for the x-axis data labels.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Lets you specify font size for the x-axis data labels.",
                "range": "",
                "type": "Number",
                "name": "fontSize"
            },
            {
                "description": "Lets you set the alpha for category lines.",
                "range": "0 - 100",
                "type": "Number",
                "name": "verticalLineAlpha"
            },
            {
                "description": "You can opt to show vertical lines for each category label. This attribute lets you set the color for all of them.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "verticalLineColor"
            },
            {
                "description": "Whether the vertical lines should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "verticalLineDashed"
            },
            {
                "description": "Sets the length of each dash when vertical lines are rendered as dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "verticalLineDashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when vertical lines are rendered as dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "verticalLineDashGap"
            },
            {
                "description": "Lets you set the thickness for category lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "verticalLineThickness"
            }
        ],
        "description": "The `categories` object and the `category` object (child of  the `categories` object)  are used to specify x-axis labels for multi-series charts. The attributes of the `categories` object are used to set the font properties of all x-axis labels collectively."
    },
    {
        "table": "The category Object",
        "path": "category",
        "attrs": [
            {
                "description": "This attribute determines the label for the data item. The label appears on the x-axis of chart.\n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Whether the vertical lines should be rendered as dashed lines. \n\n__Default value__: 0 (vertical lines using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "lineDashed"
            },
            {
                "description": "You can individually opt to show or hide labels of individual data items using this attribute.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLabel"
            },
            {
                "description": "Whether the vertical line should be shown for this category.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showVerticalLine"
            },
            {
                "description": "The tooltip defined in the `category` object appears only when the mouse cursor is hovered over the dataplots. However, this will not appear when the cursor is moved over the data labels (except for a situation when long labels are automatically truncated with ellipses. In this situation, if the mouse cursor is hovered over a truncated label, the tooltip will appear with the full label). In case you want to set a short label and show the full label in tooltip, define the full label using this attribute within the `category` object. The tooltip with the full label will appear only when the mouse is hovered on the dataplot.",
                "range": "",
                "type": "String",
                "name": "toolText"
            },
            {
                "description": "The candle stick chart has both x and y axis as numeric. This attribute lets you define the x value (numerical position on the x-axis) where this category name would be placed.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "x"
            },
            {
                "description": "Sets the x-axis label font family for the text.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "font"
            },
            {
                "description": "Sets the x-axis label font color.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "fontColor"
            },
            {
                "description": "Specifies the x-axis label font size.",
                "range": "6 - 72",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "fontSize"
            },
            {
                "description": "Flag indicating whether x-axis label font should be bold or not.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "fontBold"
            },
            {
                "description": "Flag indicating whether x-axis label font should be italicized or not.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "fontItalic"
            },
            {
                "description": "Sets the background color for x-axis label text.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "bgColor"
            },
            {
                "description": "Sets the color of the border around the x-axis label text.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "borderColor"
            },
            {
                "description": "Sets the x-axis label alpha for both font and background.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "alpha"
            },
            {
                "description": "Sets the x-axis label background alpha.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "bgAlpha"
            },
            {
                "description": "Sets the x-axis label border alpha.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderAlpha"
            },
            {
                "description": "Sets the x-axis label border padding.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderPadding"
            },
            {
                "description": "Sets the x-axis label border radius.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderRadius"
            },
            {
                "description": "Sets the x-axis label border thickness.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderThickness"
            },
            {
                "description": "Whether the border around x-axis label should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "borderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the x-axis label is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around x-axis label is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderDashGap"
            }
        ],
        "description": "The attributes of the `category` object are used to define and customize individual x-axis labels for multi-series charts."
    },
    {
        "table": "The data Object",
        "path": "data",
        "attrs": [
            {
                "description": "Opening price for the set.",
                "range": "",
                "type": "Number",
                "name": "open"
            },
            {
                "description": "Closing price for the set.",
                "range": "",
                "type": "Number",
                "name": "close"
            },
            {
                "description": "Highest price point reached for the set.",
                "range": "",
                "type": "Number",
                "name": "high"
            },
            {
                "description": "Lowest price point reached for the set.",
                "range": "",
                "type": "Number",
                "name": "low"
            },
            {
                "description": "Volume of transaction. If you do not specify volume for any of the sets, PowerCharts XT wouldn't plot the volume chart at the bottom.",
                "range": "",
                "type": "Number",
                "name": "volume"
            },
            {
                "description": "The x-axis value for the plot. The candlestick point will be placed horizontally on the x-axis based on this value.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "x"
            },
            {
                "description": "If you want to show a text label above a candlestick, you can assign the text to this attribute.",
                "range": "",
                "type": "String",
                "name": "displayValue"
            },
            {
                "description": "If you need to highlight a particular candlestick, you can assign a color to that particular set using this attribute",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "If you need to highlight a particular candlestick, you can assign a border color to that particular set using this attribute.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bordercolor"
            },
            {
                "description": "Alpha of the particular set.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Whether to show this set as dashed.",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "You can define links for individual data items. That enables the end user to click on candlesticks and drill down to other pages. To define the link for data items, use the link attribute. You can define links that open in same window, new window, pop-up window or frames. Please see Advanced Charting &gt; Drill Down Charts for more information. Also, you'll need to URL Encode all the special characters (like ? and &) present in the link.",
                "range": "",
                "type": "String",
                "name": "link"
            },
            {
                "description": "By default, PowerCharts XT shows the series name, category name, and value as tool tip text for that data item. But, if you want to display more information for the data item as tool tip, you can use this attribute to specify the same.",
                "range": "",
                "type": "String",
                "name": "toolText"
            }
        ],
        "description": "The `data` object represents a set of data which is to be plotted on the chart and determines a set of data which would appear on the chart.. The `data` object is used within its parent object, the `dataset` object, as shown below: \n\n<pre class=\"language-javascript\"><code>\n\"dataset\"[{\n\t\"data\": [{\n\t\t\"open\": \"18.74\",\n\t\t\"high\": \"19.16\",\n\t\t\"low\": \"18.67\",\n\t\t\"close\": \"18.99\", \n\t\t\"x\": \"1\", \n\t\t\"volume\": \"4991285\"\n\t\t}]\n\t}]\n</code></pre> "
    },
        {
        "table": "The trendset Object",
        "path": "trendSet",
        "attrs": [
            {
                "description": "Lets you set the color for all the trend-sets on the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "trendSetColor"
            },
            {
                "description": "Lets you set the alpha for all the trend-sets on the chart.",
                "range": "0 - 100",
                "type": "Number",
                "name": "trendSetAlpha"
            },
            {
                "description": "Helps you set the thickness for all the trend-set lines on the chart.",
                "range": "",
                "type": "Number",
                "name": "trendSetThickness"
            },
            {
                "description": "Whether the trendset should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "trendSetDashed"
            },
            {
                "description": "Sets the length of each dash when trendset is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "trendSetDashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when trendset is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "trendSetDashGap"
            },
            {
                "description": "Alpha of this trend set.",
                "range": "",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Color for this trend set",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether the trendset should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "Sets the length of each dash when trendset is rendered as dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "dashlen"
            },
            {
                "description": "Sets the gap between consecutive dashes when trendset is rendered as dashed lines.",
                "range": "In Pixels",
                "type": "Number",
                "name": "dashgap"
            },
            {
                "description": "Whether to include the name of this trend set in legend.",
                "range": "0/1",
                "type": "Boolean",
                "name": "includeinlegend"
            },
            {
                "description": "Thickness of this trend set.",
                "range": "In pixels",
                "type": "Number",
                "name": "thickness"
            }
        ],
        "description": "The `trendset` object and the `set` (child of the `trendset` object) object are used to create overlay lines for the candle/line/bar data plots in a candlestick chart. The overlay lines can be effectively used as technical indicators and there can be any number of such lines on a candlestick chart.\n\nNote that all attributes prefixed with __trendSet__ are used with the `chart` object. The remaining attributes are used with the `trendSet` object."
    },
    {
        "table": "Trend-lines",
        "path": "line",
        "attrs": [
            {
                "description": "The starting value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `startValue` would be 102.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "startValue"
            },
            {
                "description": "The ending y-axis value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `endValue` would be 109. If you do not specify a value for `endValue`, it would automatically assume the same value as `startValue`.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "endValue"
            },
            {
                "description": "If you want to display a string caption for the trend line by its side, you can use this attribute. Example:` displayValue='Last Month High'`. When you don't supply this attribute, it automatically takes the value of `startValue`.",
                "range": "",
                "type": "String",
                "name": "displayValue"
            },
            {
                "description": "Color of the trend line and its associated text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether the trend will be displayed as a line or a zone (fill-colored rectangle).",
                "range": "0/1",
                "type": "Boolean",
                "name": "isTrendZone"
            },
            {
                "description": "Whether the trend line/zone would be displayed over data plots or behind them.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showOnTop"
            },
            {
                "description": "If you have opted to show the trend as a line, this attribute lets you define the thickness of trend line.",
                "range": "In Pixels",
                "type": "Number",
                "name": "thickness"
            },
            {
                "description": "Alpha of the trend line.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Whether the trendline should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "Sets the length of each dash when trendline is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when trendline is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashGap"
            }
        ],
        "description": "Trend-lines are horizontal lines that aid in interpretation of data with respect to some pre-determined value. For example, if you are plotting the sales data for the current year, you might want to show the previous year's average monthly sales as a trend indicator for ease of comparison. The `lines` object, child of the `trendlines` object is used to add trend-lines to a chart.\n\nAlthough the `line` object has to be defined within the `trendlines` object, the latter cannot be used to collectively customize trend-lines, because it does not have any attributes of its own.\n\nThe attributes of the `lines` object, child of the `trendlines` object, are used to create and customize trend-lines for charts."
    },
    {
        "table": "Trend-lines (Chart level attributes)",
        "path": "chart",
        "attrs": [
            {
                "description": "Sets color of all the trend lines and its associated text in the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "trendlineColor"
            },
            {
                "description": "If you've opted to show the trend as a line, this attribute lets you define the thickness of all the trend lines in your chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "trendlineThickness"
            },
            {
                "description": "Sets transparency for all the trend lines in your charts.",
                "range": "0 - 100",
                "type": "Number",
                "name": "trendlineAlpha"
            },
            {
                "description": "Whether all the trend line/zone will be displayed over data plots or under them.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTrendlinesOnTop"
            }
        ],
        "description": "Trend-lines are horizontal lines that aid in interpretation of data with respect to some pre-determined value. For example, if you are plotting the sales data for the current year, you might want to show the previous year's average monthly sales as a trend indicator for ease of comparison. Cosmetics for all the trend-lines rendered can be attained using this set of attributes.\n\nAlthough there are set of attributes of the `line object`, used to create and customize trend-lines, these set of attributes effect all the trend-lines rendered in your chart."
    },
    {
        "table": "Trend-lines Display Value Cosmetics",
        "path": "chart",
        "attrs": [
            {
                "description": "Sets the font family for the trend-line display value.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.8.0",
                "name": "trendValueFont"
            }, 
            {
                "description": "Sets the font size for the trend-line display value.",
                "range": " ",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueFontSize"
            },  
            {
                "description": "Sets whether the trend-line display value will be bold formatted. \n\nDefault value: 0 (not bold formatted)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueFontBold"
            },
            {
                "description": "Sets whether the trend-line display value will be italicized. \n\nDefault value: 0 (not italicized)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueFontItalic"
            },
            {
                "description": "Sets the background color for the trend-line display value.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "trendValueBgColor"
            },
            {
                "description": "Sets the border color for the trend-line display value.",
                "range": "",
                "type": "Hex Color Code",
                "versionsince": "3.8.0",
                "name": "trendValueBorderColor"
            }, 
            {
                "description": "Sets the transparency for the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueAlpha"
            },
            {
                "description": "Sets the transparency for the background of the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBgAlpha"
            }, 
            {
                "description": "Sets the transparency for the border around the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderAlpha"
            }, 
            {
                "description": "Sets padding for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderPadding"
            }, 
            {
                "description": "Sets the radius for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderRadius"
            },
            {
                "description": "Sets the thickness for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderThickness"
            },
            {
                "description": "Whether the border around the trend-line display value should be rendered as dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the trend-line display value is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the trend-line display value is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashGap"
            }
        ],
        "description": "These attributes let you customize the text displayed with a trend-line. \n\n__Note__: These attributes belong to the `chart` object and  not to the `line` object (child of the `trendline` object). They are, therefore, applied to all trend-lines on your chart. "
    },
    {
        "table": "Vertical Trend-lines",
        "path": "line",
        "attrs": [
            {
                "description": "The starting value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `startValue` would be 102.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "startValue"
            },
            {
                "description": "The ending y-axis value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `endValue` would be 109. If you do not specify a value for `endValue`, it would automatically assume the same value as `startValue`.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "endValue"
            },
            {
                "description": "If you want to display a string caption for the trend line by its side, you can use this attribute. Example:` displayValue='Last Month High'`. When you don't supply this attribute, it automatically takes the value of `startValue`.",
                "range": "",
                "type": "String",
                "name": "displayValue"
            },
            {
                "description": "Color of the trend line and its associated text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether the trend will be displayed as a line or a zone (fill-colored rectangle).",
                "range": "0/1",
                "type": "Boolean",
                "name": "isTrendZone"
            },
            {
                "description": "Whether the trend line/zone would be displayed over data plots or behind them.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showOnTop"
            },
            {
                "description": "If you have opted to show the trend as a line, this attribute lets you define the thickness of trend line.",
                "range": "In Pixels",
                "type": "Number",
                "name": "thickness"
            },
            {
                "description": "Alpha of the trend line.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Whether the trendline should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "Sets the length of each dash when trendline is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when trendline is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashGap"
            }
        ],
        "description": "Vertical trend lines help you create vertical trend-lines/zones on candlestick charts. These are vertical lines spanning the chart canvas which aid in interpretation of data with respect to some pre-determined value. To add a vertical trend-line to a chart, the `vTrendlines` and `line` (child of the `vTrendlines` object) objects are used as shown in the example below: \n\n<pre class=\"language-javascript\"><code>\n\"vTRendlines\"[{\n\t\"line\": [{\n\t\t\"startValue\": \"20000\",\n\t\t\"endValue\": \"3000\",\n\t\t\"isTrendZone\": \"1\",\n\t\t\"color\": \"#aaaaaa\", \n\t\t\"alpha\": \"14\"\n\t\t}]\n\t}]\n</code></pre>\nYou can control the cosmetic and functional properties of vertical trend-lines using the following attributes:"
    }
]