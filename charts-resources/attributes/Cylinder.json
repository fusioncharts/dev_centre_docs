[
    {
        "table": "Chart captions",
        "attrs": [
            {
                "description": "Caption of the chart.",
                "type": "String",
                "name": "caption"
            },
            {
                "description": "Sub-caption of the chart.",
                "type": "String",
                "name": "subCaption"
            }
        ],
        "description": "Using these attributes, you can set the various headings and titles of chart like caption, sub-caption."
    },
    {
        "table": "Chart Caption Cosmetics",
        "attrs": [
            {
                "description": "Sets horizontal alignment of caption",
                "range": "\"left\", \"center\", \"right\"",
                "type": "String",
                "name": "captionAlignment"
            },
            {
                "description": "Whether caption should be on top of the data plot area",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionOnTop"
            },
            {
                "description": "Sets the caption font size in pixels",
                "range": "6 - 72",
                "type": "Number",
                "name": "captionFontSize"
            },
            {
                "description": "Sets the sub-caption font size (in pixels)",
                "range": "6 - 72",
                "type": "Number",
                "name": "subCaptionFontSize"
            },
            {
                "description": "Sets the caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "captionFont"
            },
            {
                "description": "Sets the sub-caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "subCaptionFont"
            },
            {
                "description": "Sets the caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "captionFontColor"
            },
            {
                "description": "Sets the sub-caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "subCaptionFontColor"
            },
            {
                "description": "Whether the caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionFontBold"
            },
            {
                "description": "Whether the sub caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "subCaptionFontBold"
            },
            {
                "description": "Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area",
                "range": "0/1",
                "type": "Boolean",
                "name": "alignCaptionWithCanvas"
            },
            {
                "description": "If caption is not centre aligned, lets you configure the padding (in pixels) from either edge.\nWill be ignored if caption is centre aligned.",
                "range": "In Pixels",
                "type": "Number",
                "name": "captionHorizontalPadding"
            }
        ],
        "description": "These attributes let you configure the cosmetics of chart caption and sub-caption."
    },
    {
        "table": "Functional Attributes",
        "attrs": [
            {
                "description": "This attribute lets you set the configuration whether the chart should appear in an animated fashion. If you do not want to animate any part of the chart, set this as 0.",
                "range": "0/1",
                "type": "Boolean",
                "name": "animation"
            },
            {
                "description": "This attribute sets the animation duration, if `animation` is set to `1`. \n\nDefault value: 1 sec",
                "range": "In seconds",
                "type": "Number",
	    		"Versionsince": "3.11.0",
                "name": "animationDuration"
            },
            {
                "description": "Whether to show chart's value?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showValue"
            },
            {
                "description": "The entire chart can now act as a hotspot. Use this URL to define the hotspot link for the chart. The link can be specified in FusionCharts Link Format.",
                "range": "",
                "type": "URL in FusionCharts format",
                "name": "clickURL"
            },
            {
                "description": "Each chart has 5 pre-defined color palettes which you can choose from. Each palette renders the chart in a different color theme. ",
                "range": "1-5",
                "type": "Number",
                "name": "palette"
            },
            {
                "description": "If you want your own palette derived from a particular hex color, you can specify the same here. All other colors on the chart will automatically derive from that palette.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "paletteThemeColor"
            },
            {
                "description": "If you've defined the chart parameters (like gauge origin, co-ordinates etc.) using a different chart size and now want to scale the chart to a different size, you need to specify the original width and height and then set this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "autoScale"
            },
            {
                "description": "Setting this attribute to 1, you can allow the chart to automatically resize itself when the parent container of the chart is resized. This setting is not applicable when `autoScale` is set to `0`.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "manageResize"
            },
            {
                "description": "If you've opted to dynamically resize the chart, you can convey the original width of chart using this attribute. It refers to the width based on which you had defined the various co-ordinates of the gauge. For example, if you had designed a gauge with 300 px width and in that you had set the cylinder radius to be 100, then you can use the dynamic resizing feature and specify `origW='300'`. It will automatically check the current width and scale the cylinder radius etc. appropriately. Please note that both the original width and height of the chart need to be set. To know more on how this attribute works, please read Angular Gauge &gt; Dynamic Resizing page.",
                "range": "In pixels",
                "type": "Number",
                "name": "origW"
            },
            {
                "description": "If you've opted to dynamically resize the chart, you can convey the original height of chart using this attribute. It refers to the height based on which you had defined the various co-ordinates/radius of the gauge. For example, if you had designed a gauge with 300 px height and in that you had set the cylinder radius to be 100, then you can use the dynamic resizing feature and specify `origH='300'`. It will automatically check the current height and scale the cylinder radius etc. appropriately. Please note that both the original width and height of the chart need to be set. To know more on how this attribute works, please read Angular Gauge &gt; Dynamic Resizing page.",
                "range": "In pixels",
                "type": "Number",
                "name": "origH"
            },
            {
                "description": "Whether to show &quot;Print Chart&quot; item in the context menu of the chart? Even if you opt to hide the item in context menu, you can still opt to invoke `print()` JavaScript method of the chart to print the same.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPrintMenuItem"
            },
            {
                "description": "By default, the real-time charts wait for a few seconds after rendering for the first time and before updating itself with new data. To allow the chart to start updating itself as soon as it is rendered, set this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "refreshInstantly"
            },
            {
                "description": "Whether to use advanced gradients and shadow effects to create better looking 3D cylinder?",
                "range": "0/1",
                "type": "Boolean",
                "name": "use3DLighting"
            },
            {
                "description": "This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. ",
                "range": "",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "hasRTLText"
            },
            {
                "description": "This attribute changes the theme of the chart. There are 4 types of themes which have been made according to the different color combinations.",
                "range": "‘carbon’, ‘fusion’, ‘ocean’, ‘zune’",
                "type": "String",
                "name": "theme"
            }
        ],
        "description": "These attributes let you control a variety of functional elements on the chart. For example, you can opt to show/hide data labels, data values. You can also set chart limits and extended properties."
    },
    {
        "table": "Chart Message-related Attributes",
        "attrs": [
        	{
                "description": "This attribute allows to set a custom font for all chart messages.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFont"
            },
            {
                "description": "This attribute allows to set a custom font size for all chart messages.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFontSize"
            },
            {
                "description": "This attribute allows to set a custom font color for all chart messages.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "baseChartMessageColor"
            },
            {
                "description": "This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageHAlign"
            },
            {
                "description": "This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageVAlign"
            },
            {
                "description": "This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageAlpha"
            },
            {
                "description": "This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when a chart begins to load.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "loadMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when a chart begins to load.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "loadMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when a chart begins to load.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "loadMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when the specified chart type is not supported.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when the specified chart type is not supported.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when the specified chart type is not supported.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed when chart data begins loading.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when chart data begins loading.",
                "range": "In pixels",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when chart data begins loading.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the specified chart data is invalid.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the specified chart data is invalid.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the specified chart data is invalid.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageScale"
            }
        ],
        "description": "These attributes let you set and configure custom chart messages, using text as well as images."
    },
    {
        "table": "Axis & Tick mark properties",
        "attrs": [
            {
                "description": "This attribute lets you set whether the lower limit will be 0 (in case of all positive values on chart) or should the lower limit adapt itself to a different figure based on values provided to the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "setAdaptiveMin"
            },
            {
                "description": "This attribute helps you explicitly set the upper limit of the chart. If you don't specify this value, the chart automatically calculates the lower limit based on the data provided by you.",
                "range": "",
                "type": "Number",
                "name": "upperLimit"
            },
            {
                "description": "This attribute helps you explicitly set the lower limit of the chart. If you don't specify this value, the chart automatically calculates the upper limit based on the data provided by you.",
                "range": "",
                "type": "Number",
                "name": "lowerLimit"
            },
            {
                "description": "This attribute allows you to display a label instead of the lower limit. For example, in a chart displaying Literacy Rate on a scale of 0 - 100%, you may need to show the label Low at the starting point of the chart. Upon using this attribute to specify the label, the value 0 will be replaced by Low. Default value: If you do not specify the `lowerLimitDisplay` attribute, the lower limit value will be shown.",
                "range": "",
                "type": "String",
                "name": "lowerLimitDisplay"
            },
            {
                "description": "This attribute allows you to display a label instead of the upper limit. Upon using this attribute, the upper limit of the chart gets replaced by the label specified. Default value: If you do not specify the `upperLimitDisplay` attribute, the upper limit value will be shown.",
                "range": "",
                "type": "String",
                "name": "upperLimitDisplay"
            },
            {
                "description": "Whether to show tick marks?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTickMarks"
            },
            {
                "description": "Whether to show tick values?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTickValues"
            },
            {
                "description": "Whether to show the first and last tick value (i.e., chart lower and upper limit)?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLimits"
            },
            {
                "description": "Whether to adjust major tick mark number so as to best distribute the specified chart scale.",
                "range": "0/1",
                "type": "Boolean",
                "name": "adjustTM"
            },
            {
                "description": "Whether to show ticks on the left or right side of gauge? By default, this attribute is turned on.",
                "range": "0/1",
                "type": "Boolean",
                "name": "ticksOnRight"
            },
            {
                "description": "Number of major tick marks.",
                "range": "",
                "type": "Number",
                "name": "majorTMNumber"
            },
            {
                "description": "Major tick marks color.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "majorTMColor"
            },
            {
                "description": "Major tick marks alpha.",
                "range": "0 - 100",
                "type": "Number",
                "name": "majorTMAlpha"
            },
            {
                "description": "Width of major tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "majorTMHeight"
            },
            {
                "description": "Thickness of major tick mark line.",
                "range": "In pixels",
                "type": "Number",
                "name": "majorTMThickness"
            },
            {
                "description": "Number of minor tick marks. Minor tick marks refer to the tick marks between two major tick marks.",
                "range": "",
                "type": "Number",
                "name": "minorTMNumber"
            },
            {
                "description": "Color of minor tick marks.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "minorTMColor"
            },
            {
                "description": "Alpha of minor tick marks.",
                "range": "0 - 100",
                "type": "Number",
                "name": "minorTMAlpha"
            },
            {
                "description": "Width of minor tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "minorTMHeight"
            },
            {
                "description": "Thickness of minor tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "minorTMThickness"
            },
            {
                "description": "Distance between the gauge and tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "tickMarkDistance"
            },
            {
                "description": "Distance between tick values and tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "tickValueDistance"
            },
            {
                "description": "If you need to show every n-th tick value only, you can specify that value here. The upper and lower limit of the scale is always displayed.",
                "range": "",
                "type": "Number",
                "name": "tickValueStep"
            },
            {
                "description": "Number of decimals to which tick values will be rounded to.",
                "range": "",
                "type": "Number",
                "name": "tickValueDecimals"
            },
            {
                "description": "Whether to force number of decimals on tick values?",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceTickValueDecimals"
            }
        ],
        "description": "The following attributes configures the Axis and the tick marks on the chart. "
    },
    {
        "table": "Real-time properties",
        "attrs": [
            {
                "description": "This parameter sets the path of the page which is supposed to relay real-time data to the chart. If you've special characters as a part of your data stream URL, like `?` or `&`, you'll need to URL Encode the entire `dataStreamURL`. This page needs to be on the same sub-domain on which the chart is hosted and invoked from.",
                "range": "",
                "type": "URL",
                "name": "dataStreamURL"
            },
            {
                "description": "For this parameter, you can specify the number of seconds after which the chart will look for new data. This process will happen continuously - i.e., if you specify 5 seconds here, the chart will look for new data every 5 seconds.",
                "range": "In seconds",
                "type": "Number",
                "name": "refreshInterval"
            },
            {
                "description": "Constantly changing data stamp that can be added to real time Data URL, so as to maintain a state. Please see the section Real time capabilities &gt; Adding data stamp",
                "range": "",
                "type": "String",
                "name": "dataStamp"
            },
            {
                "description": "Whether to show the real-time update related menu items (like Start/Stop Update) in chart's context menu? Note: For JavaScript charts real-time update related menu items do not appear by default. You need to explicitly set `'showRTMenuItem': '1'` in  the `chart` object. The menu appears as a button on the bottom-left corner of the JavaScript chart. You can then use the button to Start/Stop Update or Clear chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showRTMenuItem"
            }
        ],
        "description": "Using these attributes, you can configure the real-time feature. "
    },
    {
        "table": "Cylinder Properties",
        "attrs": [
            {
                "description": "Origin x co-ordinate for cylinder.",
                "range": "In pixels",
                "type": "Number",
                "name": "cylOriginX"
            },
            {
                "description": "Origin y co-ordinate for cylinder.",
                "range": "In pixels",
                "type": "Number",
                "name": "cylOriginY"
            },
            {
                "description": "Radius for the cylinder.",
                "range": "In pixels",
                "type": "Number",
                "name": "cylRadius"
            },
            {
                "description": "If you want to manually specify the height for cylinder, please use this attribute.",
                "range": "In pixels",
                "type": "Number",
                "name": "cylHeight"
            },
            {
                "description": "Y-scale perspective for cylinder.",
                "range": "0-50",
                "type": "Number",
                "name": "cylYScale"
            },
            {
                "description": "Color of cylinder fill.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "cylFillColor"
            },
            {
                "description": "Sets the color of cylinder’s glass.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "cylGlassColor"
            }
        ],
        "description": "The following attributes let you control the cylinder properties: "
    },
    {
        "table": "Message Logger",
        "attrs": [
            {
                "description": "Whether to use message logger for the chart?",
                "range": "0/1",
                "type": "Boolean",
                "name": "useMessageLog"
            },
            {
                "description": "This attribute lets you set the width percent of the message logger window w.r.t entire chart width. So, if you set it as 80, the message logger window will take up 80% of chart width.",
                "range": "In percent",
                "type": "Number",
                "name": "messageLogWPercent"
            },
            {
                "description": "This attribute lets you set the height percent of the message logger window w.r.t entire chart height.",
                "range": "In percent",
                "type": "Number",
                "name": "messageLogHPercent"
            },
            {
                "description": "Whether to show the title for message logger?",
                "range": "0/1",
                "type": "Boolean",
                "name": "messageLogShowTitle"
            },
            {
                "description": "If you've opted to show the title for message logger, you can define your custom title here. Examples are &quot;Error log&quot;, &quot;Server History&quot; etc. The title displays at the top left corner of chart.",
                "range": "",
                "type": "String",
                "name": "messageLogTitle"
            },
            {
                "description": "You can customize the color of the entire message log window by setting a hex value for this attribute.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "messageLogColor"
            },
            {
                "description": "The messages streamed to the chart can either be displayed in the message log window or can be passed to JavaScript (which we'll see next). This attribute lets you control whether the messages should be logged in the in-built log window.",
                "range": "0/1",
                "type": "Boolean",
                "name": "messageGoesToLog"
            },
            {
                "description": "This attribute lets you configure whether each message streamed from the server should be passed to a local JavaScript function.",
                "range": "0/1",
                "type": "Boolean",
                "name": "messageGoesToJS"
            },
            {
                "description": "If you've opted to pass each message to JavaScript function, this attribute lets you define the name of the function. This helps you create your custom functions to react to messages streamed from server.",
                "range": "",
                "type": "String",
                "name": "messageJSHandler"
            },
            {
                "description": "Whether to pass all message envelope parameters to the custom JavaScript function.",
                "range": "0/1",
                "type": "Boolean",
                "name": "messagePassAllToJS"
            }
        ],
        "description": "FusionWidgets XT uses the concept of streaming and showing real-time messages in the chart using Message Logger. The Message logger can be effectively used to show necessary real-time information or live error logs. "
    },
    {
        "table": "Number Formatting Properties",
        "attrs": [
            {
                "description": "This configuration determines whether the numbers displayed on the chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumber"
            },
            {
                "description": "Using this attribute, you could add prefix to all the numbers visible on the graph. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.",
                "range": "",
                "type": "String",
                "name": "numberPrefix"
            },
            {
                "description": "Using this attribute, you could add suffix to all the numbers visible on the graph. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.",
                "range": "",
                "type": "String",
                "name": "numberSuffix"
            },
            {
                "description": "Number of decimal places to which all numbers on the chart will be rounded to.",
                "range": "",
                "type": "Number",
                "name": "decimals"
            },
            {
                "description": "Whether to add 0 padding at the end of decimal numbers? For example, if you set decimals as 2 and a number is 23.4. If `forceDecimals` is set to 1, the number will automatically be converted to 23.40 (note the extra 0 at the end).",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceDecimals"
            },
            {
                "description": "Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - e.g., if `formatNumberScale` is set to 1, 1043 will become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumberScale"
            },
            {
                "description": "The default unit of the numbers that you're providing to the chart.",
                "range": "",
                "type": "String",
                "name": "defaultNumberScale"
            },
            {
                "description": "Unit of each block of the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleUnit"
            },
            {
                "description": "Range of the various blocks that constitute the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleValue"
            },
            {
                "description": "If a data value is less than the lowest given number is the number scale, this attribute forces the lower value of the  `numberScaleUnit` to be applied to that data value.  This attribute works only when `“formatNumberScale”: “1”` and the `defaultNumberScale` attribute is not defined. \n\nFor example, if `“numberScaleUnit”: “K, M”`, `“numberScaleValue”: “1000, 1000”`, and `“forceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.9.0",
                "name": "forceNumberScale"
            },
            {
                "description": "Whether recursive scaling should be applied.",
                "range": "0/1",
                "type": "Boolean",
                "name": "scaleRecursively"
            },
            {
                "description": "How many recursions to complete during recursive scaling? -1 completes the entire set of recursion.",
                "range": "",
                "type": "Number",
                "name": "maxScaleRecursion"
            },
            {
                "description": "What character to use to separate the scales that are generated after recursion?",
                "range": "",
                "type": "String",
                "name": "scaleSeparator"
            },
            {
                "description": "This attribute helps you specify the character to be used as the decimal separator in a number.",
                "range": "",
                "type": "String",
                "name": "decimalSeparator"
            },
            {
                "description": "This attribute helps you specify the character to be used as the thousands separator in a number.",
                "range": "",
                "type": "String",
                "name": "thousandSeparator"
            },
            {
                "description": "This option helps you specify the position of the thousand separator.",
                "range": "",
                "type": "Number",
                "versionsince": "3.2 - SR1",
                "name": "thousandSeparatorPosition"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML/JSON, if you specify such values, it will give an error while converting to number. The chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the decimal separator.",
                "range": "",
                "type": "String",
                "name": "inDecimalSeparator"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML/JSON, if you specify such values, it will give an error while converting to number. The chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the thousand separator.",
                "range": "",
                "type": "String",
                "name": "inThousandSeparator"
            }
        ],
        "description": "Using the attributes below, you can control a myriad of options like: Formatting of commas and decimals Number prefixes and suffixes Decimal places to which the numbers will round to Scaling of numbers based on a user defined scale Custom number input formats "
    },
    {
        "table": "Chart Cosmetics",
        "attrs": [
            {
                "description": "This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `#FF5904, #FFFFFF`.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Sets the alpha (transparency) for the background. If you've opted for gradient background, you need to set a list of alpha(s) separated by comma.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "If you've opted for a gradient background, this attribute lets you set the ratio of each color constituent.",
                "range": "",
                "type": "Numbers separated by comma",
                "name": "bgRatio"
            },
            {
                "description": "Angle of the background color, in case of a gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "bgAngle"
            },
            {
                "description": "Whether to show a border around the chart or not?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showBorder"
            },
            {
                "description": "Border color of the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "borderColor"
            },
            {
                "description": "Border thickness of the chart.",
                "range": "In pixels",
                "type": "Number",
                "name": "borderThickness"
            },
            {
                "description": "Border alpha of the chart.",
                "range": "0 - 100",
                "type": "Number",
                "name": "borderAlpha"
            },
            {
                "description": "To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.",
                "range": "",
                "type": "String",
                "name": "bgImage"
            },
            {
                "description": "This attribute specifies the opacity for the loaded background image.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgImageAlpha"
            },
            {
                "description": "Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.",
                "range": "'stretch', 'tile', 'fit', 'fill', 'center', 'none'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageDisplayMode"
            },
            {
                "description": "Helps you to vertically align the background image.",
                "range": "'top', 'middle', 'bottom'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageVAlign"
            },
            {
                "description": "Helps you to horizontally align the background image.",
                "range": "'left', 'middle', 'right'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageHAlign"
            },
            {
                "description": "Helps you magnify the background image.This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.2",
                "name": "bgImageScale"
            },
            {
                "description": "You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.",
                "range": "",
                "type": "String",
                "name": "logoURL"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on the left side of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoLeftMargin"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on top of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoTopMargin"
            },
            {
                "description": "Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen",
                "range": "'TL', 'TR', 'BL', 'BR', 'CC'",
                "type": "String",
                "name": "logoPosition"
            },
            {
                "description": "Once the logo has loaded on the chart, you can configure its opacity using this attribute.",
                "range": "0 - 100",
                "type": "Number",
                "name": "logoAlpha"
            },
            {
                "description": "You can also change the size of externally loaded logo at run-time by specifying a value for this parameter.",
                "range": "0 - 100",
                "type": "Number",
                "name": "logoScale"
            },
            {
                "description": "If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts link format, allowing you to link to new windows, pop-ups, frames etc.",
                "range": "",
                "type": "String",
                "name": "logoLink"
            }
        ],
        "description": "The following attributes let you configure chart cosmetics like background color, background alpha, canvas color & alpha etc. "
    },
    {
        "table": "Data Value Cosmetics",
        "attrs": [
            {
                "description": "Sets the font of the values in the chart",
                "range": "Font Name",
                "type": "String",
                "name": "valueFont"
            },
            {
                "description": "Specifies the value font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueFontColor"
            },
            {
                "description": "Specifies the value font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "valueFontSize"
            },
            {
                "description": "Whether value font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueFontBold"
            },
            {
                "description": "Whether value font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueFontItalic"
            },
            {
                "description": "Sets the background color for value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBgColor"
            },
            {
                "description": "Sets the border color around the value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBorderColor"
            },
            {
                "description": "Sets the value alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueAlpha"
            },
            {
                "description": "Sets the value font alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueFontAlpha"
            },
            {
                "description": "Sets the value background alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueBgAlpha"
            },
            {
                "description": "Sets the value border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueBorderAlpha"
            },
            {
                "description": "Sets the value border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderThickness"
            },
            {
                "description": "Sets the padding between the value and its surrounding border",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderPadding"
            },
            {
                "description": "Sets the value border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderRadius"
            },
            {
                "description": "Whether the border around the data values should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the data values is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "valueBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the data values is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "valueBorderDashGap"
            }
        ],
        "description": "These attributes let you configure font, background and border cosmetics, of value text-field that appear for each data plot."
    },
    {
        "table": "Font Properties",
        "attrs": [
            {
                "description": "This attribute lets you set the font face (family) of all the text (data labels, values etc.) on chart. If you specify the `outCnvBaseFont` attribute also, then this attribute controls only the font face of text within the chart canvas bounds.",
                "range": "Font Name",
                "type": "String",
                "name": "baseFont"
            },
            {
                "description": "This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font size provided here.",
                "range": "",
                "type": "Number",
                "name": "baseFontSize"
            },
            {
                "description": "This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font color provided here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "baseFontColor"
            }
        ],
        "description": "Using the attributes below, you can define the generic font properties for all the text on the chart. These attributes allow you a high level control over font properties. If you intend to specify font properties for individual chart elements (like Caption, sub-caption etc.), you'll need to use the Styles feature. Using Styles, you can also specify advanced font properties like Bold, Italics, HTML Mode etc. Using Styles you can also configure real-time values. "
    },
    {
        "table": "Tooltip Attributes",
        "attrs": [
            {
                "description": "Whether to show tooltip for the annotations?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTip"
            },
            {
                "description": "Background color for the tooltip",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBgColor"
            },
            {
                "description": "Font color for the tool-tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipColor"
            },
            {
                "description": "Border Color for the tooltip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBorderColor"
            },
            {
            	"description": "Sets the border transparency for tool tip.",
                "range": "0 - 100",
                "type": "NUmber",
                "name": "tooltipBorderAlpha"	
            },
            {
                "description": "Whether to show shadow for tooltips.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTipShadow"
            },
            {
                "description": "Specify custom text for the tooltip \n\n You can either specify a constant string as the tooltip text or you can use variable values from the data level by prefixing a __$__ to the attribute name, for example, __$name__, __$value__.",
                "range": "",
                "type": "String",
                "name": "plottooltext"
            }
        ],
        "description": "These attributes let you control the tooltip. You can set the background color, border color, separator character and few other details. "
    },
    {
        "table": "Attributes for Exporting Charts",
        "attrs": [
            {
                "description": "Whether the chart will allow exporting to images, PDFs, SVG or XLS.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportEnabled"
            },
            {
                "description": "In case of server-side exporting, the action specifies whether the exported image will be sent back to client as download, or whether it'll be saved on the server. \n\n__Default value__: download",
                "range": "'save' or 'download'",
                "type": "String",
                "name": "exportAction"
            },
            {
                "description": "In case of server side exporting, this refers to the path of the server-side export handler (the ready-to-use scripts that we provide).",
                "range": "",
                "type": "String",
                "name": "exportHandler"
            },
            {
                "description": "Lets you configure what output formats to allow for export of chart, in the export context menu, and also customize the label for each menu item. The attribute value should be a pipe (&#124;) delimited separated key-value pair. Example: `exportFormats: 'PNG=Export as High Quality Image&#124;JPG&#124;PDF=Export as PDF File'`",
                "range": "",
                "type": "String",
                "name": "exportFormats"
            },
            {
                "description": "This attribute when set to __1__, enables the client-side export feature.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportAtClientSide"
            },
            {
                "description": "Whether the menu items related to export (e.g., Save as JPEG etc.) will appear in the context menu of chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportShowMenuItem"
            },
            {
                "description": "In case of server-side exporting and when using download as action, this lefts you configure whether the return image, PDF, SVG or XLS will open in same window (as an attachment for download), or whether it will open in a new window. \n\n__Default value__: _self",
                "range": "'_self' or '_blank'",
                "type": "String",
                "name": "exportTargetWindow"
            },
            {
                "description": "Using this attribute you can specify the name (excluding the extension) of the output (export) file.",
                "range": "",
                "type": "String",
                "name": "exportFileName"
            }
        ],
        "description": "These attributes allow you to control the saving of chart as image, SVG or XLS."
    },
    {
        "table": "Data Plot Hover Effects",
        "attrs": [
            {
                "description": "Whether to enable hover effect on charts for all elements",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Whether to enable hover effect on charts for data plots (e.g., column, pie) only",
                "range": "0/1",
                "type": "Boolean",
                "name": "plotHoverEffect"
            },
            {
                "description": "Specifies the hover color for the data plots",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotFillHoverColor"
            },
            {
                "description": "Specifies the hover alpha for data plots",
                "range": "1 - 100",
                "type": "Number",
                "name": "plotFillHoverAlpha"
            },
            {
                "description": "This attribute sets the color of the cylinder when hovered.",
                "range": "Hex color code",
                "type": "Color",
                "name": "cylFillHoverColor"
            },
            {
                "description": "This attribute sets the transparency of the cylinder when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "cylFillHoverAlpha"
            }
        ],
        "description": "If you wish to show an effect on the data plot (column, line anchor, pie etc.) when the user hovers his mouse over the data plot, these attributes let you configure the cosmetics of the hover for all data plots in the chart."
    },
    {
        "table": "Chart Paddings & Margins",
        "attrs": [
            {
                "description": "Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartLeftMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartRightMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartTopMargin"
            },
            {
                "description": "Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartBottomMargin"
            },
            {
                "description": "Distance between the value and gauge.",
                "range": "In pixels",
                "type": "Number",
                "name": "valuePadding"
            }
        ],
        "description": "The following attributes help you control chart margins and paddings. FusionWidgets XT allows you manually customize the padding of various elements on the chart to allow advanced manipulation and control over chart visualization. Padding in FusionWidgets XT is always defined in pixels, unless the attribute itself suggests some other scale (like `plotSpacePercent`, which configures the spacing using percentage values). You can also define the chart margins. Chart Margins refer to the empty space left on the top, bottom, left and right of the chart. It's not necessary for you to specify any padding/margin values. FusionCharts Suite XT automatically assumes the best values for the same, if you do not specify the same. "
    }
]