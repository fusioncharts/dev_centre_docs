[
    {
        "table": "Functional Attributes",
        "attrs": [
            {
                "description": "This attribute gives you the option to control animation in your charts. If you do not want to animate any part of the chart, set this as 0.",
                "range": "0/1",
                "type": "Boolean",
                "name": "animation"
            },
            {
                "description": "This attribute sets the animation duration, if `animation` is set to `1`. \n\nDefault value: 1 sec",
                "range": "In seconds",
                "type": "Number",
	    		"Versionsince": "3.11.0",
                "name": "animationDuration"
            },
            {
                "description": "Each chart has 5 pre-defined color palettes which you can choose from. Each palette renders the chart in a different color theme. ",
                "range": "1-5",
                "type": "Number",
                "name": "palette"
            },
            {
                "description": "While the `palette` attribute allows to select a palette theme that applies to chart background, canvas, font and tool-tips, it does not change the colors of data items (that is, column, line, pie etc.). Using `paletteColors` attribute, you can specify your custom list of hex colors for the data items. The list of colors have to be separated by comma, for example, `&quot;paletteColors&quot;: &quot;#FF0000, #0372AB, #FF5904...&quot;`. The chart will cycle through the list of specified colors and then render the data plot accordingly. To use the same set of colors throughout all your charts in a web application, you can store the list of palette colors in your application globally and then provide the same in each chart JSON.",
                "range": "List of hex color codes separated by comma",
                "type": "String",
                "name": "paletteColors"
            },
            {
                "description": "When enabled in auto mode, long data labels are truncated by adding ellipses to prevent them from overflowing the chart background. The default value is 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "useEllipsesWhenOverflow"
            },
            {
                "description": "Specifies the type of data provided in the top-right label. This value is displayed in the tool tip.",
                "range": " ",
                "type": "String",
                "name": "trType"
            },
            {
                "description": "Specifies the type of data provided in the top-left label. This value is displayed in the tool tip.",
                "range": " ",
                "type": "String",
                "name": "tlType"
            },
            {
                "description": "Specifies the type of data provided in the bottom-right label. This value is displayed in the tool tip.",
                "range": " ",
                "type": "String",
                "name": "brType"
            },
            {
                "description": "Specifies the type of data provided in the bottom-left label. This value is displayed in the tool tip.",
                "range": " ",
                "type": "String",
                "name": "blType"
            },
            {
                "description": "If you have opted for STAGGER mode as `labelDisplay`, using this attribute you can control how many lines to stagger the label to. By default, all labels are displayed in a single line.",
                "range": "2 or above",
                "type": "Number",
                "name": "staggerLines"
            },
            {
                "description": "Sets the configuration whether data values would be displayed along with the data plot on chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showValues"
            },
            {
                "description": "Whether to show chart limit values.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLimits"
            },
            {
                "description": "Whether to show div line values.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showDivLineValues"
            },
            {
                "description": "Whether to apply the shadow effects for dataplot.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showShadow"
            },
            {
                "description": "The entire chart can now act as a hotspot. Use this Url to define the hotspot link for the chart. The link can be specified in FusionCharts Link Format.",
                "range": "",
                "type": "String",
                "name": "clickURL"
            },
            {
                "description": "Sets whether the `clickURL` attribute (that sets a link to which the user is directed when the chart is clicked) overrides the `link` attribute (that sets a link to which the user is directed when a data plot is clicked). \n\nDefault value: 0 (`clickURL` does not override `link`)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.7.0",
                "name": "clickURLOverridesPlotLinks"
            },
            {
                "description": "Sets the duration of the animation that takes place when the legends are used to show or hide dataplots.",
                "range": "",
                "type": "Number",
                "name": "interactiveAnimationDuration"
            },
            {
                "description": "Allows you to render a category based heat map chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "mapByCategory"
            },
            {
                "description": "Sets the transparency of all the dataplots in the chart.",
                "range": "0 - 100",
                "type": "Numeric",
                "name": "plotFillAlpha"
            },
            {
                "description": "Internally the chart decodes a Url that you set as link. Before invoking the link it again encodes the Url. If you are passing multilingual characters via a Url or do not want this decode-encode mechanism to be handled by chart you can set,`unescapeLinks='0'`.",
                "range": "0/1",
                "type": "Boolean",
                "name": "unescapeLinks"
            },
            {
                "description": "When you right click on the chart it shows a context menu. This attribute allows you to show or hide the &quot;Print&quot; option in the context menu.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPrintMenuItem"
            },
            {
                "description": "This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. ",
                "range": "",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "hasRTLText"
            },
            {
                "description": "This attribute lets you enable/disable the highlight effect, in the form of a `fadeout`, for the data plots corresponding to a legend item. When this attribute is enabled and the mouse pointer is hovered over a legend item label, plots belonging to the other data series fadeout, by reducing their opacity.\n\n The fadeout effect can be customized by specifying the fadeout color and opacity using the `color` and `alpha` attributes. Eg. `fadeout|color=#ff0000, alpha=60`",
                "range": "",
                "type": "String",
                "name": "plotHighlightEffect"
            },
            {
                "description": "This attribute changes the theme of the chart. There are 4 types of themes which have been made according to the different color combinations.",
                "range": "‘carbon’, ‘fusion’, ‘ocean’, ‘zune’",
                "type": "String",
                "name": "theme"
            }
        ],
        "description": "These attributes let you control a variety of functional elements on the chart. For example, you can opt to show or hide data labels, data values. You can also set chart limits and extended properties. "
    },
    {
        "table": "Chart Message-related Attributes",
        "attrs": [
        	{
                "description": "This attribute allows to set a custom font for all chart messages.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFont"
            },
            {
                "description": "This attribute allows to set a custom font size for all chart messages.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFontSize"
            },
            {
                "description": "This attribute allows to set a custom font color for all chart messages.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "baseChartMessageColor"
            },
            {
                "description": "This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageHAlign"
            },
            {
                "description": "This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageVAlign"
            },
            {
                "description": "This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageAlpha"
            },
            {
                "description": "This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when a chart begins to load.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "loadMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when a chart begins to load.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "loadMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when a chart begins to load.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "loadMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when the specified chart type is not supported.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when the specified chart type is not supported.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when the specified chart type is not supported.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessage"
            },    
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessage"
            },    
            {
                "description": "This attribute allows to set a font for the message displayed when chart data begins loading.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when chart data begins loading.",
                "range": "In pixels",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when chart data begins loading.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data loaded for a chart is empty. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the data loaded for a chart is empty",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the data loaded for a chart is empty.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the data loaded for a chart is empty.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessage"
            },    
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the specified chart data is invalid.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the specified chart data is invalid.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the specified chart data is invalid.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageScale"
            }
        ],
        "description": "These attributes let you set and configure custom chart messages, using text as well as images."
    },
    {
        "table": "Chart Titles and Axis Names",
        "attrs": [
            {
                "description": "Caption of the chart.",
                "type": "String",
                "name": "caption"
            },
            {
                "description": "Sub-caption of the chart.",
                "type": "String",
                "name": "subCaption"
            },
            {
                "description": "X-axis title of the chart.",
                "type": "String",
                "name": "xAxisName"
            },
            {
                "description": "Y-axis title of the chart.",
                "type": "String",
                "name": "yAxisName"
            }
        ],
        "description": "Using these attributes, you can set the various headings and titles of chart like caption, sub-caption, x-axis and y-axis names etc. "
    },
    {
        "table": "Chart Caption Cosmetics",
        "attrs": [
            {
                "description": "Sets horizontal alignment of caption",
                "range": "\"left\", \"center\", \"right\"",
                "type": "String",
                "name": "captionAlignment"
            },
            {
                "description": "Whether caption should be on top of the data plot area",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionOnTop"
            },
            {
                "description": "Sets the caption font size in pixels",
                "range": "6 - 72",
                "type": "Number",
                "name": "captionFontSize"
            },
            {
                "description": "Sets the sub-caption font size (in pixels)",
                "range": "6 - 72",
                "type": "Number",
                "name": "subCaptionFontSize"
            },
            {
                "description": "Sets the caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "captionFont"
            },
            {
                "description": "Sets the sub-caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "subCaptionFont"
            },
            {
                "description": "Sets the caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "captionFontColor"
            },
            {
                "description": "Sets the sub-caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "subCaptionFontColor"
            },
            {
                "description": "Whether the caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionFontBold"
            },
            {
                "description": "Whether the sub caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "subCaptionFontBold"
            },
            {
                "description": "Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area",
                "range": "0/1",
                "type": "Boolean",
                "name": "alignCaptionWithCanvas"
            },
            {
                "description": "If caption is not centre aligned, lets you configure the padding (in pixels) from either edge.\nWill be ignored if caption is centre aligned.",
                "range": "In Pixels",
                "type": "Number",
                "name": "captionHorizontalPadding"
            }
        ],
        "description": "These attributes let you configure the cosmetics of chart caption and sub-caption."
    },
        {
        "table": "Chart Axis Configuration Attributes",
        "attrs": [
            {
                "description": "This attribute is used to show or hide the x axis or the column labels.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showXaxisLabels"
            },
            {
                "description": "This attribute when set to '1', allows you to display the x-axis labels on top of the chart canvas.",
                "range": "0/1",
                "type": "Boolean",
                "name": "placeXAxisLabelsOnTop"
            },
            {
                "description": "Sets color of the x-axis of the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "xAxisLineColor"
            },
            {
                "description": "This attribute lets you set whether the data labels would show up as rotated labels on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "rotatexAxisLabels"
            },
            {
                "description": "This attribute is used to show or hide y axis or the row labels.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showYaxisLabels"
            },
            {
                "description": "If you do not wish to rotate y-axis name, set this as 0. It specifically comes to use when you have special characters (UTF8) in your y-axis name that do not show up in rotated mode.",
                "range": "0/1",
                "type": "Boolean",
                "name": "rotateYAxisName"
            },
            {
                "description": "If you opt to not rotate y-axis name, you can choose a maximum width that will be applied to y-axis name.",
                "range": "(In Pixels)",
                "type": "Number",
                "name": "yAxisNameWidth"
            }
        ],
        "description": "Using these attributes, you can set and configure x-axis labels, y-axis values and set chart cosmetics for the axis like color, alpha, etc."
    },
    {
        "table": "x-Axis Name Cosmetics",
        "attrs": [
            {
                "description": "Sets the x-axis font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "xAxisNameFontColor"
            },
            {
                "description": "Specifies the x-axis font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "xAxisNameFontSize"
            },
            {
                "description": "Whether x-axis font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "xAxisNameFontBold"
            },
            {
                "description": "Whether x-axis font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "xAxisNameFontItalic"
            },
            {
                "description": "Sets the background color for x-axis text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "xAxisNameBgColor"
            },
            {
                "description": "Sets the border around the x-axis text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "xAxisNameBorderColor"
            },
            {
                "description": "Sets the x-axis alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "name": "xAxisNameAlpha"
            },
            {
                "description": "Sets the x-axis font alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "xAxisNameFontAlpha"
            },
            {
                "description": "Sets the x-axis background alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "xAxisNameBgAlpha"
            },
            {
                "description": "Sets the x-axis border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "xAxisNameBorderAlpha"
            },
            {
                "description": "Sets the x-axis border padding",
                "range": "In Pixels",
                "type": "Number",
                "name": "xAxisNameBorderPadding"
            },
            {
                "description": "Sets the x-axis border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "xAxisNameBorderRadius"
            },
            {
                "description": "Sets the x-axis border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "xAxisNameBorderThickness"
            },
            {
                "description": "Whether the border around the x-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "xAxisNameBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the x-axis name is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "xAxisNameBorderDashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when the border around the x-axis name is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "xAxisNameBorderDashGap"
            }
        ],
        "description": "To configure the font cosmetics of x-axis name (title), you can use the following attributes."
    },
    {
        "table": "y-Axis Name Cosmetics",
        "attrs": [
            {
                "description": "Sets the y-axis (primary / secondary) font family for the text",
                "range": "Font Name",
                "type": "String",
                "name": "yAxisNameFont"
            },
            {
                "description": "Sets the y-axis (primary / secondary) font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "yAxisNameFontColor"
            },
            {
                "description": "Specifies the y-axis (primary / secondary) font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "yAxisNameFontSize"
            },
            {
                "description": "Whether y-axis (primary / secondary) font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "yAxisNameFontBold"
            },
            {
                "description": "Whether y-axis (primary / secondary) font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "yAxisNameFontItalic"
            },
            {
                "description": "Sets the background color for y-axis (primary / secondary) text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "yAxisNameBgColor"
            },
            {
                "description": "Sets the border around the y-axis (primary / secondary) text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "yAxisNameBorderColor"
            },
            {
                "description": "Sets the y-axis (primary / secondary) alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "name": "yAxisNameAlpha"
            },
            {
                "description": "Sets the y-axis (primary / secondary) font alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "yAxisNameFontAlpha"
            },
            {
                "description": "Sets the y-axis (primary / secondary) background alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "yAxisNameBgAlpha"
            },
            {
                "description": "Sets the y-axis (primary / secondary) border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "yAxisNameBorderAlpha"
            },
            {
                "description": "Sets the y-axis (primary / secondary) border padding",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisNameBorderPadding"
            },
            {
                "description": "Sets the y-axis (primary / secondary) border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisNameBorderRadius"
            },
            {
                "description": "Sets the y-axis (primary / secondary) border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisNameBorderThickness"
            },
            {
                "description": "Whether the border around the y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "yAxisNameBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the y-axis name is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "yAxisNameBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the y-axis name is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "yAxisNameBorderDashGap"
            }
        ],
        "description": "To configure the font cosmetics of y-axis name (title), you can use the following attributes."
    },
    {
        "table": "Chart Cosmetics",
        "attrs": [
            {
                "description": "Whether to show a border around the chart or not.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showBorder"
            },
            {
                "description": "Border color of the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "borderColor"
            },
            {
                "description": "Border thickness of the chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "borderThickness"
            },
            {
                "description": "Border alpha of the chart.",
                "range": "0 - 100",
                "type": "Number",
                "name": "borderAlpha"
            },
            {
                "description": "This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `#FF5904, #FFFFFF`.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Sets the alpha (transparency) for the background. If you have opted for gradient background, you need to set a list of alpha(s) separated by comma.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "If you have opted for a gradient background, this attribute lets you set the ratio of each color constituent.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgRatio"
            },
            {
                "description": "Angle of the background color, in case of a gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "bgAngle"
            },
            {
                "description": "To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.",
                "range": "",
                "type": "String",
                "versionsince": "3.2.",
                "name": "bgImage"
            },
            {
                "description": "This attribute specifies the opacity for the loaded background image.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.2.",
                "name": "bgImageAlpha"
            },
            {
                "description": "Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.",
                "range": "stretch, tile, fit, fill, center, none",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "bgImageDisplayMode"
            },
            {
                "description": "Helps you to vertically align the background image.",
                "range": "left, center, right",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "bgImageValign"
            },
            {
                "description": "Helps you to horizontally align the background image.",
                "range": "left, center, right",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "bgImageHalign"
            },
            {
                "description": "Helps you magnify the background image.This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.2.1",
                "name": "bgImageScale"
            },
            {
                "description": "This attribute sets the background color for the chart canvas. You can set any hex color code as the value of this attribute. To specify a gradient as canvas background color, separate the hex color codes of each color in the gradient using comma. Example: #FF5904, #FFFFFF.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "canvasBgColor"
            },
            {
                "description": "This attribute sets the background transparency for the chart canvas. For gradient, separate the alpha value using comma. Example: 15, 50.",
                "range": "0 - 100",
                "type": "Number",
                "name": "canvasBgAlpha"
            },
            {
                "description": "When a gradient is used to set the color of the canvas background, this attribute sets the ratio of the colors. Example : If the value of the `canvasBgColor` attribute is set as `#FF5904, #FFFFFF`, `canvasBgRatio` can be used to specify their ratio in the background.",
                "range": "0 - 100",
                "type": "Numbers separated by comma",
                "name": "canvasBgRatio"
            },
            {
                "description": "Helps you specify canvas background angle in case of gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "canvasBgAngle"
            },
            {
                "description": "Lets you specify canvas border color.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "canvasBorderColor"
            },
            {
                "description": "Lets you specify canvas border thickness.",
                "range": "0-5",
                "type": "Number",
                "name": "canvasBorderThickness"
            },
            {
                "description": "Lets you control transparency of canvas border.",
                "range": "0 - 100",
                "type": "Number",
                "name": "canvasBorderAlpha"
            },
            {
                "description": "If you have opted to show a label for any of your vLines in the chart, you can collectively configure whether to show border for all such labels using this attribute. If you want to show label border for just a particular vLine, you can over-ride this value by specifying border configuration for that specific vLine.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showVLineLabelBorder"
            },
            {
                "description": "This attribute lets you set whether the vline labels will show up as rotated labels on the chart. \n\nDefault value: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "rotateVLineLabels"
            },
            {
                "description": "You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.",
                "range": "Url",
                "type": "String",
                "name": "logoURL"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on the left side of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoLeftMargin"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on top of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoTopMargin"
            },
            {
                "description": "Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen",
                "range": "TL, TR, BL, BR, CC",
                "type": "String",
                "name": "logoPosition"
            },
            {
                "description": "Once the logo has loaded on the chart, you can configure its opacity using this attribute.",
                "range": "0 - 100",
                "type": "Number",
                "name": "logoAlpha"
            },
            {
                "description": "You can also change the scale of an externally loaded logo at run-time by specifying a value for this parameter.",
                "range": "0-300",
                "type": "Number",
                "name": "logoScale"
            },
            {
                "description": "If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts Link Format, allowing you to link to new windows, pop-ups, frames etc.",
                "range": "Url",
                "type": "String",
                "name": "logoLink"
            }
        ],
        "description": "The following attributes let you configure chart cosmetics like background color, background alpha, canvas color & alpha etc. "
    },
    {
        "table": "Data Plot Cosmetics",
        "attrs": [
            {
                "description": "Whether the column, area, pie etc. border would show up.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPlotBorder"
            },
            {
                "description": "Color for column, area, pie border.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotBorderColor"
            },
            {
                "description": "Thickness for column, area, pie border.",
                "range": "0-5",
                "type": "Number",
                "name": "plotBorderThickness"
            },
            {
                "description": "Alpha for column, area, pie border.",
                "range": "0 - 100",
                "type": "Number",
                "name": "plotBorderAlpha"
            },
            {
                "description": "Whether the border around the data plots should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "plotBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the data plots are rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "plotBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the data plots are rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "plotBorderDashGap"
            },
            {
                "description": "If you have opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the fill angle for gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "plotFillAngle"
            },
            {
                "description": "If you have opted to fill the plot (column, area etc.) as gradient, this attribute lets you set the ratio for gradient.",
                "range": "0 - 100",
                "type": "Number",
                "name": "plotFillRatio"
            }
        ],
        "description": "These attributes let you configure how your plot (columns, lines, area, pie or any data that you're plotting) would appear on the chart. If the plots can show borders, you can control the border properties using the attributes listed below. Or, if they support gradient fills, you can again configure various properties of the gradient using these attributes. Various other controls over plot cosmetics can be attained using this set of attributes. "
    },
    {
        "table": "Data Value Cosmetics",
        "attrs": [
            {
                "description": "Sets the font of the values in the chart",
                "range": "Font Name",
                "type": "String",
                "name": "valueFont"
            },
            {
                "description": "Specifies the value font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueFontColor"
            },
            {
                "description": "Specifies the value font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "valueFontSize"
            },
            {
                "description": "Whether value font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueFontBold"
            },
            {
                "description": "Whether value font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueFontItalic"
            },
            {
                "description": "Sets the background color for value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBgColor"
            },
            {
                "description": "Sets the border color around the value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBorderColor"
            },
            {
                "description": "Sets the value alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueAlpha"
            },
            {
                "description": "Sets the value font alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueFontAlpha"
            },
            {
                "description": "Sets the value background alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueBgAlpha"
            },
            {
                "description": "Sets the value border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueBorderAlpha"
            },
            {
                "description": "Sets the value border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderThickness"
            },
            {
                "description": "Sets the padding between the value and its surrounding border",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderPadding"
            },
            {
                "description": "Sets the value border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderRadius"
            },
            {
                "description": "Whether the border around the data values should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the data values is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "valueBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the data values is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "valueBorderDashGap"
            }
        ],
        "description": "These attributes let you configure font, background and border cosmetics, of value text-field that appear for each data plot."
    },
    {
        "table": "Chart Padding & Margins",
        "attrs": [
            {
                "description": "This attribute lets you control the space (in pixels) between the sub-caption and top of the chart canvas. If the sub-caption is not defined, it controls the space between caption and top of chart canvas. If neither caption, nor sub-caption is defined, this padding does not come into play.",
                "range": "In Pixels",
                "type": "Number",
                "name": "captionPadding"
            },
            {
                "description": "Using this, you can set the distance between the top end of x-axis title and the bottom end of data labels (or canvas, if data labels are not to be shown).",
                "range": "In Pixels",
                "type": "Number",
                "name": "xAxisNamePadding"
            },
            {
                "description": "Using this, you can set the distance between the right end of y-axis title and the start of y-axis values (or canvas, if the y-axis values are not to be shown).",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisNamePadding"
            },
            {
                "description": "This attribute sets the vertical space between the x-axis labels and canvas bottom edge.",
                "range": "In Pixels",
                "type": "Number",
                "name": "labelXPadding"
            },
            {
                "description": "It sets the horizontal space between the y-axis labels and the canvas right edge.",
                "range": "In Pixels",
                "type": "Number",
                "name": "labelYPadding"
            },
            {
                "description": "Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "chartLeftMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "chartRightMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "chartTopMargin"
            },
            {
                "description": "Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "chartBottomMargin"
            },
            {
                "description": "Padding of legend from right or bottom side of canvas",
                "range": "In Pixels",
                "type": "Number",
                "name": "legendPadding"
            },
            {
                "description": "This attribute lets you control the space between the start of chart canvas and the start (x) of chart. In case of 2D charts, the canvas is the visible rectangular box. Using this attribute, you can control the amount of empty space between the chart left side and canvas left side. By default, the chart automatically calculates this space depending on the elements to be placed on the chart. However, if you want to over-ride this value with a higher value, you can use this attribute to specify the same. Please note that you cannot specify a margin lower than what has been calculated by the chart. This attribute is particularly useful, when you have multiple charts placed in a page and want all their canvas start position to align with each other - so in such a case, you can set same margin value (a value large enough that it does not get rejected by chart owing to it being lower than the calculated value) for all such charts in the page.",
                "range": "In Pixels",
                "type": "Number",
                "name": "canvasLeftMargin"
            },
            {
                "description": "Like `canvasLeftMargin`, this attribute lets you set the space between end of canvas and end of chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "canvasRightMargin"
            },
            {
                "description": "Like `canvasLeftMargin`, this attribute lets you set the space between top of canvas and top of chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "canvasTopMargin"
            },
            {
                "description": "Like `canvasLeftMargin`, this attribute lets you set the space between bottom of canvas and bottom of chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "canvasBottomMargin"
            }
        ],
        "description": "The following attributes help you control chart margins and paddings. FusionCharts Suite XT allows you manually customize the padding of various elements on the chart to allow advanced manipulation and control over chart visualization. Padding in FusionCharts Suite  XT is always defined in pixels, unless the attribute itself suggests some other scale (like `plotSpacePercent`, which configures the spacing using percentage values). You can also define the chart margins. Chart Margins refer to the empty space left on the top, bottom, left and right of the chart. That means, FusionCharts Suite  XT would not plot anything in that space. It is not necessary for you to specify any padding or margin values. FusionCharts Suite  XT automatically assumes the best values for the same, if you do not specify the same. "
    },
    {
        "table": "Data Label Cosmetics",
        "attrs": [
            {
                "description": "It sets the configuration whether the x-axis labels will be displayed or not.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLabels"
            },
            {
                "description": "This attribute can be used to set the maximum height for the x-axis labels (data labels) excluding the x-axis title. If any label goes beyond this height, the label will be truncated. In stagger mode, the number of stagger lines will be reduced if they exceed this value.",
                "range": "In Pixels",
                "versionsince": "3.5.0",
                "type": "Number",
                "name": "maxLabelHeight"
            },
            {
                "description": "Restricts the maximum space allotted for the y-axis data labels with respect to the chart's width. If a data label is longer than the specified percentage width then it will either be wrapped or get truncated, subject to the availability of vertical space. Unnecessary space is not reserved for the labels. If all the labels are shorter than the specified maximum width, this value is not applied.",
                "range": "In Pixels",
                "type": "Numeric",
                "name": "maxLabelWidthPercent"
            },
            {
                "description": "Restricts the minimum length of data labels in terms of percentage of the chart's width that the data labels can occupy. The space thus calculated stays reserved even if the label width is less than the minimum width.",
                "range": "1-100",
                "type": "Number",
                "name": "minLabelWidthPercent"
            },
            {
                "description": "Using this attribute, you can customize the alignment of data labels (x-axis labels). There are 5 options: AUTO, WRAP, STAGGER, ROTATE or NONE. By default, this attribute is set to AUTO mode which means that the alignment of the data labels is determined automatically depending on the size of the chart. WRAP wraps the label text if it is too long to fit in one line. ROTATE rotates the labels vertically. STAGGER divides the labels into multiple lines.",
                "range": "'AUTO', 'WRAP', 'STAGGER', 'ROTATE', 'NONE'",
                "type": "String",
                "name": "labelDisplay"
            },
            {
                "description": "Sets the x-axis label font family for the text.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "labelFont"
            },
            {
                "description": "Sets the x-axis label font color.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "labelFontColor"
            },
            {
                "description": "Specifies the x-axis label font size.",
                "range": "6 - 72",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelFontSize"
            },
            {
                "description": "Flag indicating whether x-axis label font should be bold or not.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "labelFontBold"
            },
            {
                "description": "Flag indicating whether x-axis label font should be italicized or not.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "labelFontItalic"
            },
            {
                "description": "Sets the background color for x-axis label text.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "labelBgColor"
            },
            {
                "description": "Sets the color of the border around the x-axis label text.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "labelBorderColor"
            },
            {
                "description": "Sets the x-axis label alpha for both font and background.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelAlpha"
            },
            {
                "description": "Sets the x-axis label background alpha.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelBgAlpha"
            },
            {
                "description": "Sets the x-axis label border alpha.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelBorderAlpha"
            },
            {
                "description": "Sets the x-axis label border padding.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelBorderPadding"
            },
            {
                "description": "Sets the x-axis label border radius.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelBorderRadius"
            },
            {
                "description": "Sets the x-axis label border thickness.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelBorderThickness"
            },
            {
                "description": "Whether the border around x-axis labels should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "labelBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the x-axis labels are rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around x-axis labels are rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "labelBorderDashGap"
            },
            {
                "description": "Sets a link for every data plot.",
                "range": "",
                "type": "URL",
                "versionsince": "3.5.0",
                "name": "labelLink"
            },
            {
                "description": "Allows user to set Top Left font for the tooltext",
                "range": "Font Name",
                "type": "String",
                "name": "tlFont"
            },
            {
                "description": "Allows user to set Top Left font size for the tooltext",
                "range": "6 - 72",
                "type": "Number",
                "name": "tlFontSize"
            },
            {
                "description": "Allows user to set Top Left font color for the tooltext",
                "range": "Hex color code",
                "type": "Color",
                "name": "tlFontColor"
            },
            {
                "description": "Allows user to set Top Right font for the tooltext",
                "range": "Font Name",
                "type": "String",
                "name": "trFont"
            },
            {
                "description": "Allows user to set Top Right font size for the tooltext",
                "range": "6 - 72",
                "type": "Number",
                "name": "trFontSize"
            },
            {
                "description": "Allows user to set Top Right font color for the tooltext",
                "range": "Hex color code",
                "type": "Color",
                "name": "trFontColor"
            },
            {
                "description": "Allows user to set Bottom Left font for the tooltext",
                "range": "Font Name",
                "type": "String",
                "name": "blFont"
            },
            {
                "description": "Allows user to set Bottom Left font size for the tooltext",
                "range": "6 - 72",
                "type": "Number",
                "name": "blFontSize"
            },
            {
                "description": "Allows user to set Bottom Left font color for the tooltext",
                "range": "Hex color code",
                "type": "Color",
                "name": "blFontColor"
            },
            {
                "description": "Allows user to set Bottom Right font for the tooltext",
                "range": "Font Name",
                "type": "String",
                "name": "brFont"
            },
            {
                "description": "Allows user to set Bottom Right font size for the tooltext",
                "range": "6 - 72",
                "type": "Number",
                "name": "brFontSize"
            },
            {
                "description": "Allows user to set Bottom Right font color for the tooltext",
                "range": "Hex color code",
                "type": "Color",
                "name": "brFontColor"
            }
        ],
        "description": "These attributes let you configure the cosmetics of all data labels of the chart."
    },
    {
        "table": "Tool-tip",
        "attrs": [
            {
                "description": "Whether to show tool tip on chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTip"
            },
            {
                "description": "Background color for tool tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBgColor"
            },
            {
                "description": "Font color for the tool-tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipColor"
            },
            {
                "description": "Border color for tool tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBorderColor"
            },
            {
            	"description": "Sets the border transparency for tool tip.",
                "range": "0 - 100",
                "type": "NUmber",
                "name": "tooltipBorderAlpha"	
            },
            {
                "description": "The character specified as the value of this attribute separates the name and value displayed in tool tip.",
                "range": "",
                "type": "String",
                "name": "toolTipSepChar"
            },
            {
                "description": "Specify custom text for the tooltip \n\n You can either specify a constant string as the tooltip text or you can use variable values from the data level by prefixing a __$__ to the attribute name, for example, __$name__, __$value__.",
                "range": "",
                "type": "String",
                "name": "plottooltext"
            },
            {
                "description": "Whether to show shadow for tool tips on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTipShadow"
            },
            {
                "description": "Sets the transparency of the tooltip.",
                "range": "0 - 100",
                "type": "Number",
                "name": "tooltipbgalpha"
            },
            {
                "description": "Sets the border radius of the tooltip.",
                "range": "In Pixels",
                "type": "Number",
                "name": "tooltipborderradius"
            },
            {
                "description": "Sets the border thickness of the tooltip.",
                "range": "In Pixels",
                "type": "Number",
                "name": "tooltipborderthickness"
            },
            {
                "description": "This attribute sets the vertical space between the value and the border of the tooltip. If you want more space between the value and the border, you can use this attribute to control it.",
                "range": "In Pixels",
                "type": "Number",
                "name": "toolTipPadding"
            }
        ],
        "description": "These attributes let you control the tool tip. You can set the background color, border color, separator character and few other details. "
    },
    {
        "table": "Attributes for Exporting Charts",
        "attrs": [
            {
                "description": "Whether the chart will allow exporting to images, PDFs, SVG or XLS.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportEnabled"
            },
            {
                "description": "In case of server-side exporting, the action specifies whether the exported image will be sent back to client as download, or whether it'll be saved on the server. \n\n__Default value__: download",
                "range": "'save' or 'download'",
                "type": "String",
                "name": "exportAction"
            },
            {
                "description": "In case of server side exporting, this refers to the path of the server-side export handler (the ready-to-use scripts that we provide).",
                "range": "",
                "type": "String",
                "name": "exportHandler"
            },
            {
                "description": "Lets you configure what output formats to allow for export of chart, in the export context menu, and also customize the label for each menu item. The attribute value should be a pipe (&#124;) delimited separated key-value pair. Example: `exportFormats: 'PNG=Export as High Quality Image&#124;JPG&#124;PDF=Export as PDF File'`",
                "range": "",
                "type": "String",
                "name": "exportFormats"
            },
            {
                "description": "This attribute when set to __1__, enables the client-side export feature.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportAtClientSide"
            },
            {
                "description": "Whether the menu items related to export (e.g., Save as JPEG etc.) will appear in the context menu of chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportShowMenuItem"
            },
            {
                "description": "In case of server-side exporting and when using download as action, this lefts you configure whether the return image, PDF, SVG or XLS will open in same window (as an attachment for download), or whether it will open in a new window. \n\n__Default value__: _self",
                "range": "'_self' or '_blank'",
                "type": "String",
                "name": "exportTargetWindow"
            },
            {
                "description": "Using this attribute you can specify the name (excluding the extension) of the output (export) file.",
                "range": "",
                "type": "String",
                "name": "exportFileName"
            }
        ],
        "description": "These attributes allow you to control the saving of chart as image, SVG or XLS."
    },
    {
        "table": "Data Plot Hover Effects",
        "attrs": [
            {
                "description": "Whether to enable hover effect on charts for all elements",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Whether to enable hover effect on charts for data plots (e.g., column, pie) only",
                "range": "0/1",
                "type": "Boolean",
                "name": "plotHoverEffect"
            },
            {
                "description": "Specifies the hover color for the data plots",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotFillHoverColor"
            },
            {
                "description": "Specifies the hover alpha for data plots",
                "range": "1 - 100",
                "type": "Number",
                "name": "plotFillHoverAlpha"
            }
        ],
        "description": "If you wish to show an effect on the data plot (column, line anchor, pie etc.) when the user hovers his mouse over the data plot, these attributes let you configure the cosmetics of the hover for all data plots in the chart."
    },
    {
        "table": "Legend Properties",
        "attrs": [
            {
                "description": "Whether to show legend on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLegend"
            },
            {
                "description": "Whether legend keys should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendItemFontBold"
            },
            {
                "description": "Sets legend item font",
                "range": "Font Name",
                "type": "String",
                "name": "legendItemFont"
            },
            {
                "description": "Sets legend item font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "legendItemFontSize"
            },
            {
                "description": "Sets legend item font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemFontColor"
            },
            {
                "description": "You can add a caption for the entire legend by setting the same here.",
                "range": " ",
                "type": "String",
                "name": "legendCaption"
            },
            {
                "description": "Sets legend item font color on hover",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemHoverFontColor"
            },
            {
                "description": "Sets the legend caption horizontal alignment .",
                "range": "\"left\", \"center\", \"right\"",
                "type": "String",
                "name": "legendCaptionAlignment"
            },
            {
                "description": "Whether legend caption should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendCaptionFontBold"
            },
            {
                "description": "Sets legend caption font",
                "range": "Font Name",
                "type": "String",
                "name": "legendCaptionFont"
            },
            {
                "description": "Sets legend caption font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "legendCaptionFontSize"
            },
            {
                "description": "Sets legend caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendCaptionFontColor"
            },
            {
                "description": "Scaling of legend icon is possible starting PowerCharts XT. This attribute lets you control the size of legend icon.",
                "range": "1-5",
                "type": "Number",
                "name": "legendIconScale"
            },
            {
                "description": "Sets the color that applies on both text font and icon when they are in a  disabled / hidden state",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemHiddenColor"
            },
            {
                "description": "The legend can be plotted at two positions on the chart - below (BOTTOM) the chart and to the right (RIGHT) of the chart.",
                "range": "BOTTOM or RIGHT",
                "type": "String",
                "name": "legendPosition"
            },
            {
                "description": "Background color for the legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendBgColor"
            },
            {
                "description": "Background alpha for the legend.",
                "range": "0 - 100",
                "type": "Number",
                "name": "legendBgAlpha"
            },
            {
                "description": "Border Color for the legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendBorderColor"
            },
            {
                "description": "Border thickness for the legend.",
                "range": "In Pixels",
                "type": "Number",
                "name": "legendBorderThickness"
            },
            {
                "description": "Border alpha for the legend.",
                "range": "0 - 100",
                "type": "Number",
                "name": "legendBorderAlpha"
            },
            {
                "description": "Whether to show a shadow for legend.",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendShadow"
            },
            {
                "description": "The legend can be made drag-able by setting this attribute to 1. End viewers of the chart can drag the legend around on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendAllowDrag"
            },
            {
                "description": "If you have too many items on the legend, a scroll bar shows up on the same. This attribute lets you configure the background color of the scroll bar.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendScrollBgColor"
            },
            {
                "description": "You can reverse the order of datasets in the legend by setting this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "reverseLegend"
            },
            {
                "description": "This attribute lets you interact with the legend in your chart. When you click a legend key, the dataplots associated with that series are eliminated from the chart. Re-clicking the key causes the dataplots to reappear.",
                "range": "0/1",
                "type": "Boolean",
                "name": "interactiveLegend"
            },
            {
                "description": "If your chart contains multiple series, the legend is displayed as a grid comprising of multiple legend keys. With the help of this attribute you can specify the number of columns that are to be displayed in the legend.",
                "range": "Positive Integer",
                "type": "Number",
                "name": "legendNumColumns"
            },
            {
                "description": "Whether to minimize legend item text wrapping.",
                "range": "0/1",
                "type": "Boolean",
                "name": "minimiseWrappingInLegend"
            },
            {
                "description": "Sets the legend pointer color for a gradient legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.10.0",
                "name": "legendPointerColor"
            },
            {
                "description": "Sets the legend pointer transparency for a gradient legend.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.10.0",
                "name": "legendPointerAlpha"
            },
            {
                "description": "Sets the transparency for the legend pointer border for a gradient legend.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.10.0",
                "name": "legendPointerBorderAlpha"
            }, 
            {
                "description": "Sets the color for the border of the legend pointer.",
                "range": "Hex color code",
                "type": "Color",
                "versionsince": "3.10.0",
                "name": "legendpointerbordercolor"
            },   
            {
                "description": "Allows you to set the color of the scale in gradient legend.",
                "range": "",
                "type": "Hex Color Code",
                "name": "legendScaleLineColor"
            },
            {
                "description": "Sets color for the gradient legend's axis border.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.11.0",
                "name": "legendaxisbordercolor"
            },
            {
                "description": "Sets transparency for the gradient legend's axis border.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "legendaxisborderalpha"
            },
            {
                "description": "Allows you to set the transparency of the scale in gradient legend.",
                "range": "0 - 100",
                "type": "Numeric",
                "name": "legendScaleLineAlpha"
            },
            {
                "description": "Allows you to set the thickness of the scale in gradient legend.",
                "range": "",
                "type": "Numeric",
                "name": "legendScaleLineThickness"
            },
            {
                "description": "Allows you to show the legend icon in ascending order in icon legend.",
                "range": "0/1",
                "type": "Boolean",
                "name": "autoOrderLegendIcon"
            },
            {
                "description": "Specifies whether drawing a custom legend icon will be enabled. All legend icon customization attributes will work only if this feature is enabled. \n\nDefault value: 0 (disabled)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "drawCustomLegendIcon"
            },
            {
                "description": "Sets the border color for the legend icon. \n\nDefault value: Data plot border color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "legendIconBorderColor"
            },
            {
                "description": "Sets the background color for the legend icon. \n\nDefault value: Data plot fill color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "legendIconBgColor"
            },
            {
                "description": "Sets the legend icon transparency. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconAlpha"
            },
            {
                "description": "Sets the legend icon background transparency. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconBgAlpha"
            },
            {
                "description": "Sets the number of sides for the legend icon. \n\nDefault value: 4",
                "range": "",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconSides"
            },
            {
                "description": "Sets the thickness of the legend icon border. \n\nDefault value: 1",
                "range": "1-5",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconBorderThickness"
            },
            {
                "description": "Sets the starting angle of for drawing the legend icon. \n\nDefault value: 45",
                "range": "",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconStartAngle"
            },
            {
                "description": "This attribute if set to `0`, the legend box will be center aligned with respect to the entire width of the chart only if the total width of the legend box is more than the canvas width. By default, the legend box is center aligned with respect to the canvas width and it remains the same if the width of the legend box is less than the canvas width.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.10.0",
                "name": "alignLegendWithCanvas"
            }        
        ],
        "description": "In multi-series charts, the series name of each data-set shows up in the legend of the chart. If you do not need the legend, you can opt to hide the same. Also, the legend can be placed at the bottom of the chart or to the right of the chart. Using the attributes below, you can configure the functional and cosmetic properties of the legend. "
    },
    {
        "table": "Number Formatting",
        "attrs": [
            {
                "description": "This configuration determines whether the numbers displayed on the chart will be formatted using commas, for example, 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumber"
            },
            {
                "description": "Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - for example, if `formatNumberScale` is set to 1, 1043 would become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumberScale"
            },
            {
                "description": "The default unit of the numbers that you are providing to the chart.",
                "range": "",
                "type": "String",
                "name": "defaultNumberScale"
            },
            {
                "description": "Unit of each block of the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleUnit"
            },
            {
                "description": "Range of the various blocks that constitute the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleValue"
            },
            {
                "description": "If a data value is less than the lowest given number is the number scale, this attribute forces the lower value of the  `numberScaleUnit` to be applied to that data value.  This attribute works only when `“formatNumberScale”: “1”` and the `defaultNumberScale` attribute is not defined. \n\nFor example, if `“numberScaleUnit”: “K, M”`, `“numberScaleValue”: “1000, 1000”`, and `“forceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.9.0",
                "name": "forceNumberScale"
            },
            {
                "description": "Whether recursive scaling should be applied.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2.1",
                "name": "scaleRecursively"
            },
            {
                "description": "How many recursions to complete during recursive scaling? -1 completes the entire set of recursion.",
                "range": "",
                "type": "Number",
                "versionsince": "3.2.1",
                "name": "maxScaleRecursion"
            },
            {
                "description": "What character to use to separate the scales that are generated after recursion?",
                "range": "",
                "type": "String",
                "versionsince": "3.2.1",
                "name": "scaleSeparator"
            },
            {
                "description": "Using this attribute, you could add prefix to all the numbers visible on the graph. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.",
                "range": "Character",
                "type": "String",
                "name": "numberPrefix"
            },
            {
                "description": "Using this attribute, you could add a suffix to all the numbers visible on the graph. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.",
                "range": "Character",
                "type": "String",
                "name": "numberSuffix"
            },
            {
                "description": "This attribute helps you specify the character to be used as the decimal separator in a number.",
                "range": "Character",
                "type": "String",
                "name": "decimalSeparator"
            },
            {
                "description": "This attribute helps you specify the character to be used as the thousands separator in a number.",
                "range": "Character",
                "type": "String",
                "name": "thousandSeparator"
            },
            {
                "description": "This option helps you specify the position of the thousand separator.",
                "range": " ",
                "type": "Number",
                "versionsince": "3.2.1",
                "name": "thousandSeparatorPosition"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, the chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the decimal separator.",
                "range": "Character",
                "type": "String",
                "name": "inDecimalSeparator"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, the chart accepts the input decimal and thousand separator from user, so that it can convert it accordingly into the required format. This attribute lets you input the thousand separator.",
                "range": "Character",
                "type": "String",
                "name": "inThousandSeparator"
            },
            {
                "description": "Number of decimal places to which all numbers on the chart would be rounded to.",
                "range": "0-10",
                "type": "Number",
                "name": "decimals"
            },
            {
                "description": "Whether to add 0 padding at the end of decimal numbers. For example, If you limit the maximum number of decimal digits to 2, a number like 55.345 will be rounded to 55.34. This does not mean that all numbers will be displayed with a fixed number of decimal places. For instance 55 will not be displayed as 55.00 and 55.1 will not become 55.10. In order to have fixed number of decimal places attached to all the numbers, set this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceDecimals"
            }
        ],
        "description": "PowerCharts XT offers you a lot of options to format your numbers on the chart. Using the attributes below, you can control a myriad of options like: Formatting of commas and decimals Number prefixes and suffixes Decimal places to which the numbers would round to Scaling of numbers based on a user defined scale Custom number input formats "
    },
    {
        "table": "Font Properties",
        "attrs": [
            {
                "description": "This attribute lets you set the font face (family) of all the text (data labels, values etc.) on chart. If you specify the `outCnvBaseFont` attribute also, then this attribute controls only the font face of text within the chart canvas bounds.",
                "range": "Font Name",
                "type": "String",
                "name": "baseFont"
            },
            {
                "description": "This attribute sets the base font size of the chart, that is, all the values and the names in the chart which lie on the canvas will be displayed using the font size provided here.",
                "range": "6 - 72",
                "type": "Number",
                "name": "baseFontSize"
            },
            {
                "description": "This attribute sets the base font color of the chart, that is, all the values and the names in the chart which lie on the canvas will be displayed using the font color provided here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "baseFontColor"
            },
            {
                "description": "This attribute sets the base font family of the chart text which lies outside the canvas, that is, all the values and the names in the chart which lie outside the canvas will be displayed using the font name provided here.",
                "range": "Font Name",
                "type": "String",
                "name": "outCnvBaseFont"
            },
            {
                "description": "This attribute sets the base font size of the chart, that is, all the values and the names in the chart which lie outside the canvas will be displayed using the font size provided here.",
                "range": "6 - 72",
                "type": "Number",
                "name": "outCnvBaseFontSize"
            },
            {
                "description": "This attribute sets the base font color of the chart, that is, all the values and the names in the chart which lie outside the canvas will be displayed using the font color provided here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "outCnvBaseFontColor"
            }
        ],
        "description": "Using the attributes below, you can define the generic font properties for all the text on the chart. These attributes allow you a high level control over font properties. If you intend to specify font properties for individual chart elements (like Caption, sub-caption etc.), you'll need to use the Styles feature of PowerCharts XT. Using Styles, you can also specify advanced font properties like Bold, Italics, HTML Mode etc. "
    },
    {
        "table": "The rows Object and the row Object",
        "path": "row",
        "attrs": [
            {
                "description": "Allows you to specify a unique Id for the rows. This id is used in the `data` object to place the data values in the pre-defined position.",
                "range": "",
                "type": "Number/String",
                "name": "id"
            },
            {
                "description": "Allows you to specify a label for the rows. If you do not specify the label the unique id will be displayed as the label for the rows in the chart. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Allows you to show or hide the label of a particular row.",
                "range": "",
                "type": "String",
                "name": "showLabel"
            }
        ],
        "description": "While the `dataset` object and its child object, the `data` object can be used to define the rows and columns for a heat map chart, you have to be careful about the order of the values for the rows and columns.\n\nThe `rows` object and its child object, the `row` object are used to create rows and predefine their order, enabling you to specify the data values in any order. Although the `row` object has to be defined within the `rows` object, rows cannot be collectively customized using the `rows` object, because it does not have any attributes of its own.\n\nThese attributes let you define the order of rows for a heat map chart."
    },
    {
        "table": "The columns Object and the column Object",
        "path": "column",
        "attrs": [
            {
                "description": "Allows you to specify a unique Id for the columns. This id is used in the `data` object to place the data values in the pre-defined position.",
                "range": "",
                "type": "Number/String",
                "name": "id"
            },
            {
                "description": "Allows you to specify a label for the columns. If you do not specify the label the unique id will be displayed as the label for the rows in the chart. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Allows you to show or hide the label of a particular column.",
                "range": "",
                "type": "String",
                "name": "showLabel"
            }
        ],
        "description": "While the `dataset` object and its child object, the `data` object can be used to define rows and columns for a heat map chart, you have to be careful about the order of the values for the rows and columns.\n\nThe `columns` object and its child object, the `column` object are used to create columns and predefine their order, enabling you to specify the data values in any order.\n\nAlthough the `column` object has to be defined within the `columns ` object, note that columns cannot be collectively customized because the `columns` object does not have any attributes of its own.\n\nThese attributes let you define the order of columns for a heat map chart."
    },
    {
        "table": "The dataset Object and the data Object",
        "path": "data",
        "attrs": [
            {
                "description": "Specifies the position of the row where the data it is to be placed in the chart. If the `rows` object is used then it is mandatory to use the same id which is defined in the `row` object by the `id` attribute.",
                "range": "",
                "type": "String",
                "name": "rowId"
            },
            {
                "description": "Specifies the position of the column where the data it is to be placed in the chart. If the `columns` object is used then it is mandatory to use the same id which is defined in the `column` object by the `id` attribute.",
                "range": "",
                "type": "String",
                "name": "columnId"
            },
            {
                "description": "This attribute is used to provide the color-range label which is defined in the `color` object of the `colorRange` object. It is used only in category based heat map chart.",
                "range": "",
                "type": "String",
                "name": "colorRangeLabel"
            },
            {
                "description": "This attribute allows you to display a value at the center of a data plot.",
                "range": "",
                "type": "Number",
                "name": "value"
            },
            {
                "description": "Allows you to display any numeric value or string at the center of the dataplot. The settings of this attribute overwrites the settings of the ` value` attribute when both are used at the same time.",
                "range": "",
                "type": "Number/String",
                "name": "displayValue"
            },
            {
                "description": "This attribute allows you to display a label on the top-left corner of a data plot.",
                "range": "",
                "type": "Number/String",
                "name": "tlLabel"
            },
            {
                "description": "This attribute allows you to display a label on the top-right corner of a data plot.",
                "range": "",
                "type": "Number/String",
                "name": "trLabel"
            },
            {
                "description": "This attribute allows you to display a label on the bottom-left corner of a data plot.",
                "range": "",
                "type": "Number/String",
                "name": "blLabel"
            },
            {
                "description": "This attribute allows you to display a label on the bottom-left corner of a data plot.",
                "range": "",
                "type": "Number/String",
                "name": "brLabel"
            },
            {
                "description": "In Heat map chart, if you wish to highlight a particular cell, you can specify it's color at &quot;set&quot; level using this attribute. ",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "You can define links for individual data items. That enables the end user to click on data items (columns, lines, bars etc.) and drill down to other pages. To define the link for data items, use the link attribute. You can define links that open in same window, new window, pop-up window or frames. Please see &quot;Drill Down Charts &gt; FusionCharts Link format&quot; for more information. Also, you need to Url Encode all the special characters (like ? and &) present in the link.",
                "range": "",
                "type": "String",
                "name": "link"
            },
            {
                "description": "By default, the tooltip text for a data item in the heat map chart includes the values of the `trLabel`, `tlLabel`, `brlabel`, `bllabel`, `trType`, `tlType`, `brType`, and and `blType` attributes. Additionally, you can display more customized information using the `toolText` attribute.",
                "range": "",
                "type": "String",
                "name": "toolText"
            },
            {
                "description": "You can individually opt to show or hide values of individual data items using this attribute. This value over-rides the data-set level value.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showValue"
            },
            {
                "description": "For Multi-series charts, you can define the alpha of data-sets at dataset level. However, if you wish to highlight a particular data element, you can specify its alpha at &quot;set&quot; level using this attribute.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            }
        ],
        "description": "The `dataset` object contains a series of data defined through the `data` object. There are no attributes for the `dataset` object. The attributes used for the `data` object are mentioned below: "
    },
    {
        "table": "The colorRange Object",
        "path": "colorRange",
        "attrs": [
            {
                "description": "Hex code of the color range using which it will be filled.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "code"
            },
            {
                "description": "Specifies the label for the upper limit of the gradient scale.",
                "range": "",
                "type": "String",
                "name": "endLabel"
            },
            {
                "description": "Allows you to display gradient legend.",
                "range": "0/1",
                "type": "Boolean",
                "name": "gradient"
            },
            {
                "description": "Allows you to display the data values in percentage.",
                "range": "0/1",
                "type": "Boolean",
                "name": "mapByPercent"
            },
            {
                "description": "Sets the minimum value or the lower limit of the numeric range and the gradient scale.",
                "range": "",
                "type": "Number",
                "name": "minValue"
            },
            {
                "description": "Specifies the label for the lower limit of the gradient scale.",
                "range": "",
                "type": "String",
                "name": "startLabel"
            }
        ],
        "description": "Attributes of the `colorRange` object for the heat map chart are used to define the type of legend, the lower limit of the scale, and the start and end labels. Note that the `colorRange` object is not used to collectively configure all ranges; the `color` object (child of the `colorRange` object) is used to do that."
    },
    {
        "table": "The color Object",
        "path": "color",
        "attrs": [
            {
                "description": "Sets the transparency of each range in the color range.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Hex code of the color range using which it will be filled.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "code"
            },
            {
                "description": "This attribute determines the label for each numeric range. The label appears either on the gradient scale or on icon legends depending on the legend type used. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Specifies the upper limits of each numeric range. This attribute is mandatory in each `color` object for both gradient and icon legend.",
                "range": "",
                "type": "Number",
                "name": "maxValue"
            },
            {
                "description": "Specifies the lower limits of each numeric range. This attribute is mandatory in each `color` object when icon legend is used.",
                "range": "",
                "type": "Number",
                "name": "minValue"
            }
        ],
        "description": "The attributes of the `color` object, child of the `colorRange` object, are used to configure individual ranges on the gauge scale."
    }
]