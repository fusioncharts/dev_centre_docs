[
    {
        "table": "Functional Attributes",
        "attrs": [
            {
                "description": "This attribute lets you set the configuration whether the chart should appear in an animated fashion. If you do not want to animate any part of the chart, set this as 0.",
                "range": "0/1",
                "type": "Boolean",
                "name": "animation"
            },
            {
                "description": "This attribute sets the animation duration, if `animation` is set to `1`. \n\nDefault value: 1 sec",
                "range": "In seconds",
                "type": "Number",
	    		"Versionsince": "3.11.0",
                "name": "animationDuration"
            },
            {
                "description": "This attributes lets you control whether empty datasets in your data will be connected to each other OR will they appear as broken data sets?",
                "range": "0/1",
                "type": "Boolean",
                "name": "connectNullData"
            },
            {
                "description": "The entire chart can now act as a hotspot. Use this URL to define the hotspot link for the chart. The link can be specified in FusionCharts link format.",
                "range": "",
                "type": "URL in FusionCharts format",
                "name": "clickURL"
            },
            {
                "description": "Sets whether the `clickURL` attribute (that sets a link to which the user is directed when the chart is clicked) overrides the `link` attribute (that sets a link to which the user is directed when a data plot is clicked). \n\nDefault value: 0 (`clickURL` does not override `link`)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.7.0",
                "name": "clickURLOverridesPlotLinks"
            },
            {
                "description": "Each chart has 5 pre-defined color palettes which you can choose from. Each palette renders the chart in a different color theme. ",
                "range": "1-5",
                "type": "Number",
                "name": "palette"
            },
            {
                "description": "If you want your own palette derived from a particular hex color, you can specify the same here. All other colors on the chart will automatically derive from that palette.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "paletteThemeColor"
            },
            {
                "description": "The `palette` attribute allows to select a palette theme that applies to chart background, canvas, font and tool-tips, it does not change the colors of dataplots (i.e., column, line, area etc.). The `paletteThemeColor` attribute allows to specify your own palette derived from a particular hex color that is applied to chart background, canvas, font, tool-tips and also dataplots. Using `paletteColors` attribute, you can specify your custom list of hex colors for the dataplots only. The list of colors have to be separated by comma e.g., `&quot;paletteColors&quot;: &quot;#FF0000, #0372AB, #FF5904...&quot;`. The chart will cycle through the list of specified colors and then render the data plot accordingly. To use the same set of colors throughout all your charts in a web application, you can store the list of palette colors in your application globally and then provide the same in each chart JSON.",
                "range": "List of hex color codes separated by comma",
                "type": "String",
                "name": "paletteColors"
            },
            {
                "description": "If you've opted to show data values on the chart, this attribute lets you adjust the vertical alignment of data values with respect to dataplots. By default, this attribute is set to AUTO mode in which the alignment of each data value is determined automatically based on the position of each plot point. In ABOVE mode, data values are displayed above the plot points unless a plot point is too close to the upper edge of the canvas while in BELOW mode, data values are displayed below the plot points unless a plot point is too close to the lower edge of the canvas.",
                "range": "&quot;ABOVE&quot;, &quot;BELOW&quot;, &quot;AUTO&quot;",
                "type": "String",
                "versionsince": "3.2",
                "name": "valuePosition"
            },
            {
                "description": "Whether to show the real-time update related menu items (like Start/Stop Update or Clear Chart) in chart's context menu? Note: For JavaScript charts real-time update related menu items do not appear by default. You need to explicitly set `'showRTMenuItem': '1'` in the `chart` object. The menu appears as a button on the bottom-left corner of the JavaScript chart. You can then use the button to Start/Stop Update or Clear chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showRTMenuItem"
            },
            {
                "description": "Whether to show &quot;Print Chart&quot; item in the context menu of the chart? Even if you opt to hide the item in context menu, you can still opt to invoke `print()` JavaScript method of the chart to print the same.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPrintMenuItem"
            },
            {
                "description": "By default, the real-time charts wait for a few seconds after rendering for the first time and before updating itself with new data. To allow the chart to start updating itself as soon as it is rendered, set this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "refreshInstantly"
            },
            {
                "description": "Setting this attribute to 1, you can allow the chart to automatically resize itself when the parent container of the chart is resized.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "manageResize"
            },
            {
                "description": "When enabled in AUTO mode, long data labels are truncated by adding ellipses to prevent them from overflowing the chart background. The default value is 1.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "useEllipsesWhenOverflow"
            },
            {
                "description": "This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. ",
                "range": "",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "hasRTLText"
            },
            {
                "description": "This attribute lets you enable/disable the highlight effect, in the form of a `fadeout`, for the data plots corresponding to a legend item. When this attribute is enabled and the mouse pointer is hovered over a legend item label, plots belonging to the other data series fadeout, by reducing their opacity.\n\n The fadeout effect can be customized by specifying the fadeout color and opacity using the `color` and `alpha` attributes. Eg. `fadeout|color=#ff0000, alpha=60`",
                "range": "",
                "type": "String",
                "name": "plotHighlightEffect"
            },
            {
                "description": "This attribute changes the theme of the chart. There are 4 types of themes which have been made according to the different color combinations.",
                "range": "‘carbon’, ‘fusion’, ‘ocean’, ‘zune’",
                "type": "String",
                "name": "theme"
            },
            {
                "description": "Determines how the data index will be assigned to data plots in real-time charts. For `“variableIndex”: “1”`, a variable index is assigned to each of the chart container slots, and is updated every time a new data plot comes into the container. Therefore, a data plot retains the index assigned to it at the time of creation throughout its lifetime. When `“variableIndex”: “0”`, a fixed index is assigned to each of the chart container slots. Therefore, the index of a data plot changes every time the data plot changes its position. \n\nDefault value for this attribute is __1__.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.9.0",
                "name": "variableIndex"
            }
        ],
        "description": "These attributes let you control a variety of functional elements on the chart. For example, you can opt to show/hide data labels, data values. You can also set chart limits and extended properties."
    },
    {
        "table": "Chart Message-related Attributes",
        "attrs": [
        	{
                "description": "This attribute allows to set a custom font for all chart messages.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFont"
            },
            {
                "description": "This attribute allows to set a custom font size for all chart messages.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFontSize"
            },
            {
                "description": "This attribute allows to set a custom font color for all chart messages.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "baseChartMessageColor"
            },
            {
                "description": "This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageHAlign"
            },
            {
                "description": "This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageVAlign"
            },
            {
                "description": "This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageAlpha"
            },
            {
                "description": "This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when a chart begins to load.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "loadMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when a chart begins to load.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "loadMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when a chart begins to load.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "loadMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when the specified chart type is not supported.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when the specified chart type is not supported.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when the specified chart type is not supported.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed when chart data begins loading.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when chart data begins loading.",
                "range": "In pixels",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when chart data begins loading.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the specified chart data is invalid.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the specified chart data is invalid.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the specified chart data is invalid.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageScale"
            }
        ],
        "description": "These attributes let you set and configure custom chart messages, using text as well as images."
    },
    {
        "table": "Chart Titles and Axis Names",
        "attrs": [
            {
                "description": "Caption of the chart.",
                "range": "",
                "type": "String",
                "name": "caption"
            },
            {
                "description": "Sub-caption of the chart.",
                "range": "",
                "type": "String",
                "name": "subCaption"
            },
            {
                "description": "X-axis title of the chart.",
                "range": "",
                "type": "String",
                "name": "xAxisName"
            },
            {
                "description": "Y-axis title of the chart.",
                "range": "",
                "type": "String",
                "name": "yAxisName"
            }
        ],
        "description": "Using these attributes, you can set the various headings and titles of chart like caption, sub-caption, x-axis and y-axis names etc. "
    },
    {
        "table": "Chart Caption Cosmetics",
        "attrs": [
            {
                "description": "Sets horizontal alignment of caption",
                "range": "\"left\", \"center\", \"right\"",
                "type": "String",
                "name": "captionAlignment"
            },
            {
                "description": "Whether caption should be on top of the data plot area",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionOnTop"
            },
            {
                "description": "Sets the caption font size in pixels",
                "range": "6 - 72",
                "type": "Number",
                "name": "captionFontSize"
            },
            {
                "description": "Sets the sub-caption font size (in pixels)",
                "range": "6 - 72",
                "type": "Number",
                "name": "subCaptionFontSize"
            },
            {
                "description": "Sets the caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "captionFont"
            },
            {
                "description": "Sets the sub-caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "subCaptionFont"
            },
            {
                "description": "Sets the caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "captionFontColor"
            },
            {
                "description": "Sets the sub-caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "subCaptionFontColor"
            },
            {
                "description": "Whether the caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionFontBold"
            },
            {
                "description": "Whether the sub caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "subCaptionFontBold"
            },
            {
                "description": "Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area",
                "range": "0/1",
                "type": "Boolean",
                "name": "alignCaptionWithCanvas"
            },
            {
                "description": "If caption is not centre aligned, lets you configure the padding (in pixels) from either edge.\nWill be ignored if caption is centre aligned.",
                "range": "In Pixels",
                "type": "Number",
                "name": "captionHorizontalPadding"
            }
        ],
        "description": "These attributes let you configure the cosmetics of chart caption and sub-caption."
    },
        {
        "table": "Chart Axis Configuration Attributes",
        "attrs": [
            {
                "description": "If you hide a dataset using legend icon, this attribute (when set to `1`) will compute the axes limit with respect to maximum and minimum value of the visible dataset(s). \n\nDefault value: 0",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.11.0",
                "name": "transposeAxis"
            },
            {
                "description": "This attribute if set to _0_, hides the x-axis of the chart. \n\n__Default value__: 1",
                "range": "0/1",
                "type": "Boolean",
                "name": "showXAxisLine"
            },
            {
                "description": "Sets color of the x-axis of the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "xAxisLineColor"
            },
            {
                "description": "Sets the thickness of the x-axis line of the chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "xaxislinethickness"
            },
            {
                "description": "The y-axis of the charts is divided into vertical sections using div (divisional) lines. Each div line assumes a value based on its position. Using this attribute you can set whether to show those div line (y-axis) values or not. The values of `showLimits` and `showDivLineValues`, if specified explicitly, overrides the value of this attribute.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showYAxisValues"
            },
            {
                "description": "If you do not wish to rotate y-axis name, set this as 0. It specifically comes to use when you've the special characters (UTF-8) in your y-axis name that do not show up in rotated mode.",
                "range": "0/1",
                "type": "Boolean",
                "name": "rotateYAxisName"
            },
            {
                "description": "By default, all div lines show their values. However, you can opt to display every x(th) div line value using this attribute.",
                "range": "",
                "type": "Number",
                "name": "yAxisValuesStep"
            },
            {
                "description": "If you opt to not rotate y-axis name, you can choose a maximum width that will be applied to y-axis name.",
                "range": "In pixels",
                "type": "Number",
                "name": "yAxisNameWidth"
            },
            {
                "description": "This attribute lets you set whether the y-axis lower limit will be 0 (in case of all positive values on chart) or should the y-axis lower limit adapt itself to a different figure based on values provided to the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "setAdaptiveYMin"
            },
            {
                "description": "This attribute helps you explicitly set the lower limit of the chart. If you don't specify this value, it is automatically calculated by the chart based on the data provided by you.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "yAxisMinValue"
            },
            {
                "description": "This attribute helps you explicitly set the upper limit of the chart. If you don't specify this value, it is automatically calculated by the chart based on the data provided by you.",
                "range": "Numeric Value",
                "type": "Number",
                "name": "yAxisMaxValue"
            },
            {
                "description": "Whether to show chart limit values. If not specified `showYAxisValues` attribute overrides this value.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLimits"
            },
            {
                "description": "Whether to show div line values. If not specified `showYAxisValues` attribute overrides this value.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showDivLineValues"
            },
            {
                "description": "Decimal places for y-axis values.",
                "range": "",
                "type": "Number",
                "name": "yAxisValueDecimals"
            },
            {
                "description": "Whether to force decimal places for y-axis values.",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceYAxisValueDecimals"
            }
        ],
        "description": "Using these attributes, you can set and configure x-axis labels, y-axis values and set chart cosmetics for the axis like color, alpha, etc."
    },
    {
        "table": "x-Axis Name Cosmetics",
        "attrs": [
            {
                "description": "Sets the x-axis font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "xAxisNameFontColor"
            },
            {
                "description": "Specifies the x-axis font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "xAxisNameFontSize"
            },
            {
                "description": "Whether x-axis font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "xAxisNameFontBold"
            },
            {
                "description": "Whether x-axis font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "xAxisNameFontItalic"
            },
            {
                "description": "Sets the background color for x-axis text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "xAxisNameBgColor"
            },
            {
                "description": "Sets the border around the x-axis text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "xAxisNameBorderColor"
            },
            {
                "description": "Sets the x-axis alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "name": "xAxisNameAlpha"
            },
            {
                "description": "Sets the x-axis font alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "xAxisNameFontAlpha"
            },
            {
                "description": "Sets the x-axis background alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "xAxisNameBgAlpha"
            },
            {
                "description": "Sets the x-axis border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "xAxisNameBorderAlpha"
            },
            {
                "description": "Sets the x-axis border padding",
                "range": "In Pixels",
                "type": "Number",
                "name": "xAxisNameBorderPadding"
            },
            {
                "description": "Sets the x-axis border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "xAxisNameBorderRadius"
            },
            {
                "description": "Sets the x-axis border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "xAxisNameBorderThickness"
            },
            {
                "description": "Whether the border around the x-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "xAxisNameBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the x-axis name is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "xAxisNameBorderDashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when the border around the x-axis name is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "xAxisNameBorderDashGap"
            }
        ],
        "description": "To configure the font cosmetics of x-axis name (title), you can use the following attributes."
    },
    {
        "table": "y-Axis Name Cosmetics",
        "attrs": [
            {
                "description": "Sets the y-axis (primary / secondary) font family for the text",
                "range": "Font Name",
                "type": "String",
                "name": "yAxisNameFont"
            },
            {
                "description": "Sets the y-axis (primary / secondary) font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "yAxisNameFontColor"
            },
            {
                "description": "Specifies the y-axis (primary / secondary) font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "yAxisNameFontSize"
            },
            {
                "description": "Whether y-axis (primary / secondary) font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "yAxisNameFontBold"
            },
            {
                "description": "Whether y-axis (primary / secondary) font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "yAxisNameFontItalic"
            },
            {
                "description": "Sets the background color for y-axis (primary / secondary) text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "yAxisNameBgColor"
            },
            {
                "description": "Sets the border around the y-axis (primary / secondary) text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "yAxisNameBorderColor"
            },
            {
                "description": "Sets the y-axis (primary / secondary) alpha including font and background",
                "range": "0 - 100",
                "type": "Number",
                "name": "yAxisNameAlpha"
            },
            {
                "description": "Sets the y-axis (primary / secondary) font alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "yAxisNameFontAlpha"
            },
            {
                "description": "Sets the y-axis (primary / secondary) background alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "yAxisNameBgAlpha"
            },
            {
                "description": "Sets the y-axis (primary / secondary) border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "yAxisNameBorderAlpha"
            },
            {
                "description": "Sets the y-axis (primary / secondary) border padding",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisNameBorderPadding"
            },
            {
                "description": "Sets the y-axis (primary / secondary) border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisNameBorderRadius"
            },
            {
                "description": "Sets the y-axis (primary / secondary) border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "yAxisNameBorderThickness"
            },
            {
                "description": "Whether the border around the y-axis name should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "yAxisNameBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the y-axis name is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "yAxisNameBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the y-axis name is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "yAxisNameBorderDashGap"
            }
        ],
        "description": "To configure the font cosmetics of y-axis name (title), you can use the following attributes."
    },
    {
        "table": "Chart Labels & Values",
        "attrs": [
            {
                "description": "It sets the configuration whether the x-axis labels will be displayed or not.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLabels"
            },
            {
                "description": "This attribute can be used to set the maximum height for the x-axis labels (data labels) excluding the x-axis title. If any label goes beyond this height, the label will be truncated. In stagger mode, the number of stagger lines will be reduced if they exceed this value.",
                "range": "In Pixels",
                "versionsince": "3.5.0",
                "type": "Number",
                "name": "maxLabelHeight"
            },
            {
                "description": "Using this attribute, you can control how your data labels (x-axis labels) will appear on the chart. There are 4 options: WRAP, STAGGER, ROTATE or NONE. WRAP wraps the label text if it's longer than the allotted area. ROTATE rotates the label in vertical or slanted position. STAGGER divides the labels into multiple lines.",
                "range": "'AUTO', 'WRAP', 'STAGGER', 'ROTATE', 'NONE'",
                "type": "String",
                "name": "labelDisplay"
            },
            {
                "description": "If you've opted to show rotated labels on chart, this attribute lets you set the configuration whether the labels will show as slanted labels or fully vertical ones.",
                "range": "0/1",
                "type": "Boolean",
                "name": "slantLabels"
            },
            {
                "description": "By default, all the labels are displayed on the chart. However, if you've a set of streaming data (like name of months or days of week), you can opt to show every n-th label for better clarity. This attributes just lets you do so. It allows you to display every n(th) X-axis label.",
                "range": "",
                "type": "Number",
                "name": "labelStep"
            },
            {
                "description": "If you've opted for STAGGER mode as `labelDisplay`, using this attribute you can control how many lines to stagger the label to. By default, all labels are displayed in a single line.",
                "range": "",
                "type": "Number",
                "name": "staggerLines"
            },
            {
                "description": "Sets the configuration whether data values will be displayed along with the data plot on chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showValues"
            },
            {
                "description": "If you've opted to show data values, you can rotate them using this attribute.",
                "range": "0/1",
                "type": "Boolean",
                "name": "rotateValues"
            },
            {
                "description": "Sets the background color for value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBgColor"
            },
            {
                "description": "Sets the border color around the value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBorderColor"
            },
            {
                "description": "Sets the value border alpha",
                "range": "0 - 100",
                "type": "Number",
                "name": "valueBorderAlpha"
            },
            {
                "description": "Sets the value border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderThickness"
            },
            {
                "description": "Sets the padding between the value and its surrounding border",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderPadding"
            }
        ],
        "description": "Data labels refer to the names for the data points which appear on the x-axis and data values refer to the plot values i.e., values of each data plot. "
    },
    {
        "table": "Real-time properties",
        "attrs": [
            {
                "description": "This parameter sets the path of the page which is supposed to relay real-time data to the chart. If you've special characters as a part of your data stream URL, like ? or &, you'll need to URL Encode the entire `dataStreamURL` This page needs to be on the same sub-domain on which the chart is hosted and invoked from.",
                "range": "",
                "type": "URL",
                "name": "dataStreamURL"
            },
            {
                "description": "For this parameter, you can specify the number of seconds after which the chart will look for new data. This process will happen continuously - i.e., if you specify 5 seconds here, the chart will look for new data every 5 seconds.",
                "range": "In seconds",
                "type": "Number",
                "name": "refreshInterval"
            },
            {
                "description": "The time after which the chart will keep clearing its contents.",
                "range": "In seconds",
                "type": "Number",
                "name": "clearChartInterval"
            },
            {
                "description": "If you want the chart to keep polling for new data every x seconds and queue it, you can specify that x seconds as `updateInterval`. This helps you poll at different intervals and then draw at another interval (specified as `refreshInterval`).",
                "range": "In seconds",
                "type": "Number",
                "name": "updateInterval"
            },
            {
                "description": "This value helps you specify the number of data items that you want as history on the chart. For example, when you set it as 50, only 50 data items (per dataset) will be displayed on the chart. As soon as the 51st data comes in, the first data will be deleted and the rest of the data will be shifted by 1 position left - the new data will come and take the last position.",
                "range": "In seconds",
                "type": "Number",
                "name": "numDisplaySets"
            },
            {
                "description": "Constantly changing data stamp that can be added to real time Data URL, so as to maintain a state. Please see the section Real time capabilities &gt; Adding data stamp",
                "range": "",
                "type": "String",
                "name": "dataStamp"
            },
            {
                "description": "This parameter lets you set whether you want the latest value (received from server) to be displayed on the chart or not.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showRealTimeValue"
            },
            {
                "description": "If you are showing real time values for multiple datasets on the chart, this attribute lets you define the separator character to separate each value's display.",
                "range": "",
                "type": "String",
                "name": "realTimeValueSep"
            }
        ],
        "description": "Using these attributes, you can configure the data streaming feature. "
    },
    {
        "table": "Number Formatting Properties",
        "attrs": [
            {
                "description": "This configuration determines whether the numbers displayed on the chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumber"
            },
            {
                "description": "Using this attribute, you could add prefix to all the numbers visible on the graph. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.",
                "range": "",
                "type": "String",
                "name": "numberPrefix"
            },
            {
                "description": "Using this attribute, you could add suffix to all the numbers visible on the graph. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.",
                "range": "",
                "type": "String",
                "name": "numberSuffix"
            },
            {
                "description": "Number of decimal places to which all numbers on the chart will be rounded to.",
                "range": "",
                "type": "Number",
                "name": "decimals"
            },
            {
                "description": "Whether to add 0 padding at the end of decimal numbers? For example, if you set decimals as 2 and a number is 23.4. If `forceDecimals` is set to 1, the number will automatically be converted to 23.40 (note the extra 0 at the end).",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceDecimals"
            },
            {
                "description": "Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - e.g., if formatNumberScale is set to 1, 1043 will become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumberScale"
            },
            {
                "description": "The default unit of the numbers that you're providing to the chart.",
                "range": "",
                "type": "String",
                "name": "defaultNumberScale"
            },
            {
                "description": "Unit of each block of the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleUnit"
            },
            {
                "description": "Range of the various blocks that constitute the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleValue"
            },
            {
                "description": "If a data value is less than the lowest given number is the number scale, this attribute forces the lower value of the  `numberScaleUnit` to be applied to that data value.  This attribute works only when `“formatNumberScale”: “1”` and the `defaultNumberScale` attribute is not defined. \n\nFor example, if `“numberScaleUnit”: “K, M”`, `“numberScaleValue”: “1000, 1000”`, and `“forceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.9.0",
                "name": "forceNumberScale"
            },
            {
                "description": "Whether recursive scaling should be applied.",
                "range": "0/1",
                "type": "Boolean",
                "name": "scaleRecursively"
            },
            {
                "description": "How many recursions to complete during recursive scaling? -1 completes the entire set of recursion.",
                "range": "",
                "type": "Number",
                "name": "maxScaleRecursion"
            },
            {
                "description": "What character to use to separate the scales that are generated after recursion?",
                "range": "",
                "type": "String",
                "name": "scaleSeparator"
            },
            {
                "description": "This attribute helps you specify the character to be used as the decimal separator in a number.",
                "range": "",
                "type": "String",
                "name": "decimalSeparator"
            },
            {
                "description": "This attribute helps you specify the character to be used as the thousands separator in a number.",
                "range": "",
                "type": "String",
                "name": "thousandSeparator"
            },
            {
                "description": "This option helps you specify the position of the thousand separator.",
                "range": "",
                "type": "Number",
                "versionsince": "3.2 - SR1",
                "name": "thousandSeparatorPosition"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, the chart accepts the input decimal and thousand separators from user, so that it can convert it accordingly into the required format. This attribute lets you input the decimal separators.",
                "range": "",
                "type": "String",
                "name": "inDecimalSeparator"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML, if you specify such values, it will give an error while converting to number. So, the chart accepts the input decimal and thousand separators from user, so that it can convert it accordingly into the required format. This attribute lets you input the thousand separators.",
                "range": "",
                "type": "String",
                "name": "inThousandSeparator"
            }
        ],
        "description": "Using the attributes below, you can control a myriad of options like: Formatting of commas and decimals Number prefixes and suffixes Decimal places to which the numbers will round to Scaling of numbers based on a user defined scale Custom number input formats "
    },
    {
        "table": "Message Logger",
        "attrs": [
            {
                "description": "Whether to use message logger for the chart?",
                "range": "0/1",
                "type": "Boolean",
                "name": "useMessageLog"
            },
            {
                "description": "This attribute lets you set the width percent of the message logger window w.r.t entire chart width. So, if you set it as 80, the message logger window will take up 80% of chart width.",
                "range": "In percent",
                "type": "Number",
                "name": "messageLogWPercent"
            },
            {
                "description": "This attribute lets you set the height percent of the message logger window w.r.t entire chart height.",
                "range": "In percent",
                "type": "Number",
                "name": "messageLogHPercent"
            },
            {
                "description": "Whether to show the title for message logger?",
                "range": "0/1",
                "type": "Boolean",
                "name": "messageLogShowTitle"
            },
            {
                "description": "If you've opted to show the title for message logger, you can define your custom title here. Examples are &quot;Error log&quot;, &quot;Server History&quot; etc. The title displays at the top left corner of chart.",
                "range": "",
                "type": "String",
                "name": "messageLogTitle"
            },
            {
                "description": "You can customize the color of the entire message log window by setting a hex value for this attribute.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "messageLogColor"
            },
            {
                "description": "The messages streamed to the chart can either be displayed in the message log window or can be passed to JavaScript. This attribute lets you control whether the messages should be logged in the in-built log window.",
                "range": "0/1",
                "type": "Boolean",
                "name": "messageGoesToLog"
            },
            {
                "description": "This attribute lets you configure whether each message streamed from the server should be passed to a local JavaScript function.",
                "range": "0/1",
                "type": "Boolean",
                "name": "messageGoesToJS"
            },
            {
                "description": "If you've opted to pass each message to JavaScript function, this attribute lets you define the name of the function. This helps you create your custom functions to react to messages streamed from server.",
                "range": "",
                "type": "String",
                "name": "messageJSHandler"
            },
            {
                "description": "Whether to pass all message envelope parameters to the custom JavaScript function.",
                "range": "0/1",
                "type": "Boolean",
                "name": "messagePassAllToJS"
            }
        ],
        "description": "FusionWidgets XT uses a new concept of streaming and showing real-time messages in the chart using Message Logger. The Message logger can be effectively used to show necessary real-time information or live error logs. "
    },
    {
        "table": "Plot (Area) properties",
        "attrs": [
            {
                "description": "Whether to apply the shadow effects for data plot?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showShadow"
            },
            {
                "description": "Whether the area border will show up.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPlotBorder"
            },
            {
                "description": "Color for border",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotBorderColor"
            },
            {
                "description": "Border thickness.",
                "range": "In pixels",
                "type": "Number",
                "name": "plotBorderThickness"
            },
            {
                "description": "Border alpha.",
                "range": "0 - 100",
                "type": "Number",
                "name": "plotBorderAlpha"
            },
            {
                "description": "Whether the border around the data plots should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "plotBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the data plots are rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "plotBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the data plots are rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "plotBorderDashGap"
            },
            {
                "description": "Area fill color.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotFillColor"
            },
            {
                "description": "Area fill alpha.",
                "range": "0 - 100",
                "type": "Number",
                "name": "plotFillAlpha"
            },
            {
                "description": "You can globally add a gradient color to the entire plot of chart by specifying the second color as this attribute. For example, if you've specified individual colors for your plot and now you want a gradient that ends in white. So, specify `FFFFFF` (white) as this color and the chart will now draw plots as gradient.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotGradientColor"
            },
            {
                "description": "If you've opted to fill the plot as gradient, this attribute lets you set the fill angle for gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "plotFillAngle"
            },
            {
                "description": "Gradient color is a color added globally to the entire plot of chart by specifying the second color in an attribute. This attribute sets the gradient color to _true_. \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "usePlotGradientColor"
            }
        ],
        "description": "These attributes let you configure how your plot (area) will appear on the chart. "
    },
    {
        "table": "Anchor properties",
        "attrs": [
            {
                "description": "Whether to draw anchors on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "drawAnchors"
            },
            {
                "description": "This attribute sets the number of sides the anchor will have. For e.g., an anchor with 3 sides will represent a triangle, with 4 it will be a square and so on.",
                "range": "",
                "type": "Number",
                "name": "anchorSides"
            },
            {
                "description": "This attribute sets the starting angle of anchors.  \n\nDefault value: 90",
                "range": "0 - 360",
                "type": "Number",
                "name": "anchorStartAngle"
            },
            {
                "description": "This attribute sets the radius (in pixels) of the anchor.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorRadius"
            },
            {
                "description": "Lets you set the border color of anchors.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorBorderColor"
            },
            {
                "description": "Helps you set border thickness of anchors.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorBorderThickness"
            },
            {
                "description": "Helps you set the background color of anchors.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorBgColor"
            },
            {
                "description": "Helps you set the alpha of entire anchors. If you need to hide the anchors on chart but still enable tooltips, set this as 0.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorAlpha"
            },
            {
                "description": "Helps you set the alpha of anchor background.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBgAlpha"
            },
            {
                "description": "If you want to use an external image (JPG/PNG) as an anchor,  this attribute lets you specify the URL. \n\n__Note__: Due to cross domain security restrictions it is advised to use an image from the same domain name as your charts.",
                "range": "URL",
                "type": "FusionCharts link format",
                "name": "anchorImageUrl"
            },
            {
                "description": "This attribute allows to set a transparency for images displayed as anchors in charts. \n\n__Default value__: 100",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorImageAlpha"
            },
            {
                "description": "This attribute allows to set a scale for magnifying images displayed as anchors. \n\n __Default value__: 100",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorImageScale"
            },
            {
                "description": "This attribute sets the padding between the anchor image and the border of the anchor. For the anchor image, instead of decreasing the size of the image this attribute crops the image.  \n\nDefault value: 1",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.10.0",
                "name": "anchorImagePadding"
            }
        ],
        "description": "On line/area charts, anchors (or marker points) are polygons which appear at the joint of two consecutive line/area points. These are indicators to show the position of data points. The anchors handle tooltips and links for the data points. So, if you opt to not render anchors on a chart, the tooltips and links won't function. You can, however, hide them by setting alpha to 0 and still enable tooltips and links. You can customize all the facets of anchors using the properties below. "
    },
    {
        "table": "Chart Cosmetics",
        "attrs": [
            {
                "description": "This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `#FF5904, #FFFFFF`.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Sets the alpha (transparency) for the background. If you've opted for gradient background, you need to set a list of alpha(s) separated by comma.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "If you've opted for a gradient background, this attribute lets you set the ratio of each color constituent.",
                "range": "",
                "type": "Numbers separated by comma",
                "name": "bgRatio"
            },
            {
                "description": "Angle of the background color, in case of a gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "bgAngle"
            },
            {
                "description": "Whether to show a border around the chart or not?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showBorder"
            },
            {
                "description": "Border color of the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "borderColor"
            },
            {
                "description": "Border thickness of the chart.",
                "range": "In pixels",
                "type": "Number",
                "name": "borderThickness"
            },
            {
                "description": "Border alpha of the chart.",
                "range": "0 - 100",
                "type": "Number",
                "name": "borderAlpha"
            },
            {
                "description": "When set to `0`, instead of drawing a border for the entire chart canvas, this attribute will draw line on the canvas only to connect the data-points. \n\nDefault Value: __1__",
                "range": "0/1",
                "type": "Boolean",
                "name": "drawFullAreaBorder"
            },
            {
                "description": "To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.",
                "range": "",
                "type": "String",
                "name": "bgImage"
            },
            {
                "description": "This attribute specifies the opacity for the loaded background image.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgImageAlpha"
            },
            {
                "description": "Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.",
                "range": "'stretch', 'tile', 'fit', 'fill', 'center', 'none'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageDisplayMode"
            },
            {
                "description": "Helps you to vertically align the background image.",
                "range": "'top', 'middle', 'bottom'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageVAlign"
            },
            {
                "description": "Helps you to horizontally align the background image.",
                "range": "'left', 'middle', 'right'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageHAlign"
            },
            {
                "description": "Helps you magnify the background image. This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.2",
                "name": "bgImageScale"
            },
            {
                "description": "You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.",
                "range": "",
                "type": "String",
                "name": "logoURL"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on the left side of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoLeftMargin"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on top of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoTopMargin"
            },
            {
                "description": "Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen",
                "range": "'TL', 'TR', 'BL', \n'BR', 'CC'",
                "type": "String",
                "name": "logoPosition"
            },
            {
                "description": "Once the logo has loaded on the chart, you can configure its opacity using this attribute.",
                "range": "0 - 100",
                "type": "Number",
                "name": "logoAlpha"
            },
            {
                "description": "You can also change the size of externally loaded logo at run-time by specifying a value for this parameter.",
                "range": "0 - 100",
                "type": "Number",
                "name": "logoScale"
            },
            {
                "description": "If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts link format, allowing you to link to new windows, pop-ups, frames etc.",
                "range": "",
                "type": "String",
                "name": "logoLink"
            }
        ],
        "description": "The following attributes let you configure chart cosmetics like background color, background alpha, canvas color & alpha etc. "
    },
    {
        "table": "Canvas Cosmetics",
        "attrs": [
            {
                "description": "This attribute sets the background color for the chart canvas. You can set any hex color code as the value of this attribute. To specify a gradient as canvas background color, separate the hex color codes of each color in the gradient using comma. Example: #FF5904, #FFFFFF.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "canvasBgColor"
            },
            {
                "description": "This attribute sets the background transparency for the chart canvas. For gradient, separate the alpha value using comma. Example: 15, 50.",
                "range": "0 - 100",
                "type": "Number",
                "name": "canvasBgAlpha"
            },
            {
                "description": "When a gradient is used to set the color of the canvas background, this attribute sets the ratio of the colors. Example : If the value of the `canvasBgColor` attribute is set as `#FF5904, #FFFFFF`, `canvasBgRatio` can be used to specify their ratio in the background.",
                "range": "0 - 100",
                "type": "Numbers separated by comma",
                "name": "canvasBgRatio"
            },
            {
                "description": "Helps you specify canvas background angle in case of gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "canvasBgAngle"
            },
            {
                "description": "Lets you specify canvas border color.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "canvasBorderColor"
            },
            {
                "description": "Lets you specify canvas border thickness.",
                "range": "In pixels",
                "type": "Number",
                "name": "canvasBorderThickness"
            },
            {
                "description": "Lets you control transparency of canvas border.",
                "range": "0 - 100",
                "type": "Number",
                "name": "canvasBorderAlpha"
            }
        ],
        "description": "Canvas refers to the area in which the chart is plotted. The following attributes can be used to customize the canvas: "
    },
    {
        "table": "Divisional Lines/Grids",
        "attrs": [
            {
                "description": "Number of horizontal axis division lines that you want on the chart.",
                "range": "",
                "type": "Number",
                "name": "numDivLines"
            },
            {
                "description": "Color for divisional lines",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "divLineColor"
            },
            {
                "description": "Thickness of divisional lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "divLineThickness"
            },
            {
                "description": "Alpha of divisional lines.",
                "range": "0 - 100",
                "type": "Number",
                "name": "divLineAlpha"
            },
            {
                "description": "Whether the divisional lines should be rendered as dashed lines. \n\n__Default value__: 0 (divisional lines rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "divLineDashed"
            },
            {
                "description": "Sets the length of each dash when divisional lines are rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "divLineDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when divisional lines are rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "divLineDashGap"
            },
            {
                "description": "Whether to show alternate colored horizontal grid bands?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showAlternateHGridColor"
            },
            {
                "description": "Color of the alternate horizontal grid bands.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "alternateHGridColor"
            },
            {
                "description": "Alpha (transparency) of the alternate horizontal grid bands.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alternateHGridAlpha"
            },
            {
                "description": "Number of vertical axis division lines.",
                "range": "Numeric value > 0",
                "type": "Number",
                "name": "numVDivLines"
            },
            {
                "description": "Color of vertical axis division lines.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "vDivLineColor"
            },
            {
                "description": "Thickness of vertical axis division lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "vDivLineThickness"
            },
            {
                "description": "Alpha of vertical axis division lines.",
                "range": "0 - 100",
                "type": "Number",
                "name": "vDivLineAlpha"
            },
            {
                "description": "Whether the vertical divisional lines should be rendered as dashed lines. \n\n__Default value__: 0 (vertical divisional lines using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "vDivLineDashed"
            },
            {
                "description": "Sets the width of each dash when vertical divisional lines are rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "vDivLineDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when vertical divisional lines are rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "vDivLineDashGap"
            },
            {
                "description": "Whether to show alternate vertical colored grid bands?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showAlternateVGridColor"
            },
            {
                "description": "Color of alternate vertical colored grid bands.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "alternateVGridColor"
            },
            {
                "description": "Alpha of alternate vertical colored grid bands.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alternateVGridAlpha"
            }
        ],
        "description": "Using this set of attributes, you can control the properties of divisional lines and alternate color bands. Divisional Lines are horizontal or vertical lines running through the canvas. Each divisional line signifies a smaller unit of the entire axis thus aiding the users in interpreting the chart. Alternate color bands are colored blocks between two successive divisional lines. "
    },
    {
        "table": "Zero Plane properties",
        "attrs": [
            {
                "description": "Color for the Zero Plane. Zero Plane is the line/plane that appears at position 0 on the y-axis, when negative data is being shown on the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "zeroPlaneColor"
            },
            {
                "description": "Thickness of zero plane.",
                "range": "In pixels",
                "type": "Number",
                "name": "zeroPlaneThickness"
            },
            {
                "description": "Alpha of zero plane.",
                "range": "0 - 100",
                "type": "Number",
                "name": "zeroPlaneAlpha"
            },
            {
                "description": "To display the value of the zero plane set this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "showZeroPlaneValue"
            }
        ],
        "description": "The zero plane is a plane that signifies the 0 position on the chart which separates the positive and negative numbers on a chart having both of them. If there are no negative numbers on the chart, you won't see a visible zero plane. You can customize the zero plane with the following properties: "
    },
    {
        "table": "Font Properties",
        "attrs": [
            {
                "description": "This attribute lets you set the font face (family) of all the text (data labels, values etc.) on chart. If you specify the `outCnvBaseFont` attribute also, then this attribute controls only the font face of text within the chart canvas bounds.",
                "range": "Font Name",
                "type": "String",
                "name": "baseFont"
            },
            {
                "description": "This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font size provided here.",
                "range": "",
                "type": "Number",
                "name": "baseFontSize"
            },
            {
                "description": "This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font color provided here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "baseFontColor"
            },
            {
                "description": "This attribute sets the base font family of the chart text which lies outside the canvas i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font name provided here.",
                "range": "Font Name",
                "type": "String",
                "name": "outCnvBaseFont"
            },
            {
                "description": "This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font size provided here.",
                "range": "",
                "type": "Number",
                "name": "outCnvBaseFontSize"
            },
            {
                "description": "This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie outside the canvas will be displayed using the font color provided here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "outCnvBaseFontColor"
            },
            {
                "description": "If real time value is to be displayed on the chart, this attribute lets you set the font face of the same.",
                "range": "Font Name",
                "type": "String",
                "name": "realTimeValueFont"
            },
            {
                "description": "If real time value is to be displayed on the chart, this attribute lets you set the font size of the same.",
                "range": "",
                "type": "Number",
                "name": "realTimeValueFontSize"
            },
            {
                "description": "If real time value is to be displayed on the chart, this attribute lets you set the font color of the same.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "realTimeValueFontColor"
            },
            {
                "description": "Sets whether the real time display value will be bold formatted. \n\nDefault value: 0 (not bold formatted)",
                "range": "0/1",
                "type": "Boolean",
                "name": "realTimeValueFontBold"
            }
        ],
        "description": "Using the attributes below, you can define the generic font properties for all the text on the chart. These attributes allow you a high level control over font properties. If you intend to specify font properties for individual chart elements (like Caption, sub-caption etc.), you'll need to use the Styles feature. Using Styles, you can also specify advanced font properties like Bold, Italics, HTML Mode etc. Using Styles you can also configure real-time values. "
    },
    {
        "table": "Legend Properties",
        "attrs": [
            {
                "description": "Whether to show legend for the chart (only multi-series and combination charts)?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLegend"
            },
            {
                "description": "Whether legend keys should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendItemFontBold"
            },
            {
                "description": "Sets legend item font",
                "range": "Font Name",
                "type": "String",
                "name": "legendItemFont"
            },
            {
                "description": "Sets legend item font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "legendItemFontSize"
            },
            {
                "description": "Sets legend item font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemFontColor"
            },
            {
                "description": "Sets legend item font color on hover",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemHoverFontColor"
            },
            {
                "description": "The legend can be plotted at two positions on the chart - below (BOTTOM) the chart and to the right (RIGHT) of the chart.",
                "range": "'RIGHT' or 'BOTTOM'",
                "type": "String",
                "name": "legendPosition"
            },
            {
                "description": "Sets the legend caption horizontal alignment .",
                "range": "\"left\", \"center\", \"right\"",
                "type": "String",
                "name": "legendCaptionAlignment"
            },
            {
                "description": "Whether legend caption should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendCaptionFontBold"
            },
            {
                "description": "Sets legend caption font",
                "range": "Font Name",
                "type": "String",
                "name": "legendCaptionFont"
            },
            {
                "description": "Sets legend caption font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "legendCaptionFontSize"
            },
            {
                "description": "Sets legend caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendCaptionFontColor"
            },
            {
                "description": "This attribute lets you interact with the legend in your chart. When you click a legend key, the dataplots associated with that series are eliminated from the chart. Re-clicking the key causes the dataplots to reappear.",
                "range": "0/1",
                "type": "Boolean",
                "name": "interactiveLegend"
            },
            {
                "description": "Sets the color that applies on both text font and icon when they are in a  disabled / hidden state",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemHiddenColor"
            },
            {
                "description": "You can add a caption for the entire legend by setting the same here.",
                "range": "",
                "type": "String",
                "name": "legendCaption"
            },
            {
                "description": "Border Color for the legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendBorderColor"
            },
            {
                "description": "Border thickness for the legend.",
                "range": "In pixels",
                "type": "Number",
                "name": "legendBorderThickness"
            },
            {
                "description": "Border alpha for the legend.",
                "range": "0 - 100",
                "type": "Number",
                "name": "legendBorderAlpha"
            },
            {
                "description": "Background color for the legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendBgColor"
            },
            {
                "description": "Background alpha for the legend.",
                "range": "0 - 100",
                "type": "Number",
                "name": "legendBgAlpha"
            },
            {
                "description": "Whether to show a shadow for legend?",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendShadow"
            },
            {
                "description": "The legend can be made drag-able by setting this attribute to 1. End viewers of the chart can drag the legend around on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendAllowDrag"
            },
            {
                "description": "If you've too many items on the legend, a scroll bar shows up on the same. This attribute lets you configure the background color of the scroll bar.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendScrollBgColor"
            },
            {
                "description": "You can reverse the ordering of datasets in the legend by setting this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "reverseLegend"
            },
            {
                "description": "Scaling of legend icon is possible starting FusionWidgets XT. This attribute lets you control the size of legend icon.",
                "range": "1-5",
                "type": "Number",
                "versionsince": "3.2",
                "name": "legendIconScale"
            },
            {
                "description": "If your chart contains multiple series, the legend is displayed as a grid comprising of multiple legend keys. With the help of this attribute you can specify the number of columns that are to be displayed in the legend.",
                "range": "positive integer",
                "type": "Number",
                "versionsince": "3.2",
                "name": "legendNumColumns"
            },
            {
                "description": "Whether to minimize legend item text wrapping.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "minimiseWrappingInLegend"
            },
            {
                "description": "Specifies whether drawing a custom legend icon will be enabled. All legend icon customization attributes will work only if this feature is enabled. \n\nDefault value: 0 (disabled)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "drawCustomLegendIcon"
            },
            {
                "description": "Sets the border color for the legend icon. \n\nDefault value: Data plot border color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "legendIconBorderColor"
            },
            {
                "description": "Sets the background color for the legend icon. \n\nDefault value: Data plot fill color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "legendIconBgColor"
            },
            {
                "description": "Sets the legend icon transparency. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconAlpha"
            },
            {
                "description": "Sets the legend icon background transparency. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconBgAlpha"
            },
            {
                "description": "Sets the number of sides for the legend icon. \n\nDefault value: 4",
                "range": "",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconSides"
            },
            {
                "description": "Sets the thickness of the legend icon border. \n\nDefault value: 1",
                "range": "1-5",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconBorderThickness"
            },
            {
                "description": "Sets the starting angle of for drawing the legend icon. \n\nDefault value: 45",
                "range": "",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconStartAngle"
            },
            {
                "description": "This attribute if set to `0`, the legend box will be center aligned with respect to the entire width of the chart only if the total width of the legend box is more than the canvas width. By default, the legend box is center aligned with respect to the canvas width and it remains the same if the width of the legend box is less than the canvas width.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.10.0",
                "name": "alignLegendWithCanvas"
            }
        ],
        "description": "In multi-series charts, the series name of each data-set shows up in the legend of the chart. If you do not need the legend, you can opt to hide the same. Also, the legend can be placed at the bottom of the chart or to the right of the chart. Using the attributes below, you can configure the functional and cosmetic properties of the legend. "
    },
    {
        "table": "Tooltip Attributes",
        "attrs": [
            {
                "description": "Whether to show tooltip on chart?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTip"
            },
            {
                "description": "This attribute lets you control whether series name will show up in tooltip or not.",
                "range": "0/1",
                "type": "Boolean",
                "name": "seriesNameInToolTip"
            },
            {
                "description": "Background color for tooltip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBgColor"
            },
            {
                "description": "Font color for the tool-tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipColor"
            },
            {
                "description": "Border color for tooltip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBorderColor"
            },
            {
            	"description": "Sets the border transparency for tool tip.",
                "range": "0 - 100",
                "type": "NUmber",
                "name": "tooltipBorderAlpha"	
            },
            {
                "description": "The character specified as the value of this attribute separates the name and value displayed in tooltip.",
                "range": "",
                "type": "String",
                "name": "toolTipSepChar"
            },
            {
                "description": "Whether to show shadow for tooltips.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTipShadow"
            },
            {
                "description": "Specify custom text for the tooltip \n\n You can either specify a constant string as the tooltip text or you can use variable values from the data level by prefixing a __$__ to the attribute name, for example, __$name__, __$value__.",
                "range": "",
                "type": "String",
                "name": "plottooltext"
            }
        ],
        "description": "These attributes let you control the tooltip. You can set the background color, border color, separator character and few other details. "
    },
    {
        "table": "Attributes for Exporting Charts",
        "attrs": [
            {
                "description": "Whether the chart will allow exporting to images, PDFs, SVG or XLS.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportEnabled"
            },
            {
                "description": "In case of server-side exporting, the action specifies whether the exported image will be sent back to client as download, or whether it'll be saved on the server. \n\n__Default value__: download",
                "range": "'save' or 'download'",
                "type": "String",
                "name": "exportAction"
            },
            {
                "description": "In case of server side exporting, this refers to the path of the server-side export handler (the ready-to-use scripts that we provide).",
                "range": "",
                "type": "String",
                "name": "exportHandler"
            },
            {
                "description": "Lets you configure what output formats to allow for export of chart, in the export context menu, and also customize the label for each menu item. The attribute value should be a pipe (&#124;) delimited separated key-value pair. Example: `exportFormats: 'PNG=Export as High Quality Image&#124;JPG&#124;PDF=Export as PDF File'`",
                "range": "",
                "type": "String",
                "name": "exportFormats"
            },
            {
                "description": "This attribute when set to __1__, enables the client-side export feature.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportAtClientSide"
            },
            {
                "description": "Whether the menu items related to export (e.g., Save as JPEG etc.) will appear in the context menu of chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportShowMenuItem"
            },
            {
                "description": "In case of server-side exporting and when using download as action, this lefts you configure whether the return image, PDF, SVG or XLS will open in same window (as an attachment for download), or whether it will open in a new window. \n\n__Default value__: _self",
                "range": "'_self' or '_blank'",
                "type": "String",
                "name": "exportTargetWindow"
            },
            {
                "description": "Using this attribute you can specify the name (excluding the extension) of the output (export) file.",
                "range": "",
                "type": "String",
                "name": "exportFileName"
            }
        ],
        "description": "These attributes allow you to control the saving of chart as image, SVG or XLS."
    },
    {
        "table": "Data Plot Hover Effects",
        "attrs": [
            {
                "description": "Whether to enable hover effect on charts for all elements",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Sets whether to enable the hover effect on charts for anchors.",
                "range": "0/1",
                "type": "Boolean",
                "name": "anchorHoverEffect"
            },
            {
                "description": "This attribute sets the hover color for anchors.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorHoverColor"
            },
            {
                "description": "This attribute specifies the transparency for the anchors when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorHoverAlpha"
            },
            {
                "description": "This attribute sets the number of sides of the anchor when hovered.",
                "range": "In Pixels",
                "type": "Number",
                "name": "anchorHoverSides"
            },
            {
                "description": "This attribute sets the radius of the anchor when hovered.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorHoverRadius"
            },
            {
                "description": "This attribute sets the background color of anchor when hovered.",
                "range": "Hex color code",
                "type": "Color",
                "name": "anchorBgHoverColor"
            },
            {
                "description": "This attribute sets the transparency of anchor’s background when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBgHoverAlpha"
            },
            {
                "description": "Sets the border color of anchors when hovered.",
                "range": "Hex color code",
                "type": "Color",
                "name": "anchorBorderHoverColor"
            },
            {
                "description": "Sets the border's transparency of anchors when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBorderHoverAlpha"
            },
            {
                "description": "This attribute sets the border thickness of the anchors when hovered.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorBorderHoverThickness"
            },
            {
                "description": "This attribute sets the starting angle of the anchors when hovered.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorHoverStartAngle"
            },
            {
                "description": "This attribute adds a dip effect (different shapes) to the anchors on hover. When hovered a star shaped anchor is created. Using `anchorSides` attribute, you can specify the no. of sides for anchors. \n`Note : If the anchors are of circular shape, this attribute won't be applied on it.`",
                "range": "0 - 1",
                "type": "Number",
                "name": "anchorHoverDip"
            },
            {
                "description": "Anchors get animated when the normal radius and the hover radius are different. To disable this effect you can set anchorHoverAnimation = `0`. \n\nDefault value: `1`",
                "range": "0/1",
                "type": "Boolean",
                "name": "anchorHoverAnimation"
            }
        ],
        "description": "If you wish to show an effect on the data plot (column, line anchor, pie etc.) when the user hovers his mouse over the data plot, these attributes let you configure the cosmetics of the hover for all data plots in the chart."
    },
    {
        "table": "Chart Paddings & Margins",
        "attrs": [
            {
                "description": "This attribute lets you control the space (in pixels) between the sub-caption and top of the chart canvas. If the sub-caption is not defined, it controls the space between caption and top of chart canvas. If neither caption, nor sub-caption is defined, this padding does not come into play.",
                "range": "In pixels",
                "type": "Number",
                "name": "captionPadding"
            },
            {
                "description": "Lets you set the space between the canvas border and first & last data points",
                "range": "In pixels",
                "type": "Number",
                "name": "canvasPadding"
            },
            {
                "description": "Using this, you can set the distance between the top end of x-axis title and the bottom end of data labels (or canvas, if data labels are not to be shown).",
                "range": "In pixels",
                "type": "Number",
                "name": "xAxisNamePadding"
            },
            {
                "description": "Using this, you can set the distance between the right end of y-axis title and the start of y-axis values (or canvas, if the y-axis values are not to be shown).",
                "range": "In pixels",
                "type": "Number",
                "name": "yAxisNamePadding"
            },
            {
                "description": "This attribute helps you set the horizontal space between the canvas left edge and the y-axis values or trend line values (on left/right side). This is particularly useful, when you want more space between your canvas and y-axis values.",
                "range": "In pixels",
                "type": "Number",
                "name": "yAxisValuesPadding"
            },
            {
                "description": "This attribute sets the vertical space between the labels and canvas bottom edge. If you want more space between the canvas and the x-axis labels, you can use this attribute to control it.",
                "range": "In pixels",
                "type": "Number",
                "name": "labelPadding"
            },
            {
                "description": "It sets the vertical space between the end of area and start of value textboxes. This basically helps you control the space you want between your columns/anchors and the value textboxes.",
                "range": "In pixels",
                "type": "Number",
                "name": "valuePadding"
            },
            {
                "description": "Vertical distance between the real-time value and x-axis labels.",
                "range": "In pixels",
                "type": "Number",
                "name": "realTimeValuePadding"
            },
            {
                "description": "Padding of legend from right/bottom side of canvas",
                "range": "In pixels",
                "type": "Number",
                "name": "legendPadding"
            },
            {
                "description": "Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartLeftMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartRightMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartTopMargin"
            },
            {
                "description": "Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartBottomMargin"
            },
            {
                "description": "Left margin of canvas. Canvas will start from that position.",
                "range": "In pixels",
                "type": "Number",
                "name": "canvasLeftMargin"
            },
            {
                "description": "Right margin of canvas. Canvas will end at that position.",
                "range": "In pixels",
                "type": "Number",
                "name": "canvasRightMargin"
            },
            {
                "description": "Top margin of canvas.",
                "range": "In pixels",
                "type": "Number",
                "name": "canvasTopMargin"
            },
            {
                "description": "Bottom margin of canvas.",
                "range": "In pixels",
                "type": "Number",
                "name": "canvasBottomMargin"
            }
        ],
        "description": "The following attributes help you control chart margins and paddings. FusionWidgets XT allows you manually customize the padding of various elements on the chart to allow advanced manipulation and control over chart visualization. Padding in FusionWidgets XT is always defined in pixels, unless the attribute itself suggests some other scale (like `plotSpacePercent`, which configures the spacing using percentage values). You can also define the chart margins. Chart Margins refer to the empty space left on the top, bottom, left and right of the chart. It's not necessary for you to specify any padding/margin values. FusionCharts Suite XT XT automatically assumes the best values for the same, if you do not specify the same. "
    },
    {
        "table": "The categories Object",
        "path": "categories",
        "attrs": [
            {
                "description": "Lets you specify font face for the x-axis data labels.",
                "range": "",
                "type": "String",
                "name": "font"
            },
            {
                "description": "Lets you specify font color for the x-axis data labels.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Lets you specify font size for the x-axis data labels.",
                "range": "",
                "type": "Number",
                "name": "fontSize"
            }
        ],
        "description": "The `categories` object and the `category` object (child of  the `categories` object)  are used to specify x-axis labels for real-time charts.\n\nThe attributes of the `categories` object are used to set the font properties of all x-axis labels collectively."
    },
    {
        "table": "The category Object",
        "path": "category",
        "attrs": [
            {
                "description": "This attribute determines the label for the data item. The label appears on the x-axis of chart.\n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "You can individually opt to show/hide labels of individual data items using this attribute.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLabel"
            },
            {
                "description": "The tooltip defined in the `category` object appears only when the mouse cursor is hovered over the data plots. However, this will not appear when the cursor is moved over the data labels (except for a situation when long labels are automatically truncated with ellipses. In this situation, if the mouse cursor is hovered over a truncated label, the tooltip will appear with the full label). In case you want to set a short label and show the full label in tooltip, define the full label using this attribute within the `category` object. The tooltip with the full label will appear only when the mouse is hovered on the dataplot.",
                "range": "",
                "type": "String",
                "name": "tooltext"
            },
            {
                "description": "Sets the x-axis label font family for the text.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "font"
            },
            {
                "description": "Sets the x-axis label font color.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "fontColor"
            },
            {
                "description": "Specifies the x-axis label font size.",
                "range": "6 - 72",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "fontSize"
            },
            {
                "description": "Flag indicating whether x-axis label font should be bold or not.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "fontBold"
            },
            {
                "description": "Flag indicating whether x-axis label font should be italicized or not.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "fontItalic"
            },
            {
                "description": "Sets the background color for x-axis label text.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "bgColor"
            },
            {
                "description": "Sets the color of the border around the x-axis label text.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "borderColor"
            },
            {
                "description": "Sets the x-axis label alpha for both font and background.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "alpha"
            },
            {
                "description": "Sets the x-axis label background alpha.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "bgAlpha"
            },
            {
                "description": "Sets the x-axis label border alpha.",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderAlpha"
            },
            {
                "description": "Sets the x-axis label border padding.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderPadding"
            },
            {
                "description": "Sets the x-axis label border radius.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderRadius"
            },
            {
                "description": "Sets the x-axis label border thickness.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderThickness"
            },
            {
                "description": "Whether the border around x-axis label should be rendered using dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "borderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the x-axis label is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around x-axis label is rendered using dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "borderDashGap"
            }
        ],
        "description": "The attributes of the `category` object are used to define and customize individual x-axis labels for real-time charts."
    },
    {
        "table": "Vertical Data Separator Lines",
        "path": "category",
        "attrs": [
            {
                "description": "Set this attribute to __true__ to render a vertical data separator line.",
                "range": "",
                "type": "String",
                "name": "vLine"
            },
            {
                "description": "Display label for the vLine. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "This attribute defines the color of vertical separator line",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Thickness in pixels of the vertical separator line.",
                "range": "In pixels",
                "type": "Number",
                "name": "thickness"
            },
            {
                "description": "Alpha of the vertical separator line.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Whether the vertical separator line should be rendered as dashed lines. \n\n__Default value__: 0 (vertical separator line rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "Sets the width of each dash when vertical separator line is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when vertical separator line is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashGap"
            }
        ],
        "description": "Vertical data separator lines help you separate data blocks. These lines run through the height of the chart, thereby segregating the data into two different blocks. Vertical lines are defined as shown in the example below: \n\n<pre class=\"language-javascript\"><code>\n\"categories\": [{\n\t\"category\": [{\n\t\t\t\"label\": \"Grade 1\",\n\t\t},\n\t\t{\n\t\t\t\"vLine\": \"true\",\n\t\t\t\"label\": \"Appraisal\"\n\t\t}]\n\t}]\n</code></pre>\n You can configure the cosmetics of vertical separator lines using the following attributes: "
    },
    {
        "table": "The dataset Object",
        "path": "dataset",
        "attrs": [
            {
                "description": "This attribute sets the alpha (transparency) of the entire dataset.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Helps you set the alpha of entire anchors of the particular dataset. If you need to hide the anchors for the dataset but still enable tool tips, set this as 0.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorAlpha"
            },
            {
                "description": "Helps you set the alpha of anchor background of the particular dataset.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBgAlpha"
            },
            {
                "description": "Helps you set the background color of anchors of the particular dataset.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorBgColor"
            },
            {
                "description": "Lets you set the border color of anchors of the particular dataset.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorBorderColor"
            },
            {
                "description": "Helps you set border thickness of anchors of the particular dataset.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorBorderThickness"
            },
            {
                "description": "This attribute sets the radius (in pixels) of the anchors of the particular dataset. ",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorRadius"
            },
            {
                "description": "Sets the number of sides that the anchors of the particular dataset will have. For e.g., an anchor with 3 sides will represent a triangle, with 4 it will be a square and so on.",
                "range": "3-15",
                "type": "Number",
                "name": "anchorSides"
            },
            {
                "description": "This attribute sets the starting angle for anchors of particular dataset.  \n\nDefault value: 90",
                "range": "0 - 360",
                "type": "Number",
                "name": "anchorStartAngle"
            },
            {
                "description": "Whether to run the values of this dataset through alert manager, each time an update is received?",
                "range": "0/1",
                "type": "Boolean",
                "name": "checkForAlerts"
            },
            {
                "description": "This attribute sets the color using which columns, lines, area of that dataset will be drawn. For column chart, you can specify a list of comma separated hex codes to get a gradient plot",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether this dataset will appear as dashed?",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "Whether to draw anchors for a particular dataset.",
                "range": "0/1",
                "type": "Boolean",
                "name": "drawAnchors"
            },
            {
                "description": "Whether to include the `seriesName` of this dataset in legend? This can be particularly useful when you're using combination charts and you've used the area/line chart to plot a trend and you do not want the `seriesName` of that trend to appear in legend.",
                "range": "0/1",
                "type": "Boolean",
                "name": "includeInLegend"
            },
            {
                "description": "Alpha for data plot border of this dataset.",
                "range": "0 - 100",
                "type": "Number",
                "name": "plotBorderAlpha"
            },
            {
                "description": "Color for data plot border of this dataset.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotBorderColor"
            },
            {
                "description": "Thickness for data plot border of this dataset.",
                "range": "In pixels",
                "type": "Number",
                "name": "plotBorderThickness"
            },
            {
                "description": "Lets you specify the series name for a particular dataset. For example, if you're plotting a chart to indicate monthly sales analysis for 2005 and 2006, the `seriesName` for the first dataset will be 2005 and that of the second will be 2006. The `seriesName` of a dataset is shown in legend.",
                "range": "",
                "type": "String",
                "name": "seriesName"
            },
            {
                "description": "Whether to show the border of this dataset?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPlotBorder"
            },
            {
                "description": "Whether to show the values for this dataset?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showValues"
            },
            {
                "description": "This attribute can set the hover color for anchors of a particular dataset.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorHoverColor"
            },
            {
                "description": "This attribute sets the transparency for anchors of a particular dataset when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorHoverAlpha"
            },
            {
                "description": "This attribute sets the number of sides for anchors of a particular dataset when hovered.",
                "range": "In Pixels",
                "type": "Number",
                "name": "anchorHoverSides"
            },
            {
                "description": "This attribute sets the background color for anchors of a particular dataset when hovered.",
                "range": "Hex color code",
                "type": "Color",
                "name": "anchorBgHoverColor"
            },
            {
                "description": "This attribute sets the transparency for anchor's background of a particular dataset when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBgHoverAlpha"
            },
            {
                "description": "Sets the border color for anchors of a particular dataset when hovered.",
                "range": "Hex color code",
                "type": "Color",
                "name": "anchorBorderHoverColor"
            },
            {
                "description": "Sets the border's transparency for anchors of a particular dataset when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBorderHoverAlpha"
            },
            {
                "description": "This attribute sets the border thickness for anchors of a particular dataset when hovered.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorBorderHoverThickness"
            },
            {
                "description": "This attribute sets the starting angle for anchors of a particular dataset when hovered.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorHoverStartAngle"
            },
            {
                "description": "This attribute adds a dip effect (different shapes) for anchors of a particular dataset on hover. When hovered a star shaped anchor is created. Using `anchorSides` attribute, you can specify the no. of sides for anchors. \n`Note : If the anchors are of circular shape, this attribute won't be applied on it.`",
                "range": "0 - 1",
                "type": "Number",
                "name": "anchorHoverDip"
            }
        ],
        "description": "In real-time charts, attributes of the `dataset` object are used to define the properties for all data series to be plotted on the chart."
    },
    {
        "table": "The data Object",
        "path": "data",
        "attrs": [
            {
                "description": "For multi-series charts, you can define the alpha of datasets at dataset level. However, if you wish to highlight a particular data element, you can specify its alpha at &quot;set&quot; level using this attribute.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Lets you specify &quot;set&quot; specific alpha of the anchor.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorAlpha"
            },
            {
                "description": "Lets you specify &quot;set&quot; specific alpha of the anchor background.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBgAlpha"
            },
            {
                "description": "Lets you specify &quot;set&quot; specific background color of the anchor.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorBgColor"
            },
            {
                "description": "Lets you specify &quot;set&quot; specific border color of the anchor.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorBorderColor"
            },
            {
                "description": "Lets you specify &quot;set&quot; specific border thickness of the anchor.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorBorderThickness"
            },
            {
                "description": "Lets you specify &quot;set&quot; specific radius (in pixels) of the anchor.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorRadius"
            },
            {
                "description": "Lets you specify &quot;set&quot; specific sides of the anchor.",
                "range": "3-15",
                "type": "Number",
                "name": "anchorSides"
            },
            {
                "description": "This attribute sets the starting angle for an anchor of a particular data.  \n\nDefault value: 90",
                "range": "0 - 360",
                "type": "Number",
                "name": "anchorStartAngle"
            },
            {
                "description": "For multi-series charts, you can define the color of dataset at dataset level. However, if you wish to highlight a particular data element, you can specify its color at &quot;set&quot; level using this attribute. ",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether the border of this data item should appear as dashed? This is particularly useful when you want to highlight a data (such as forecast or trend etc.). This value over-rides the dataset level value.",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "You can define links for individual data items. That enables the end user to click on data items (columns, lines, bars, etc.) and drill-down to other pages. To define the link for data items, use the `link` attribute. You can define links that open in same window, new window, pop-up window or frames. Please see Drill-Down Charts section for more information. Also, you'll need to URL Encode all the special characters (like ? and &) present in the link.",
                "range": "",
                "type": "String",
                "name": "link"
            },
            {
                "description": "You can individually opt to show/hide values of individual data items using this attribute. This value over-rides the dataset level value.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showValue"
            },
            {
                "description": "By default, FusionWidgets XT shows the &quot;`label`, `value`&quot; as tooltip text for that data item. But, if you want to display more information for the data item as tooltip, you can use this attribute to specify the same.",
                "range": "",
                "type": "String",
                "name": "toolText"
            },
            {
                "description": "Numerical value for the data item. This value will be plotted on the chart.",
                "range": "",
                "type": "Number",
                "name": "value"
            },
            {
                "description": "If you've opted to show a particular data value on the chart, this attribute lets you adjust the vertical alignment of individual data values with respect to dataplots. By default, this attribute is set to AUTO mode in which the alignment of a data value is determined automatically based on the position of its plot point. In ABOVE mode, a data value is displayed above the plot point unless a plot point is too close to the upper edge of the canvas while in BELOW mode, a data value is displayed below the plot point unless a plot point is too close to the lower edge of the canvas.",
                "range": "&quot;ABOVE&quot;, &quot;BELOW&quot;, &quot;AUTO&quot;",
                "type": "String",
                "versionsince": "3.2",
                "name": "valuePosition"
            },
            {
                "description": "This attribute can set the hover color for a particular anchor.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "anchorHoverColor"
            },
            {
                "description": "This attribute sets the transparency for an anchor when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorHoverAlpha"
            },
            {
                "description": "This attribute sets the number of sides for a particular anchor when hovered.",
                "range": "In Pixels",
                "type": "Number",
                "name": "anchorHoverSides"
            },
            {
                "description": "This attribute sets the background color of a particular anchor when hovered.",
                "range": "Hex color code",
                "type": "Color",
                "name": "anchorBgHoverColor"
            },
            {
                "description": "This attribute sets the transparency for a particular anchor’s background when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBgHoverAlpha"
            },
            {
                "description": "Sets the border color of an anchor when hovered.",
                "range": "Hex color code",
                "type": "Color",
                "name": "anchorBorderHoverColor"
            },
            {
                "description": "Sets the border's transparency of an anchor when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "anchorBorderHoverAlpha"
            },
            {
                "description": "This attribute sets the border thickness of an anchor when hovered.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorBorderHoverThickness"
            },
            {
                "description": "This attribute sets the starting angle of an anchor when hovered.",
                "range": "In pixels",
                "type": "Number",
                "name": "anchorHoverStartAngle"
            },
            {
                "description": "This attribute adds a dip effect (different shapes) to a particular anchor on hover. When hovered a star shaped anchor is created. Using `anchorSides` attribute, you can specify the no. of sides for anchors. \n`Note : If the anchors are of circular shape, this attribute won't be applied on it.`",
                "range": "0 - 1",
                "type": "Number",
                "name": "anchorHoverDip"
            }
        ],
        "description": "In real-time charts, attributes of the `data` object, child of the `dataset` object, are used to define the values to be plotted for individual data series. For a real-time chart, essentially, the `data` object is used to specify the first data value for all data series to be plotted on the chart; the remaining values are fetched in real-time.\n\nThe `dataset` and `data` objects defined for a real-time chart look like this:\n\n<pre class=\"language-javascript\"><code>\n\"dataset\": [{\n\t\"seriesName\": \"clothing.hsm.com\",\n\t\"data\": [{\n\t\t\"value\": \"12\"\n\t\t}]\n\t},\n\t{\n\t\"seriesName\": \"food.hsm.com\",\n\t\"data\": [{\n\t\t\"value\": \"20\"\n\t\t}]\n\t}]\n</code></pre>"
    },
    {
        "table": "Trend-lines",
        "path": "line",
        "attrs": [
            {
                "description": "Alpha of the trend line.",
                "range": "",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Color of the trend line and its associated text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether the trendline should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "Sets the length of each dash when trendline is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when trendline is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashGap"
            },
            {
                "description": "If you want to display a string caption for the trend line by its side, you can use this attribute. Example: `displayValue='Last Month High'`. When you don't supply this attribute, it automatically takes the value of `startValue`.",
                "range": "",
                "type": "String",
                "name": "displayValue"
            },
            {
                "description": "The ending y-axis value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `endValue` will be 109. If you do not specify a value for `endValue`, it will automatically assume the same value as `startValue`.",
                "range": "",
                "type": "Number",
                "name": "endValue"
            },
            {
                "description": "Whether the trend will be displayed as a line or a zone (fill-colored rectangle).",
                "range": "0/1",
                "type": "Boolean",
                "name": "isTrendZone"
            },
            {
                "description": "Whether the trend line/zone will be displayed over data plots or under them?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showOnTop"
            },
            {
                "description": "The starting value for the trendline. Say, if you want to plot a slanted trendline from value 102 to 109, the `startValue` will be 102.",
                "range": "",
                "type": "Number",
                "name": "startValue"
            },
            {
                "description": "If you've opted to show the trend as a line, this attribute lets you define the thickness of trend line.",
                "range": "In pixels",
                "type": "Number",
                "name": "thickness"
            },
            {
                "description": "Whether to show the trend line value on left side or right side of chart? This is particularly useful when the trend line display values on the chart are colliding with divisional lines values on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueOnRight"
            }
        ],
        "description": "Trend-lines are horizontal lines that aid in interpretation of data with respect to some pre-determined value. For example, if you are plotting the sales data for the current year, you might want to show the previous year's average monthly sales as a trend indicator for ease of comparison. The `lines` object, child of the `trendlines` object is used to add trend-lines to a chart.\n\nAlthough the `line` object has to be defined within the `trendlines` object, the latter cannot be used to collectively customize trend-lines, because  it does not have any attributes of its own.\n\nThe attributes of the `lines` object, child of the `trendlines` object, are used to create and customize trend-lines for charts."
    },
    {
        "table": "Trend-lines (Chart level attributes)",
        "path": "chart",
        "attrs": [
            {
                "description": "Sets color of all the trend lines and its associated text in the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "trendlineColor"
            },
            {
                "description": "If you've opted to show the trend as a line, this attribute lets you define the thickness of all the trend lines in your chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "trendlineThickness"
            },
            {
                "description": "Sets transparency for all the trend lines in your charts.",
                "range": "0 - 100",
                "type": "Number",
                "name": "trendlineAlpha"
            },
            {
                "description": "Whether all the trend line/zone will be displayed over data plots or under them.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTrendlinesOnTop"
            }
        ],
        "description": "Trend-lines are horizontal lines that aid in interpretation of data with respect to some pre-determined value. For example, if you are plotting the sales data for the current year, you might want to show the previous year's average monthly sales as a trend indicator for ease of comparison. Cosmetics for all the trend-lines rendered can be attained using this set of attributes.\n\nAlthough there are set of attributes of the `line object`, used to create and customize trend-lines, these set of attributes effect all the trend-lines rendered in your chart."
    },
    {
        "table": "Trend-lines Display Value Cosmetics",
        "path": "chart",
        "attrs": [
            {
                "description": "Sets the font family for the trend-line display value.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.8.0",
                "name": "trendValueFont"
            },
            {
                "description": "Sets the font size for the trend-line display value.",
                "range": " ",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueFontSize"
            },
            {
                "description": "Sets whether the trend-line display value will be bold formatted. \n\nDefault value: 0 (not bold formatted)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueFontBold"
            },
            {
                "description": "Sets whether the trend-line display value will be italicized. \n\nDefault value: 0 (not italicized)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueFontItalic"
            },
            {
                "description": "Sets the background color for the trend-line display value.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "trendValueBgColor"
            },
            {
                "description": "Sets the border color for the trend-line display value.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "trendValueBorderColor"
            },
            {
                "description": "Sets the transparency for the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueAlpha"
            },
            {
                "description": "Sets the transparency for the background of the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBgAlpha"
            },
            {
                "description": "Sets the transparency for the border around the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderAlpha"
            },
            {
                "description": "Sets padding for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderPadding"
            },
            {
                "description": "Sets the radius for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderRadius"
            },
            {
                "description": "Sets the thickness for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderThickness"
            },
            {
                "description": "Whether the border around the trend-line display value should be rendered as dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the trend-line display value is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the trend-line display value is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashGap"
            }
        ],
        "description": "These attributes let you customize the text displayed with a trend-line. \n\n__Note__: These attributes belong to the `chart` object and  not to the `line` object (child of the `trendline` object). They are, therefore, applied to all trend-lines on your chart. "
    }
]