[
    {
        "table": "Functional Attributes",
        "attrs": [
            {
                "description": "This attribute helps you specify the input date format for all the dates in your XML. This is a mandatory attribute to specify and once specified, all the dates in your XML data should conform to the format specified herein.",
                "range": "'mm/dd/yyyy' or 'dd/mm/yyyy' or 'yyyy/mm/dd' or 'mm-dd-yyyy' or 'dd-mm-yyyy' or 'yyyy-mm-dd'",
                "type": "Date",
                "name": "dateFormat"
            },
            {
                "description": "You can also specify how the dates look on your Gantt chart using this attribute. This attribute takes the output date format as string. You can build your own output date format string as explained in the section &quot;Configuring date formats&quot;.",
                "range": "",
                "type": "String",
                "name": "outputDateFormat"
            },
            {
                "description": "If you want your Gantt pane to scroll through a specified time line, you can use this attribute to set what timeline the pane will represent. For example, if you want your Gantt pane to show date only for 3 months and then scroll the rest, you can set this attribute as 3. More of this has been explained in the section &quot;Enable scrolling&quot;.",
                "range": "",
                "type": "Number",
                "name": "ganttPaneDuration"
            },
            {
                "description": "If you've opted to scroll the Gantt pane, this attribute lets you choose the unit of your specified duration. More of this has been explained in the section &quot;Enable scrolling&quot;.",
                "range": "'y','m','d','h','mn' or 's'",
                "type": "String",
                "name": "ganttPaneDurationUnit"
            },
            {
                "description": "Whether to show full names of the process labels and data columns in grid. If you set this as on, the labels will not wrap and always show in full. When required, a scroll bar will automatically appear for the entire grid.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showFullDataTable"
            },
            {
                "description": "You can opt to set the width of the Gantt view pane in percent using this attribute. The rest of the width will be taken by the grid. If the data grid takes lesser space, the chart will automatically adjust the Gantt pane to assume more width.",
                "range": "10 - 100",
                "type": "Number",
                "name": "ganttWidthPercent"
            },
            {
                "description": "If you want the chart to never automatically adjust the Gantt width and stick to the percent width that you've specified, you can set this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceGanttWidthPercent"
            },
            {
                "description": "Caption for the chart.",
                "range": "",
                "type": "String",
                "name": "caption"
            },
            {
                "description": "Sub-caption for the chart.",
                "range": "",
                "type": "String",
                "name": "subCaption"
            },
            {
                "description": "For each task bar in the Gantt chart, you can show its respective start date on its left. To do so, set this attribute as 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTaskStartDate"
            },
            {
                "description": "For each task bar in the Gantt chart, you can show its end date value too by setting this attribute as 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTaskEndDate"
            },
            {
                "description": "Whether to show task labels for each task bar in the Gantt chart. The task labels show up only if they've been defined for the task.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTaskLabels"
            },
            {
                "description": "If you've used the percentage task feature, you can opt to show the percent complete for each task as part of the task label by setting this attribute as 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPercentLabel"
            },
            {
                "description": "If you've used the percentage task feature, you can opt to show the slack (percent of work not completed) as either a filled bar or empty bar. To draw as empty bars, set this attribute as 0.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showSlackAsFill"
            },
            {
                "description": "If you've opted to fill the slack bars with color, you can define the color code for the same here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "slackFillColor"
            },
            {
                "description": "Whether to animate the chart while rendering? If you define this attribute as 0, even your custom defined Style animations will not work.",
                "range": "0/1",
                "type": "Boolean",
                "name": "animation"
            },
            {
                "description": "This attribute sets the animation duration, if `animation` is set to `1`. \n\nDefault value: 1 sec",
                "range": "In seconds",
                "type": "Number",
	    		"Versionsince": "3.11.0",
                "name": "animationDuration"
            },
            {
                "description": "Click URL for the entire chart. The entire chart can then act as a hotspot. This URL can be provided in FusionCharts Link format.",
                "range": "",
                "type": "String URL",
                "name": "clickURL"
            },
            {
                "description": "Sets whether the `clickURL` attribute (that sets a link to which the user is directed when the chart is clicked) overrides the `link` attribute (that sets a link to which the user is directed when a data plot is clicked). \n\nDefault value: 0 (`clickURL` does not override `link`)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.7.0",
                "name": "clickURLOverridesPlotLinks"
            },
            {
                "description": "If you set this attribute as 1, the Gantt pane grid will take the same background and border properties as that of the last category (visual dateline) defined.",
                "range": "0/1",
                "type": "Boolean",
                "name": "extendCategoryBg"
            },
            {
                "description": "Whether to show &quot;Print Chart&quot; item in the context menu of the chart? Even if you opt to hide the item in context menu, you can still opt to invoke `print()` JavaScript method of the chart to print the same.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPrintMenuItem"
            },
            {
                "description": "Chart will automatically scroll to the given date at the time of rendering. This attribute will only work when `ganttPaneDuration` and `ganttPaneDurationUnit` attributes are set as per requirement. This feature is supported by JavaScript Gantt chart only.",
                "range": "'mm/dd/yyyy'",
                "type": "Date",
                "name": "scrollToDate"
            },
            {
                "description": "Whether to display the vertical scroll bar or not. By default, the attribute is set to 1 and the vertical scroll bar appears depending on the height of the chart. More of this has been explained in the section &quot;Enable scrolling&quot;. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "useVerticalScrolling"
            },
            {
                "description": "When the process rows do not occupy the complete height of the chart, this attribute is used to specify the row height configuration. If set to true, each row is set to its own height. Otherwise, the rows occupy the total available height equally. Default value is false.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.5.0",
                "name": "forceRowHeight"
            }
        ],
        "description": "These attributes let you control a variety of functional elements on the chart. For example, you can opt to show/hide data labels, data values. You can also set chart limits and extended properties."
    },
    {
        "table": "Chart Message-related Attributes",
        "attrs": [
        	{
                "description": "This attribute allows to set a custom font for all chart messages.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFont"
            },
            {
                "description": "This attribute allows to set a custom font size for all chart messages.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFontSize"
            },
            {
                "description": "This attribute allows to set a custom font color for all chart messages.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "baseChartMessageColor"
            },
            {
                "description": "This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageHAlign"
            },
            {
                "description": "This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageVAlign"
            },
            {
                "description": "This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageAlpha"
            },
            {
                "description": "This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when a chart begins to load.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "loadMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when a chart begins to load.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "loadMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when a chart begins to load.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "loadMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when the specified chart type is not supported.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when the specified chart type is not supported.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when the specified chart type is not supported.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed when chart data begins loading.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when chart data begins loading.",
                "range": "In pixels",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when chart data begins loading.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data loaded for a chart is empty. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the data loaded for a chart is empty",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the data loaded for a chart is empty.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the data loaded for a chart is empty.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the specified chart data is invalid.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the specified chart data is invalid.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the specified chart data is invalid.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageScale"
            }
        ],
        "description": "These attributes let you set and configure custom chart messages, using text as well as images."
    },
    {
        "table": "Chart Titles and Axis Names",
        "attrs": [
            {
                "description": "Caption of the chart.",
                "type": "String",
                "name": "caption"
            },
            {
                "description": "Sub-caption of the chart.",
                "type": "String",
                "name": "subCaption"
            }
        ],
        "description": "Using these attributes, you can set the various headings and titles of chart like caption, sub-caption."
    },
    {
        "table": "Chart Caption Cosmetics",
        "attrs": [
            {
                "description": "Sets horizontal alignment of caption",
                "range": "\"left\", \"center\", \"right\"",
                "type": "String",
                "name": "captionAlignment"
            },
            {
                "description": "Whether caption should be on top of the data plot area",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionOnTop"
            },
            {
                "description": "Sets the caption font size in pixels",
                "range": "6 - 72",
                "type": "Number",
                "name": "captionFontSize"
            },
            {
                "description": "Sets the sub-caption font size (in pixels)",
                "range": "6 - 72",
                "type": "Number",
                "name": "subCaptionFontSize"
            },
            {
                "description": "Sets the caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "captionFont"
            },
            {
                "description": "Sets the sub-caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "subCaptionFont"
            },
            {
                "description": "Sets the caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "captionFontColor"
            },
            {
                "description": "Sets the sub-caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "subCaptionFontColor"
            },
            {
                "description": "Whether the caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionFontBold"
            },
            {
                "description": "Whether the sub caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "subCaptionFontBold"
            },
            {
                "description": "Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area",
                "range": "0/1",
                "type": "Boolean",
                "name": "alignCaptionWithCanvas"
            },
            {
                "description": "If caption is not centre aligned, lets you configure the padding (in pixels) from either edge.\nWill be ignored if caption is centre aligned.",
                "range": "In Pixels",
                "type": "Number",
                "name": "captionHorizontalPadding"
            },
            {
                "description": "This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. ",
                "range": "",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "hasRTLText"
            },
            {
                "description": "This attribute lets you enable/disable the highlight effect, in the form of a `fadeout`, for the data plots corresponding to a legend item. When this attribute is enabled and the mouse pointer is hovered over a legend item label, plots belonging to the other data series fadeout, by reducing their opacity.\n\n The fadeout effect can be customized by specifying the fadeout color and opacity using the `color` and `alpha` attributes. Eg. `fadeout|color=#ff0000, alpha=60`",
                "range": "",
                "type": "String",
                "name": "plotHighlightEffect"
            },
            {
                "description": "This attribute changes the theme of the chart. There are 4 types of themes which have been made according to the different color combinations.",
                "range": "‘carbon’, ‘fusion’, ‘ocean’, ‘zune’",
                "type": "String",
                "name": "theme"
            }
        ],
        "description": "These attributes let you configure the cosmetics of chart caption and sub-caption."
    },
    {
        "table": "Cosmetic properties",
        "attrs": [
            {
                "description": "Which pre-defined color palette to use",
                "range": "1-5",
                "type": "Number",
                "name": "palette"
            },
            {
                "description": "If you want your own palette derived from a particular hex color, you can specify the same here. All other colors on the chart will automatically derive from that palette.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "paletteThemeColor"
            },
            {
                "description": "This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `FF5904, FFFFFF`. Remember to remove # and any spaces in between.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Sets the alpha (transparency) for the background. If you've opted for gradient background, you need to set a list of alpha(s) separated by comma.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "If you've opted for a gradient background, this attribute lets you set the ratio of each color constituent.",
                "range": "0 - 100",
                "type": "String of numbers",
                "name": "bgRatio"
            },
            {
                "description": "Angle of the background color, in case of a gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "bgAngle"
            },
            {
                "description": "Whether to show a border around the chart or not?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showBorder"
            },
            {
                "description": "Border color of the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "borderColor"
            },
            {
                "description": "Border thickness of the chart.",
                "range": "",
                "type": "Number",
                "name": "borderThickness"
            },
            {
                "description": "Border alpha of the chart.",
                "range": "0 - 100",
                "type": "Number",
                "name": "borderAlpha"
            },
            {
                "description": "To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.",
                "range": "",
                "type": "String",
                "name": "bgImage"
            },
            {
                "description": "This attribute specifies the opacity for the loaded background image.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgImageAlpha"
            },
            {
                "description": "Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.",
                "range": "'stretch', 'tile', 'fit', 'fill', 'center', 'none'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageDisplayMode"
            },
            {
                "description": "Helps you to vertically align the background image.",
                "range": "'top', 'middle', 'bottom'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageVAlign"
            },
            {
                "description": "Helps you to horizontally align the background image.",
                "range": "'left', 'middle', 'right'",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageHAlign"
            },
            {
                "description": "Helps you magnify the background image.This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.2",
                "name": "bgImageScale"
            },
            {
                "description": "This attribute if set to _1_, shows a border around the canvas of the chart. \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "showcanvasborder"
            },
            {
                "description": "This attribute sets the background color for the chart canvas. You can set any hex color code as the value of this attribute. To specify a gradient as canvas background color, separate the hex color codes of each color in the gradient using comma. Example: #FF5904, #FFFFFF.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "canvasBgColor"
            },
            {
                "description": "This attribute sets the background transparency for the chart canvas. For gradient, separate the alpha value using comma. Example: 15, 50.",
                "range": "0 - 100",
                "type": "Number",
                "name": "canvasBgAlpha"
            },
            {
                "description": "When a gradient is used to set the color of the canvas background, this attribute sets the ratio of the colors. Example : If the value of the `canvasBgColor` attribute is set as `#FF5904, #FFFFFF`, `canvasBgRatio` can be used to specify their ratio in the background.",
                "range": "0 - 100",
                "type": "Numbers separated by comma",
                "name": "canvasBgRatio"
            },
            {
                "description": "Helps you specify canvas background angle in case of gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "canvasBgAngle"
            },
            {
                "description": "Lets you specify canvas border color.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "canvasBorderColor"
            },
            {
                "description": "Lets you specify canvas border thickness.",
                "range": "In pixels",
                "type": "Number",
                "name": "canvasBorderThickness"
            },
            {
                "description": "Lets you control transparency of canvas border.",
                "range": "0 - 100",
                "type": "Number",
                "name": "canvasBorderAlpha"
            },
            {
                "description": "Lets you specify the color in which the grid border for the Gantt pane view will be drawn.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "ganttLineColor"
            },
            {
                "description": "Alpha for the grid border of Gantt view pane.",
                "range": "0 - 100",
                "type": "Number",
                "name": "ganttLineAlpha"
            },
            {
                "description": "Color for the data grid border.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "gridBorderColor"
            },
            {
                "description": "Alpha for the data grid border.",
                "range": "0 - 100",
                "type": "Number",
                "name": "gridBorderAlpha"
            },
            {
                "description": "Color for the drag line that appears when resizing the data grid.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "gridResizeBarColor"
            },
            {
                "description": "Thickness of the drag line that appears when resizing the data grid,",
                "range": "",
                "type": "Number",
                "name": "gridResizeBarThickness"
            },
            {
                "description": "Alpha of the drag line that appears when resizing the data grid.",
                "range": "0 - 100",
                "type": "Number",
                "name": "gridResizeBarAlpha"
            },
            {
                "description": "If you want your task bars to be rounded (when not using percent complete feature), you can set the radius of the round corner here. That'll result in all task bars having rounded corners.",
                "range": "",
                "type": "Number",
                "name": "taskBarRoundRadius"
            },
            {
                "description": "This attribute lets you specify the gradient fill formula for the task bars. Example: `{light-10},{light-20},{light-60}`",
                "range": "",
                "type": "String",
                "name": "taskBarFillMix"
            },
            {
                "description": "If you're using gradient fill formula for the task bars, this attribute lets you specify the ratio for each color in the gradient.",
                "range": "",
                "type": "Numbers separated by comma",
                "name": "taskBarFillRatio"
            },
            {
                "description": "Global font face for all text on the chart. You can individually customize font properties of each element using their respective attributes or Styles.",
                "range": "",
                "type": "Font face name",
                "name": "baseFont"
            },
            {
                "description": "Global font size for all text on the chart.",
                "range": "",
                "type": "Number",
                "name": "baseFontSize"
            },
            {
                "description": "Global font color for all text on the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "baseFontColor"
            },
            {
                "description": "Whether to apply the shadow effect for the task bars?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showShadow"
            },
            {
                "description": "You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.",
                "range": "",
                "type": "String",
                "name": "logoURL"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on the left side of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoLeftMargin"
            },
            {
                "description": "This attribute helps you set the amount of empty space that you want to put on top of your logo image. Nothing is rendered in this space.",
                "range": "In Pixels",
                "type": "Number",
                "name": "logoTopMargin"
            },
            {
                "description": "Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen",
                "range": "'TL', 'TR', 'BL', \n'BR', 'CC'",
                "type": "String",
                "name": "logoPosition"
            },
            {
                "description": "Once the logo has loaded on the chart, you can configure its opacity using this attribute.",
                "range": "0 - 100",
                "type": "Number",
                "name": "logoAlpha"
            },
            {
                "description": "You can also change the size of externally loaded logo at run-time by specifying a value for this parameter.",
                "range": "0 - 100",
                "type": "Number",
                "name": "logoScale"
            },
            {
                "description": "If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts link format, allowing you to link to new windows, pop-ups, frames etc.",
                "range": "",
                "type": "String",
                "name": "logoLink"
            },
            {
                "description": "Setting this attribute to 1, you can allow the chart to automatically resize itself when the parent container of the chart is resized.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "manageResize"
            },
            {
                "description": "When enabled in AUTO mode, long data labels are truncated by adding ellipses to prevent them from overflowing the chart background. The default value is 1.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "useEllipsesWhenOverflow"
            }
        ],
        "description": "The following attributes let you configure chart cosmetics like background color, background alpha, canvas color & alpha etc. "
    },
    {
        "table": "Tooltip properties",
        "attrs": [
            {
                "description": "Whether to show tooltip for the chart?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTip"
            },
            {
                "description": "Background color for the tooltip",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBgColor"
            },
            {
                "description": "Font color for the tool-tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipColor"
            },
            {
                "description": "Border Color for the tooltip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBorderColor"
            },
            {
            	"description": "Sets the border transparency for tool tip.",
                "range": "0 - 100",
                "type": "NUmber",
                "name": "tooltipBorderAlpha"	
            },
            {
                "description": "Whether to show starting and ending date for each task in tooltip?",
                "range": "0/1",
                "type": "Boolean",
                "name": "dateInToolTip"
            },
            {
                "description": "Whether to show shadow for tooltips.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTipShadow"
            },
            {
                "description": "Specify custom text for the tooltip \n\n You can either specify a constant string as the tooltip text or you can use variable values from the data level by prefixing a __$__ to the attribute name, for example, __$name__, __$value__.",
                "range": "",
                "type": "String",
                "name": "plottooltext"
            }
        ],
        "description": "These attributes let you control the tooltip. You can set the background color, border color, separator character and few other details. "
    },
    {
        "table": "Attributes for Exporting Charts",
        "attrs": [
            {
                "description": "Whether the chart will allow exporting to images, PDFs, SVG or XLS.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportEnabled"
            },
            {
                "description": "In case of server-side exporting, the action specifies whether the exported image will be sent back to client as download, or whether it'll be saved on the server. \n\n__Default value__: download",
                "range": "'save' or 'download'",
                "type": "String",
                "name": "exportAction"
            },
            {
                "description": "In case of server side exporting, this refers to the path of the server-side export handler (the ready-to-use scripts that we provide).",
                "range": "",
                "type": "String",
                "name": "exportHandler"
            },
            {
                "description": "Lets you configure what output formats to allow for export of chart, in the export context menu, and also customize the label for each menu item. The attribute value should be a pipe (&#124;) delimited separated key-value pair. Example: `exportFormats: 'PNG=Export as High Quality Image&#124;JPG&#124;PDF=Export as PDF File'`",
                "range": "",
                "type": "String",
                "name": "exportFormats"
            },
            {
                "description": "This attribute when set to __1__, enables the client-side export feature.  \n\n__Default value__: 0",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportAtClientSide"
            },
            {
                "description": "Whether the menu items related to export (e.g., Save as JPEG etc.) will appear in the context menu of chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "exportShowMenuItem"
            },
            {
                "description": "In case of server-side exporting and when using download as action, this lefts you configure whether the return image, PDF, SVG or XLS will open in same window (as an attachment for download), or whether it will open in a new window. \n\n__Default value__: _self",
                "range": "'_self' or '_blank'",
                "type": "String",
                "name": "exportTargetWindow"
            },
            {
                "description": "Using this attribute you can specify the name (excluding the extension) of the output (export) file.",
                "range": "",
                "type": "String",
                "name": "exportFileName"
            }
        ],
        "description": "These attributes allow you to control the saving of chart as image, SVG or XLS."
    },
    {
        "table": "Data Plot Hover Effects",
        "attrs": [
            {
                "description": "Whether to enable hover effect on charts for all elements",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Whether to enable hover effect on charts for data plots (e.g., column, pie) only",
                "range": "0/1",
                "type": "Boolean",
                "name": "plotHoverEffect"
            },
            {
                "description": "Specifies the hover color for the data plots",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotFillHoverColor"
            },
            {
                "description": "Specifies the hover alpha for data plots",
                "range": "1 - 100",
                "type": "Number",
                "name": "plotFillHoverAlpha"
            },
            {
                "description": "Whether to show the vertical and horizontal hover band for both the `categories` and the `processes` objects. This atrribute overrides the value of `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverBand"
            },
            {
                "description": "When set to 0, disables all the hover bands and hover effects all over the chart. The value of this attribute is overridden by the value of `showHoverBand`, `showProcessHoverBand` and `showCategoryHoverBand` attributes. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Lets you set the hover band color of both the `categories` and the `processes` objects. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverBandColor"
            },
            {
                "description": "Lets you set the transparency of the hover band for both the `categories` and the `processes` objects. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverBandAlpha"
            },
            {
                "description": "Whether to show the vertical color band on mouse hover for the `categories` object. The value of this attribute overrides the value of the `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showCategoryHoverBand"
            },
            {
                "description": "Lets you set the hover band color for multiple `categories` objects. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "categoryHoverBandColor"
            },
            {
                "description": "Lets you set the transparency of the hover band for multiple `categories` objects. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "categoryHoverBandAlpha"
            },
            {
                "description": "Whether to show the color band of Gantt pane on mouse hover for multiple `categories` objects. The value of this attribute overrides the value `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showGanttPaneVerticalHoverBand"
            },
            {
                "description": "Whether to show the horizontal hover band for the `processes` object on mouse hover. The value of this attribute overrides the value `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showProcessHoverBand"
            },
            {
                "description": "Lets you set the hover band color for all `processes` objects. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "processHoverBandColor"
            },
            {
                "description": "Lets you set the transparency of the hover band for all `processes` objects. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "processHoverBandAlpha"
            },
            {
                "description": "Whether to show the hover bands for the `processes` object of the Gantt pane on mouse hover. The value of this attribute overrides the value `showHoverEffect` attribute. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showGanttPaneHorizontalHoverBand"
            },
            {
                "description": "Whether to display the mouse hover effect on connector lines. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showConnectorHoverEffect"
            },
            {
                "description": "Lets you set the hover color of the connector lines. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "connectorHoverColor"
            },
            {
                "description": "Lets you set the transparency of the hover color of the connector lines. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "connectorHoverAlpha"
            },
            {
                "description": "Lets you set the thickness of the connector lines after the mouse cursor hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "",
                "type": "Number",
                "name": "connectorHoverThickness"
            },
            {
                "description": "Whether to use the mouse hover effect of task bars. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTaskHoverEffect"
            },
            {
                "description": "Lets you set the color of task fill on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "taskHoverFillColor"
            },
            {
                "description": "Lets you set the transparency of the task fill on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "taskHoverFillAlpha"
            },
            {
                "description": "Lets you set the hover color of the task bar slack. This attribute is not applicable when `showSlackAsFill` is set to 0. This feature is supported by JavaScript Gantt chart only.",
                "range": "",
                "type": "Number",
                "name": "slackHoverFillColor"
            },
            {
                "description": "Lets you set the transparency of the hover color of the task bar slack fill. This attribute is not applicable when `showSlackAsFill` is set to 0. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "slackHoverFillAlpha"
            }
        ],
        "description": "If you wish to show an effect on the data plot when the user hovers his mouse over the data plot, these attributes let you configure the cosmetics of the hover for all data plots in the chart."
    },
    {
        "table": "Legend properties",
        "attrs": [
            {
                "description": "Whether to show legend for the chart?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLegend"
            },
            {
                "description": "Text caption for the legend.",
                "range": "",
                "type": "String",
                "name": "legendCaption"
            },
            {
                "description": "Border Color for the legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendBorderColor"
            },
            {
                "description": "Border thickness for the legend.",
                "range": "",
                "type": "Number",
                "name": "legendBorderThickness"
            },
            {
                "description": "Border alpha for the legend.",
                "range": "0 - 100",
                "type": "Number",
                "name": "legendBorderAlpha"
            },
            {
                "description": "Background color for the legend.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendBgColor"
            },
            {
                "description": "Background alpha for the legend.",
                "range": "0 - 100",
                "type": "Number",
                "name": "legendBgAlpha"
            },
            {
                "description": "Whether to show a shadow for legend?",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendShadow"
            },
            {
                "description": "The legend can be made drag-able by setting this attribute to 1. End viewers of the chart can drag the legend around on the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendAllowDrag"
            },
            {
                "description": "If you've too many items on the legend, a scroll bar shows up on the same. This attribute lets you configure the background color of the scroll bar.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendScrollBgColor"
            },
            {
                "description": "You can reverse the ordering of datasets in the legend by setting this attribute to 1.",
                "range": "0/1",
                "type": "Boolean",
                "name": "reverseLegend"
            },
            {
                "description": "Scaling of legend icon is possible in FusionCharts XT. This attribute lets you control the size of legend icon.",
                "range": "1-5",
                "type": "Number",
                "versionsince": "3.2",
                "name": "legendIconScale"
            },
            {
                "description": "Whether legend keys should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "legendItemFontBold"
            },
            {
                "description": "Sets legend item font",
                "range": "Font Name",
                "type": "String",
                "name": "legendItemFont"
            },
            {
                "description": "Sets legend item font size",
                "range": "6 - 72",
                "type": "Number",
                "name": "legendItemFontSize"
            },
            {
                "description": "Sets legend item font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "legendItemFontColor"
            },
            {
                "description": "If your chart contains multiple series, the legend is displayed as a grid comprising of multiple legend keys. With the help of this attribute you can specify the number of columns that are to be displayed in the legend.",
                "range": "Positive Integer",
                "type": "Number",
                "versionsince": "3.2",
                "name": "legendNumColumns"
            },
            {
                "description": "Specifies whether drawing a custom legend icon will be enabled. All legend icon customization attributes will work only if this feature is enabled. \n\nDefault value: 0 (disabled)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "drawCustomLegendIcon"
            },
            {
                "description": "Sets the border color for the legend icon. \n\nDefault value: Data plot border color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "legendIconBorderColor"
            },
            {
                "description": "Sets the background color for the legend icon. \n\nDefault value: Data plot fill color",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "legendIconBgColor"
            },
            {
                "description": "Sets the legend icon transparency. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconAlpha"
            },
            {
                "description": "Sets the legend icon background transparency. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconBgAlpha"
            },
            {
                "description": "Sets the number of sides for the legend icon. \n\nDefault value: 4",
                "range": "",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconSides"
            },
            {
                "description": "Sets the thickness of the legend icon border. \n\nDefault value: 1",
                "range": "1-5",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconBorderThickness"
            },
            {
                "description": "Sets the starting angle of for drawing the legend icon. \n\nDefault value: 45",
                "range": "",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "legendIconStartAngle"
            }
        ],
        "description": "The following attributes let you configure the legend properties: "
    },
    {
        "table": "Scroll bar properties",
        "attrs": [
            {
                "description": "Color for the scroll bar.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "scrollColor"
            },
            {
                "description": "Vertical padding between the scroll bar and chart canvas.",
                "range": "In pixels",
                "type": "Number",
                "name": "scrollPadding"
            },
            {
                "description": "Height of scroll bar.",
                "range": "In pixels",
                "type": "Number",
                "name": "scrollHeight"
            },
            {
                "description": "Width of scroll bar.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.11.0",
                "name": "scrollWidth"
            },
            {
                "description": "Width of scroll buttons.",
                "range": "In pixels",
                "type": "Number",
                "name": "scrollBtnWidth"
            },
            {
                "description": "Horizontal padding between the scroll bar and its buttons.",
                "range": "In pixels",
                "type": "Number",
                "name": "scrollBtnPadding"
            },
            {
                "description": "This attribute can be used to set the scroll bar to flat or the basic one. \n\n__Default value__: 1",
                "range": "0/1",
                "type": "Boolean",
                "name": "flatscrollbars"
            }
        ],
        "description": "The following attributes let you configure the scroll bar properties: "
    },
    {
        "table": "Chart Paddings & Margins",
        "attrs": [
            {
                "description": "Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartLeftMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartRightMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartTopMargin"
            },
            {
                "description": "Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartBottomMargin"
            },
            {
                "description": "Horizontal padding between the task bars and start of date labels (if you've opted to show them for the chart).",
                "range": "In pixels",
                "type": "Number",
                "name": "taskDatePadding"
            },
            {
                "description": "This attribute lets you control the space (in pixels) between the sub-caption and top of the chart canvas. If the sub-caption is not defined, it controls the space between caption and top of chart canvas. If neither caption, nor sub-caption is defined, this padding does not come into play.",
                "range": "In pixels",
                "type": "Number",
                "name": "captionPadding"
            },
            {
                "description": "Padding of legend from bottom side of canvas.",
                "range": "In pixels",
                "type": "Number",
                "name": "legendPadding"
            }
        ],
        "description": "The following attributes help you control chart margins and paddings. FusionCharts Suite XT allows you manually customize the padding of various elements on the chart to allow advanced manipulation and control over chart visualization. Padding in FusionCharts Suite XT is always defined in pixels, unless the attribute itself suggests some other scale (like `plotSpacePercent`, which configures the spacing using percentage values). You can also define the chart margins. Chart Margins refer to the empty space left on the top, bottom, left and right of the chart. It's not necessary for you to specify any padding/margin values. FusionCharts Suite XT automatically assumes the best values for the same, if you do not specify the same. "
    },
    {
        "table": "Chart Level Attributes for Customizing Milestone Labels",
        "attrs": [
            {
                "description": "Sets the font family for the milestone label \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.",
                "type": "String",
                "name": "milestoneFont"
            },
            {
                "description": "Sets the font  size for the milestone label \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.",
                "type": "String",
                "name": "milestoneFontSize"
            },
            {
                "description": "Sets the font  color for the milestone label \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.",
                "type": "String",
                "name": "milestoneFontColor"
            },
            {
                "description": "Sets whether the milestone label will be formatted in bold  \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.",
                "range": "0/1",
                "type": "String",
                "name": "milestoneFontBold"
            },
            {
                "description": "Sets whether the milestone label will be formatted in italics  \n\n__Note__: The custom milestone label is defined using the `label` attribute belonging to the `milestone` object.",
                "range": "0/1",
                "type": "String",
                "name": "milestoneFontItalic"
            }
        ],
        "description": "Using these attributes, you can set the various headings and titles of chart like caption, sub-caption."
    },
    {
        "table": "The categories Object",
        "path": "categories",
        "attrs": [
            {
                "description": "Horizontal alignment position of category labels.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "align"
            },
            {
                "description": "Background alpha for each horizontal visual date line.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "Background color for each horizontal visual date line.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Font for this category.",
                "range": "",
                "type": "Font Face",
                "name": "font"
            },
            {
                "description": "Font color for this category.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Font size for this category.",
                "range": "",
                "type": "Number",
                "name": "fontSize"
            },
            {
                "description": "Whether to render font as bold for this category?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isBold"
            },
            {
                "description": "Whether to render font as italic for this category?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isItalic"
            },
            {
                "description": "Whether to render font as underline for this category?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isUnderline"
            },
            {
                "description": "Lets you set the transparency of the hover band. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverBandAlpha"
            },
            {
                "description": "When you hover the mouse cursor over any category, you'll see a colored band moving with the mouse. This attribute lets you set the hover color of that band. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverBandColor"
            },
            {
                "description": "Whether to show the color band of Gantt pane on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showGanttPaneHoverBand"
            },
            {
                "description": "Whether to show the color band on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverBand"
            },
            {
                "description": "Vertical alignment position of category labels.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "vAlign"
            },
            {
                "description": "Vertical padding for the category line - both top & bottom.",
                "range": "In pixels",
                "type": "Number",
                "name": "verticalPadding"
            }
        ],
        "description": "The `categories` object and the `category` object (child of  the `categories` object)  are used to specify x-axis labels for multi-series charts. The attributes of the `categories` object are used to set the font properties of all x-axis labels collectively."
    },
    {
        "table": "The category Object",
        "path": "category",
        "attrs": [
            {
                "description": "Horizontal alignment position of the label.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "align"
            },
            {
                "description": "Background alpha for this category division.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "Background color for this category division.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "End date/time for this category. Needs to be specified in the date/time formats for the chart.",
                "range": "",
                "type": "Date/Time",
                "name": "end"
            },
            {
                "description": "Font face for the label.",
                "range": "",
                "type": "Font face",
                "name": "font"
            },
            {
                "description": "Font color for the label.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Font size for the label.",
                "range": "",
                "type": "Font size",
                "name": "fontSize"
            },
            {
                "description": "Whether this label will appear as bold?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isBold"
            },
            {
                "description": "Whether this label will appear as italic?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isItalic"
            },
            {
                "description": "Whether this label will appear as underlined?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isUnderline"
            },
            {
                "description": "Label for the category. You can specify any text label to be displayed as the category label.\n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Each category label can be linked to an external URL. You need to provide the URL in FusionCharts Link format.",
                "range": "",
                "type": "String",
                "name": "link"
            },
            {
                "description": "Lets you set the transparency of the color band. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverBandAlpha"
            },
            {
                "description": "When you hover the mouse cursor over any category, you'll see a colored band moving with the mouse. This attribute lets you set the hover color of that band. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverBandColor"
            },
            {
                "description": "Whether to show the color band of Gantt pane on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showGanttPaneHoverBand"
            },
            {
                "description": "Whether to show the color band on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverBand"
            },
            {
                "description": "Start date/time for this category. Needs to be specified in the date/time formats for the chart.",
                "range": "",
                "type": "Date/Time",
                "name": "start"
            },
            {
                "description": "Vertical alignment position of the label.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "vAlign"
            }
        ],
        "description": "The attributes of the `category` object are used to define and customize individual x-axis labels for multi-series charts."
    },
    {
        "table": "The processes Object",
        "path": "processes",
        "attrs": [
            {
                "description": "Horizontal alignment for all process names.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "align"
            },
            {
                "description": "Background alpha for the process name column.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "Background color for the process name column.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Font for process name.",
                "range": "",
                "type": "Font Face",
                "name": "font"
            },
            {
                "description": "Font color for process name.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Font size for process name.",
                "range": "",
                "type": "Number",
                "name": "fontSize"
            },
            {
                "description": "Horizontal alignment position of the header label.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "headerAlign"
            },
            {
                "description": "Background alpha of the process header.",
                "range": "0 - 100",
                "type": "Number",
                "name": "headerBgAlpha"
            },
            {
                "description": "Background color of the process header.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "headerBgColor"
            },
            {
                "description": "Font for the process header",
                "range": "",
                "type": "Font face",
                "name": "headerFont"
            },
            {
                "description": "Font color for the process header",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "headerFontColor"
            },
            {
                "description": "Font size for the process header",
                "range": "",
                "type": "Number",
                "name": "headerFontSize"
            },
            {
                "description": "Whether process header should appear bold?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsBold"
            },
            {
                "description": "Whether process header should appear in italics?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsItalic"
            },
            {
                "description": "Whether process header should appear as underlined?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsUnderline"
            },
            {
                "description": "Vertical alignment position of the header label.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "headerVAlign"
            },
            {
                "description": "Header label for the processes column in data table.",
                "range": "",
                "type": "String",
                "name": "headertext"
            },
            {
                "description": "Whether to show process names in bold?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isBold"
            },
            {
                "description": "Whether to show process names in italics?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isItalic"
            },
            {
                "description": "Whether to show process names as underline?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isUnderline"
            },
            {
                "description": "Whether the process column appears as the left-most column of data grid or right-most?",
                "range": "'left' or 'right'",
                "type": "String",
                "name": "positionInGrid"
            },
            {
                "description": "Lets you set the transparency of the color band. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverBandAlpha"
            },
            {
                "description": "When you hover the mouse cursor over any process, you'll see a colored band moving with the mouse. This attribute lets you set the hover color of that band. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverBandColor"
            },
            {
                "description": "Whether to show the color band of Gantt pane on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showGanttPaneHoverBand"
            },
            {
                "description": "Whether to show the color band on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverBand"
            },
            {
                "description": "Vertical alignment for all process names.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "vAlign"
            },
            {
                "description": "Width of the process column in data table. You can either specify it as exact pixels (e.g. 150 or 200) or in percentage (25% or 30%)",
                "range": "In pixels or in percent",
                "type": "Number",
                "name": "width"
            }
        ],
        "description": "Processes on a Gantt chart are created and customized using the `processes` object and its child object, the `process` object. You can show team members, projects, or task lists as a process on a Gantt chart. Processes are shown in the first column of the scrollable data table of the Gantt chart.\n\nThe `processes` object is used to group together all processes for a Gantt chart. Using this attribute, cosmetic properties for all processes can be collectively specified. Additionally, it is also used to create and customize a process header (the first cell of the column that shows the processes).\n\nThese attributes let you customize all processes and the process header."
    },
    {
        "table": "The process Object",
        "path": "process",
        "attrs": [
            {
                "description": "Horizontal alignment position for the process name.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "align"
            },
            {
                "description": "Background alpha for the process name.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "Background color for the process name.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Font face for this process label.",
                "range": "",
                "type": "Font face",
                "name": "font"
            },
            {
                "description": "Font color for this process label.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Font size for this process label.",
                "range": "",
                "type": "Font Size",
                "name": "fontSize"
            },
            {
                "description": "String ID for the process. Each process needs to have a unique identifier to enable cross linking with tasks.",
                "range": "",
                "type": "String",
                "name": "id"
            },
            {
                "description": "Whether to show this process name in bold?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isBold"
            },
            {
                "description": "Whether to show this process name in italics?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isItalic"
            },
            {
                "description": "Whether to show this process name as underline?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isUnderline"
            },
            {
                "description": "The label for the process. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Each process label can be linked to external links. You can specify the link for each process in FusionCharts link format as value of this attribute.",
                "range": "",
                "type": "String",
                "name": "link"
            },
            {
                "description": "Lets you set the transparency of the color band. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverBandAlpha"
            },
            {
                "description": "When you hover the mouse cursor over any process, you'll see a colored band moving with the mouse. This attribute lets you set the hover color of that band. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverBandColor"
            },
            {
                "description": "Whether to show the color band of Gantt pane on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showGanttPaneHoverBand"
            },
            {
                "description": "Whether to show the color band on mouse hover. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverBand"
            },
            {
                "description": "Vertical alignment position for the process name.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "vAlign"
            },
            {
                "description": "Sets the height for a process row.",
                "range": "In Pixels",
                "type": "Number",
                "versionsince": "3.5.0",
                "name": "height"
            }
        ],
        "description": "The `process` object represents individual processes on a Gantt chart. While the `processes` object groups all processes together, it is mandatory to use a `process` object to create a process.\n\nIf the `processes` object is used to configure an attribute globally for all processes, the `process` object can override that property for an individual process.\n\nThese attributes let you create and customize individual processes using the `process` object."
    },
    {
        "table": "The tasks Object",
        "path": "tasks",
        "attrs": [
            {
                "description": "Alpha for the task bar fill.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "If border is to be shown for task bars, this attribute defines the alpha.",
                "range": "0 - 100",
                "type": "Number",
                "name": "borderalpha"
            },
            {
                "description": "If border is to be shown for task bars, this attribute defines the color.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bordercolor"
            },
            {
                "description": "If border is to be shown for task bars, this attribute defines the thickness.",
                "range": "",
                "type": "Number",
                "name": "borderthickness"
            },
            {
                "description": "Fill color for the task bars. This color is manipulated by the task fill gradient formula to attain the required gradient",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Font for all the task labels.",
                "range": "",
                "type": "Font face",
                "name": "font"
            },
            {
                "description": "Font color for all the task labels.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontcolor"
            },
            {
                "description": "Font size for all the task labels.",
                "range": "",
                "type": "Number",
                "name": "fontsize"
            },
            {
                "description": "Whether to show border for task bars?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showborder"
            },
            {
                "description": "Whether to show end date for each task?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showenddate"
            },
            {
                "description": "Whether to show the label for each task (if defined)?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showlabels"
            },
            {
                "description": "If percent complete has been defined for each task, whether to show the same as part of label?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showpercentlabel"
            },
            {
                "description": "Whether to show start date for each task?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showstartdate"
            },
            {
                "description": "Lets you set the color of the task bar slack. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "slackFillColor"
            },
            {
                "description": "Whether to use the mouse hover effect? This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Lets you set the transparency of the hover color for the task bars. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverFillAlpha"
            },
            {
                "description": "Lets you set the hover color of the task bars. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverFillColor"
            },
            {
                "description": "Lets you set the transparency of the hover color of the task bar slack fill. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "slackHoverFillAlpha"
            },
            {
                "description": "Lets you set the hover color of the task bar slack fill. This feature is supported by JavaScript Gantt chart only.",
                "range": "",
                "type": "Number",
                "name": "slackHoverFillColor"
            }
        ],
        "description": "Tasks on a Gantt chart can be created and customized using the `tasks` object and its child object, the `task` object. Tasks are shown in the view pane of a Gantt chart.\n\nThe `tasks` object is used to group together all tasks on chart.\n\nThese attributes let you customize the tasks collectively."
    },
    {
        "table": "The task Object",
        "path": "task",
        "attrs": [
            {
                "description": "Fill alpha for the task bar.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Whether to animate this particular bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "animation"
            },
            {
                "description": "Border alpha for the task bar.",
                "range": "0 - 100",
                "type": "Number",
                "name": "borderAlpha"
            },
            {
                "description": "Border color for the task bar.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "borderColor"
            },
            {
                "description": "Border thickness for the task bar.",
                "range": "",
                "type": "Number",
                "name": "borderThickness"
            },
            {
                "description": "Fill color for the task bar. This color is manipulated by the task fill gradient formula to attain the required gradient",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "End date for the task in the date/time formats specified in XML.",
                "range": "",
                "type": "Date/Time",
                "name": "end"
            },
            {
                "description": "Font for the task label.",
                "range": "",
                "type": "Font face",
                "name": "font"
            },
            {
                "description": "Font color for the task label.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Font size for the task label.",
                "range": "In pixels",
                "type": "Number",
                "name": "fontSize"
            },
            {
                "description": "Height for the task bar either in pixels (e.g., 30 or 25) or in percent (e.g., 25% or 50%)",
                "range": "In pixels or in percent",
                "type": "Number",
                "name": "height"
            },
            {
                "description": "Each task can have its own unique ID. It is used for linking connectors and milestones.",
                "range": "",
                "type": "String identifier",
                "name": "id"
            },
            {
                "description": "String label for the task. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Link for the task bar (in FusionCharts link format)",
                "range": "",
                "type": "String",
                "name": "link"
            },
            {
                "description": "Each task can be shown as incomplete task by specifying the percent completed here.",
                "range": "",
                "type": "Number",
                "name": "percentComplete"
            },
            {
                "description": "You can relate each task to its process using the process ID, which can be specified here.",
                "range": "",
                "type": "String identifier",
                "name": "processId"
            },
            {
                "description": "Whether to render the task bar visually as a group?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showAsGroup"
            },
            {
                "description": "Whether to show border for the task bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showBorder"
            },
            {
                "description": "Whether to show end date label for the task bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showEndDate"
            },
            {
                "description": "Whether to show the label for this task bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLabel"
            },
            {
                "description": "Whether to include percent complete in the label for this task bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPercentLabel"
            },
            {
                "description": "Whether to show start date for the task bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showStartDate"
            },
            {
                "description": "Whether to use the mouse hover effect? This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Lets you set the transparency of the hover color for individual task bar. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverFillAlpha"
            },
            {
                "description": "Lets you set the hover color of individual task bar. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverFillColor"
            },
            {
                "description": "Lets you set the transparency of the hover color of slack fill for individual task bar. This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "slackHoverFillAlpha"
            },
            {
                "description": "Lets you set the hover color of slack fill for individual task bar. This feature is supported by JavaScript Gantt chart only.",
                "range": "",
                "type": "Number",
                "name": "slackHoverFillColor"
            },
            {
                "description": "Start date for the task in the date/time formats specified in XML.",
                "range": "",
                "type": "Date/Time",
                "name": "start"
            },
            {
                "description": "If you want to have custom tool text for each task bar, you can specify it here.",
                "range": "",
                "type": "String",
                "name": "toolText"
            },
            {
                "description": "Padding required at the top of the task bar either in pixels or in percent.",
                "range": "In pixels or in percent",
                "type": "Number",
                "name": "topPadding"
            }
        ],
        "description": "The `task` object represents individual tasks on a Gantt chart. While the `tasks` object groups all tasks together, it is mandatory to use a `task` object to create a task.\n\nIf the `tasks` object is used to configure an attribute globally for all tasks, the `task` object can override that property for an individual task.\n\nThese attributes let you create and customize individual tasks."
    },
    {
        "table": "The dataTable Object",
        "path": "dataTable",
        "attrs": [
            {
                "description": "Horizontal alignment position for all the cells in the data table.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "align"
            },
            {
                "description": "Background alpha for all the cells in the data table.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "Background color for all the cells in the data table.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Font for all the cells in the data table.",
                "range": "",
                "type": "Font face",
                "name": "font"
            },
            {
                "description": "Font color for all the cells in the data table.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Font size for all the cells in the data table.",
                "range": "",
                "type": "Number",
                "name": "fontSize"
            },
            {
                "description": "Horizontal alignment position for all column headers in the data table.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "headerAlign"
            },
            {
                "description": "Background alpha for all column headers in the data table.",
                "range": "0 - 100",
                "type": "Number",
                "name": "headerBgAlpha"
            },
            {
                "description": "Background color for all column headers in the data table.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "headerBgColor"
            },
            {
                "description": "Font face for all column headers in the data table.",
                "range": "",
                "type": "Font face",
                "name": "headerFont"
            },
            {
                "description": "Font color for all column headers in the data table.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "headerFontColor"
            },
            {
                "description": "Font size for all column headers in the data table.",
                "range": "",
                "type": "Number",
                "name": "headerFontSize"
            },
            {
                "description": "Whether header should appear bold for all column headers in the data table?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsBold"
            },
            {
                "description": "Whether header should appear in italics for all column headers in the data table?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsItalic"
            },
            {
                "description": "Whether header should appear in underline for all column headers in the data table?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsUnderline"
            },
            {
                "description": "Vertical alignment position for all column headers in the data table.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "headerVAlign"
            },
            {
                "description": "Whether to show text in bold for all the cells in the data table?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isBold"
            },
            {
                "description": "Whether to show text in italics for all the cells in the data table?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isItalic"
            },
            {
                "description": "Whether to show text as underline for all the cells in the data table?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isUnderline"
            },
            {
                "description": "Vertical alignment position for all the cells in the data table.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "vAlign"
            }
        ],
        "description": "Additional data for processes/tasks in a Gantt chart can be shown using a data table.\n\nData tables in a Gantt chart are created and customized using the `dataTable`, `dataColumn` (child of `dataTable`), and the `text` (child of `dataColumn`) objects.\n\nThe `dataTable` object is used to create this table and collectively configure all the columns and cells in these tables. This object is also used to define header(s) for the added data columns.\n\nThese attributes let you create and configure the data table."
    },
    {
        "table": "The dataColumn Object",
        "path": "dataColumn",
        "attrs": [
            {
                "description": "Horizontal alignment position for all the cells in this data column.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "align"
            },
            {
                "description": "Background alpha for all the cells in this data column.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "Background color for all the cells in this data column.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Font for all the cells in this data column.",
                "range": "",
                "type": "Font face",
                "name": "font"
            },
            {
                "description": "Font color for all the cells in this data column.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Font size for all the cells in this data column.",
                "range": "",
                "type": "Number",
                "name": "fontSize"
            },
            {
                "description": "Horizontal alignment position for the column header.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "headerAlign"
            },
            {
                "description": "Background alpha for the column header.",
                "range": "0 - 100",
                "type": "Number",
                "name": "headerBgAlpha"
            },
            {
                "description": "Background color for the column header.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "headerBgColor"
            },
            {
                "description": "Font face for the column header.",
                "range": "",
                "type": "Font face",
                "name": "headerFont"
            },
            {
                "range": "Font color for the column header.",
                "type": "Color",
                "name": "headerFontColor"
            },
            {
                "description": "Font size for the column header.",
                "range": "",
                "type": "Number",
                "name": "headerFontSize"
            },
            {
                "description": "Whether header should appear bold for the column header?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsBold"
            },
            {
                "description": "Whether header should appear in italics for the column header?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsItalic"
            },
            {
                "description": "Whether header should appear in underline the column header?",
                "range": "0/1",
                "type": "Boolean",
                "name": "headerIsUnderline"
            },
            {
                "description": "Link for the header.",
                "range": "",
                "type": "Link in FusionCharts format",
                "name": "headerLink"
            },
            {
                "description": "Label for the header.",
                "range": "",
                "type": "String",
                "name": "headerText"
            },
            {
                "description": "Vertical alignment position for the column header.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "headerVAlign"
            },
            {
                "description": "Whether to show text in bold for all the cells in this data column?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isBold"
            },
            {
                "description": "Whether to show text in italics for all the cells in this data column?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isItalic"
            },
            {
                "description": "Whether to show text as underline for all the cells in this data column?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isUnderline"
            },
            {
                "description": "Vertical alignment position for all the cells in this data column.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "vAlign"
            },
            {
                "description": "Width of this column in number (100 or 200) or percent (25% or 45%)",
                "range": "In pixels or in percent",
                "type": "Number",
                "name": "width"
            }
        ],
        "description": "The `dataColumn` object represents individual columns in a data table. It is also used to collectively customize all the cells in a column.\n\nWhile the `dataTable` object creates the framework of a table, it is mandatory to use a `dataColumn` object to create a column. \n\nIf the `dataTable` object is used to configure an attribute globally for all columns, the `dataColumn` object can override that property for individual columns. It can also override the header properties configured for the columns.\n\nThese attributes let you create and configure columns for the data table."
    },
    {
        "table": "The text Object",
        "path": "text",
        "attrs": [
            {
                "description": "Horizontal alignment position of the label.",
                "range": "'left', 'center' or 'right'",
                "type": "String",
                "name": "align"
            },
            {
                "description": "Background alpha for the cell.",
                "range": "0 - 100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "Background color for the cell.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "bgColor"
            },
            {
                "description": "Font for the cell.",
                "range": "",
                "type": "Font face",
                "name": "font"
            },
            {
                "description": "Font color for the cell.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "fontColor"
            },
            {
                "description": "Font size for the cell.",
                "range": "",
                "type": "Number",
                "name": "fontSize"
            },
            {
                "description": "Whether to show text in bold?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isBold"
            },
            {
                "description": "Whether to show text in italics?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isItalic"
            },
            {
                "description": "Whether to show text as underline?",
                "range": "0/1",
                "type": "Boolean",
                "name": "isUnderline"
            },
            {
                "description": "String label to be displayed in the cell. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Link for the label.",
                "range": "",
                "type": "String",
                "name": "link"
            },
            {
                "description": "Vertical alignment position of the label.",
                "range": "'top', 'middle' or 'bottom'",
                "type": "String",
                "name": "vAlign"
            }
        ],
        "description": "The `text` object represents individual cells in the data table. While the `dataColumn` object adds a column to the framework created by the `dataTable` object, it is mandatory to use the `text` object to add cells to the columns.\n\nIf the `dataTable`/`dataColumn` objects are used to configure an attribute globally for all cells, the `text` object can override that property for individual cells.\n\nThese attributes let you create and configure individual cells for the columns in the data table."
    },
    {
        "table": "The connectors Object",
        "path": "connectors",
        "attrs": [
            {
                "description": "Alpha of the connector lines.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Color for the connector line",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether to use the mouse hover effect? This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Lets you set the transparency of the hover color for the connector lines. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverAlpha"
            },
            {
                "description": "Lets you set the hover color of the connector lines. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverColor"
            },
            {
                "description": "Lets you set the thickness of the hover effect for the connector lines. This feature is supported by JavaScript Gantt chart only.",
                "range": "",
                "type": "Number",
                "name": "hoverThickness"
            },
            {
                "description": "Whether the connectors should be rendered as dashed lines. \n\n__Default value__: 0 (connectors rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "isDashed"
            },
            {
                "description": "Thickness of the connector lines.",
                "range": "",
                "type": "Number",
                "name": "thickness"
            }
        ],
        "description": "Connectors, for connecting two chart elements, can be created and customized using the `connectors` object and its child object, the `connector` object.\n\nThe `connectors` object groups together all the connectors on a chart.\n\nThese attributes let you customize all connectors collectively."
    },
    {
        "table": "The connector Object",
        "path": "connector",
        "attrs": [
            {
                "description": "Lets you set links for individual connector items. This feature is supported by JavaScript Gantt chart only.",
                "range": "",
                "type": "String",
                "name": "Link"
            },
            {
                "description": "Alpha of the connector line.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Color of the connector",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether to connect left side of the starting task bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "fromTaskConnectStart"
            },
            {
                "description": "ID of the task which will act as the starting point for connector. You'll need to define IDs for each task before you can define connectors.",
                "range": "",
                "type": "String ID",
                "name": "fromTaskId"
            },
            {
                "description": "Whether to use the mouse hover effect? This feature is supported by JavaScript Gantt chart only.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Lets you set the transparency of the hover color for individual connector line. This feature is supported by JavaScript Gantt chart only.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverAlpha"
            },
            {
                "description": "Lets you set the hover color of individual connector line. This feature is supported by JavaScript Gantt chart only.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverColor"
            },
            {
                "description": "Lets you set the thickness of the hover effect of individual connector line. This feature is supported by JavaScript Gantt chart only.",
                "range": "",
                "type": "Number",
                "name": "hoverThickness"
            },
            {
                "description": "Whether the connector should be rendered as dashed lines. \n\n__Default value__: 0 (connector rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "isDashed"
            },
            {
                "description": "Thickness of the connector.",
                "range": "",
                "type": "Number",
                "name": "thickness"
            },
            {
                "description": "Whether to connect left side of the ending task bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "toTaskConnectStart"
            },
            {
                "description": "ID of the task which will act as the ending point for connector.",
                "range": "",
                "type": "String ID",
                "name": "toTaskId"
            }
        ],
        "description": "Each `connector` object represents a connector that connects two tasks.\n\nThe `connector` object represents individual connectors on a chart. While the `connectors` object can collectively customize the connectors, it is mandatory to use a `connector` object to create a connector.\n\nIf the `connectors` object is used to configure an attribute globally for all connectors, the `connector` object can override that property for individual connectors.\n\nThese attributes let you create and customize individual connectors."
    },
    {
        "table": "The milestone Object",
        "path": "milestone",
        "attrs": [
            {
                "description": "Alpha for the milestone.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Border color for the milestone.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "borderColor"
            },
            {
                "description": "Border thickness for the milestone.",
                "range": "In Pixels",
                "type": "Number",
                "name": "borderThickness"
            },
            {
                "description": "Transparency of border for the milestone.",
                "range": "0 - 100",
                "type": "Number",
                "name": "borderAlpha"
            },
            {
                "description": "Color for the milestone",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Date for the milestone in the specified date format.",
                "range": "",
                "type": "Date",
                "name": "date"
            },
            {
                "description": "Each milestone can be linked to external links. The link should be specified in FusionCharts link format.",
                "range": "",
                "type": "String",
                "name": "link"
            },
            {
                "description": "Number of sides that the milestone should have.",
                "range": "3-15",
                "type": "Number",
                "name": "numSides"
            },
            {
                "description": "Radius for the milestone (in pixels).",
                "range": "2-15",
                "type": "Number",
                "name": "radius"
            },
            {
                "description": "Shape of the milestone.",
                "range": "",
                "type": "star or polygon",
                "name": "shape"
            },
            {
                "description": "Starting angle for the star/polygon.",
                "range": "0-360",
                "type": "Number",
                "name": "startAngle"
            },
            {
                "description": "ID of the task to which this milestone relates to. You must define task IDs before you can use milestones.",
                "range": "",
                "type": "String ID",
                "name": "taskId"
            },
            {
                "description": "Each milestone can have its own tool text, which you can specify here.",
                "range": "",
                "type": "String",
                "name": "toolText"
            },
            {
                "description": "Whether to enable hover effect on milestone",
                "range": "0/1",
                "type": "Boolean",
                "name": "showHoverEffect"
            },
            {
                "description": "Lets you set the hover color of milestone.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverFillColor"
            },
            {
                "description": "Lets you set the transparency of the hover color for milestone.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverFillAlpha"
            },
            {
                "description": "Lets you set the color of the border of milestone when hovered.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "hoverBorderColor"
            },
            {
                "description": "Lets you set the transparency of the border of milestone when hovered.",
                "range": "0 - 100",
                "type": "Number",
                "name": "hoverBorderAlpha"
            },
            {
                "description": "Sets a custom milestone label ",
                "type": "String",
                "name": "label"
            },
            {
                "description": "Sets the font family for the milestone label",
                "type": "String",
                "name": "font"
            },
            {
                "description": "Sets the font size for the milestone label",
                "type": "String",
                "name": "fontSize"
            },
            {
                "description": "Sets the font  color for the milestone label",
                "type": "String",
                "name": "fontColor"
            },
            {
                "description": "Sets whether the milestone label will be formatted in bold",
                "range": "0/1",
                "type": "String",
                "name": "milestoneFontBold"
            },
            {
                "description": "Sets whether the milestone label will be formatted in italics",
                "range": "0/1",
                "type": "String",
                "name": "fontItalic"
            }
        ],
        "description": "The `milestone` object is used to represent individual milestones.\n\nWhile the `milestones` object groups all milestones, it is mandatory to use the `milestone` object to create individual milestones.\n\nIf the `milestones` object is used to configure an attribute globally for all milestones, the `milestone` object can override that property for an individual milestone.\n\nThese attributes let you create and customize individual milestones using the `milestone` object."
    },
    {
        "table": "Trend-lines",
        "path": "line",
        "attrs": [
            {
                "description": "Alpha of the trend line.",
                "range": "0 - 100",
                "type": "Number",
                "name": "alpha"
            },
            {
                "description": "Color for the trend line/zone",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Whether the trendline should be rendered as dashed lines. \n\n__Default value__: 0 (trendline rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "name": "dashed"
            },
            {
                "description": "Sets the length of each dash when trendline is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashLen"
            },
            {
                "description": "Sets the gap between consecutive dashes when trendline is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "name": "dashGap"
            },
            {
                "description": "If you want to display your custom value beneath the trend line, you can do so here. Example, you can show the trend line and label it as &quot;Today&quot;.",
                "range": "",
                "type": "String",
                "name": "displayValue"
            },
            {
                "description": "End date for the trend line/zone. If you intend to draw a trend line instead of a trend zone, then you do not need to specify a value for this attribute.",
                "range": "",
                "type": "Date/Time",
                "name": "end"
            },
            {
                "description": "Whether the trend will be displayed as a line or a zone (fill-colored rectangle).",
                "range": "0/1",
                "type": "Boolean",
                "name": "isTrendZone"
            },
            {
                "description": "Start date/time for the trend line/zone.",
                "range": "",
                "type": "Date/Time",
                "name": "start"
            },
            {
                "description": "Thickness of the trend line.",
                "range": "",
                "type": "Number",
                "name": "thickness"
            }
        ],
        "description": "Trend-lines are horizontal lines that aid in interpretation of data with respect to some pre-determined value. For example, if you are plotting the sales data for the current year, you might want to show the previous year's average monthly sales as a trend indicator for ease of comparison. The `lines` object, child of the `trendlines` object is used to add trend-lines to a chart.\n\nAlthough the `line` object has to be defined within the `trendlines` object, the latter cannot be used to collectively customize trend-lines, because it does not have any attributes of its own.\n\nThe attributes of the `lines` object, child of the `trendlines` object, are used to create and customize trend-lines for charts."
    },
    {
        "table": "Trend-lines (Chart level attributes)",
        "path": "chart",
        "attrs": [
            {
                "description": "Sets color of all the trend lines and its associated text in the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "trendlineColor"
            },
            {
                "description": "If you've opted to show the trend as a line, this attribute lets you define the thickness of all the trend lines in your chart.",
                "range": "In Pixels",
                "type": "Number",
                "name": "trendlineThickness"
            },
            {
                "description": "Sets transparency for all the trend lines in your charts.",
                "range": "0 - 100",
                "type": "Number",
                "name": "trendlineAlpha"
            },
            {
                "description": "Whether all the trend line/zone will be displayed over data plots or under them.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTrendlinesOnTop"
            }
        ],
        "description": "Trend-lines are horizontal lines that aid in interpretation of data with respect to some pre-determined value. For example, if you are plotting the sales data for the current year, you might want to show the previous year's average monthly sales as a trend indicator for ease of comparison. Cosmetics for all the trend-lines rendered can be attained using this set of attributes.\n\nAlthough there are set of attributes of the `line object`, used to create and customize trend-lines, these set of attributes effect all the trend-lines rendered in your chart."
    },
    {
        "table": "Trend-lines Display Value Cosmetics",
        "path": "chart",
        "attrs": [
            {
                "description": "Sets the font family for the trend-line display value.",
                "range": "Font Name",
                "type": "String",
                "versionsince": "3.8.0",
                "name": "trendValueFont"
            },
            {
                "description": "Sets the font size for the trend-line display value.",
                "range": " ",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueFontSize"
            },
            {
                "description": "Sets whether the trend-line display value will be bold formatted. \n\nDefault value: 0 (not bold formatted)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueFontBold"
            },
            {
                "description": "Sets whether the trend-line display value will be italicized. \n\nDefault value: 0 (not italicized)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueFontItalic"
            },
            {
                "description": "Sets the background color for the trend-line display value.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "trendValueBgColor"
            },
            {
                "description": "Sets the border color for the trend-line display value.",
                "range": "Hex Color Code",
                "type": "Color",
                "versionsince": "3.8.0",
                "name": "trendValueBorderColor"
            },
            {
                "description": "Sets the transparency for the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueAlpha"
            },
            {
                "description": "Sets the transparency for the background of the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBgAlpha"
            },
            {
                "description": "Sets the transparency for the border around the trend-line display value. \n\nDefault value: 100",
                "range": "0 - 100",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderAlpha"
            },
            {
                "description": "Sets padding for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderPadding"
            },
            {
                "description": "Sets the radius for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderRadius"
            },
            {
                "description": "Sets the thickness for the border around the trend-line display value. ",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderThickness"
            },
            {
                "description": "Whether the border around the trend-line display value should be rendered as dashed lines. \n\n__Default value__: 0 (border rendered using straight lines)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashed"
            },
            {
                "description": "Sets the length of each dash when the border around the trend-line display value is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashLen"
            },
            {
                "description": "Sets the gap between two consecutive dashes when the border around the trend-line display value is rendered as dashed lines.",
                "range": "In pixels",
                "type": "Number",
                "versionsince": "3.8.0",
                "name": "trendValueBorderDashGap"
            }
        ],
        "description": "These attributes let you customize the text displayed with a trend-line. \n\n__Note__: These attributes belong to the `chart` object and  not to the `line` object (child of the `trendline` object). They are, therefore, applied to all trend-lines on your chart. "
    },
    {
        "table": "The item Object (child of legend Object)",
        "path": "item",
        "attrs": [
            {
                "description": "Color code for the legend item",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "color"
            },
            {
                "description": "Label for the legend item. \n\n __Note__: The `label` attribute replaces the `name` attribute. Previously, either one of the attributes could be used to set the label. Support for the `name` attribute has been discontinued since v3.10.0.",
                "range": "",
                "type": "String",
                "name": "label"
            }
        ],
        "description": "A legend in the Gantt chart can be configured using the `legend` object and its child object, the `item` object.\n\nThe `color` attribute of the `legend` object is used to set a common color for all legend items.\n\nThese attributes of the `item` object are used to configure individual legend items."
    }
]